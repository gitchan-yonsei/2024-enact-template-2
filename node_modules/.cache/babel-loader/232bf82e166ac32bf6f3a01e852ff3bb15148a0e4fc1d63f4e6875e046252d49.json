{"ast":null,"code":"var _jsxFileName = \"/Users/gitchan/Projects/gitchan-yonsei/2024-enact-template/src/views/Main.js\";\nimport Alert from \"@enact/sandstone/Alert\";\nimport BodyText from \"@enact/sandstone/BodyText\";\nimport Button from \"@enact/sandstone/Button\";\nimport { Header, Panel } from \"@enact/sandstone/Panels\";\nimport { usePopup } from \"./MainState\";\nimport css from \"./Main.module.less\";\nimport $L from \"@enact/i18n/$L\";\nimport { useProcStat } from \"../hooks/useData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = props => {\n  const procStat = useProcStat();\n  const {\n    isPopupOpen,\n    handlePopupOpen,\n    handlePopupClose,\n    handleLaunchApp\n  } = usePopup();\n  console.log(\"나는 깃짱\");\n  return /*#__PURE__*/_jsxDEV(Panel, {\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 10\n  }, this);\n\n  // return (\n  // \t<Panel {...props}>\n  // \t\t<Header title={$L('Enact Template')} />\n  // \t\t<BodyText>{$L('This is a main page of sample application.')}</BodyText>\n  // \t\t<Button onClick={handlePopupOpen} size=\"small\" className={css.buttonCell}>\n  // \t\t\t{$L('Open Alert')}\n  // \t\t</Button>\n  // \t\t<BodyText>{`procStat : ${JSON.stringify(procStat)}`}</BodyText>\n  // \t\t<Alert type=\"overlay\" open={isPopupOpen} onClose={handlePopupClose}>\n  // \t\t\t<span>{$L('This is an alert message.')}</span>\n  // \t\t\t<buttons>\n  // \t\t\t\t<Button\n  // \t\t\t\t\tsize=\"small\"\n  // \t\t\t\t\tclassName={css.buttonCell}\n  // \t\t\t\t\tonClick={handleLaunchApp}\n  // \t\t\t\t>\n  // \t\t\t\t\tLaunch\n  // \t\t\t\t</Button>\n  // \t\t\t\t<Button\n  // \t\t\t\t\tsize=\"small\"\n  // \t\t\t\t\tclassName={css.buttonCell}\n  // \t\t\t\t\tonClick={handlePopupClose}\n  // \t\t\t\t>\n  // \t\t\t\t\t{$L('Close')}\n  // \t\t\t\t</Button>\n  // \t\t\t</buttons>\n  // \t\t</Alert>\n  // \t</Panel>\n  // );\n};\n\nexport default Main;","map":{"version":3,"names":["Alert","BodyText","Button","Header","Panel","usePopup","css","$L","useProcStat","jsxDEV","_jsxDEV","Main","props","procStat","isPopupOpen","handlePopupOpen","handlePopupClose","handleLaunchApp","console","log","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/gitchan/Projects/gitchan-yonsei/2024-enact-template/src/views/Main.js"],"sourcesContent":["import Alert from \"@enact/sandstone/Alert\";\nimport BodyText from \"@enact/sandstone/BodyText\";\nimport Button from \"@enact/sandstone/Button\";\nimport { Header, Panel } from \"@enact/sandstone/Panels\";\nimport { usePopup } from \"./MainState\";\n\nimport css from \"./Main.module.less\";\nimport $L from \"@enact/i18n/$L\";\nimport { useProcStat } from \"../hooks/useData\";\n\nconst Main = (props) => {\n  const procStat = useProcStat();\n  const { isPopupOpen, handlePopupOpen, handlePopupClose, handleLaunchApp } =\n    usePopup();\n\n  console.log(\"나는 깃짱\");\n\n  return <Panel {...props}></Panel>;\n\n  // return (\n  // \t<Panel {...props}>\n  // \t\t<Header title={$L('Enact Template')} />\n  // \t\t<BodyText>{$L('This is a main page of sample application.')}</BodyText>\n  // \t\t<Button onClick={handlePopupOpen} size=\"small\" className={css.buttonCell}>\n  // \t\t\t{$L('Open Alert')}\n  // \t\t</Button>\n  // \t\t<BodyText>{`procStat : ${JSON.stringify(procStat)}`}</BodyText>\n  // \t\t<Alert type=\"overlay\" open={isPopupOpen} onClose={handlePopupClose}>\n  // \t\t\t<span>{$L('This is an alert message.')}</span>\n  // \t\t\t<buttons>\n  // \t\t\t\t<Button\n  // \t\t\t\t\tsize=\"small\"\n  // \t\t\t\t\tclassName={css.buttonCell}\n  // \t\t\t\t\tonClick={handleLaunchApp}\n  // \t\t\t\t>\n  // \t\t\t\t\tLaunch\n  // \t\t\t\t</Button>\n  // \t\t\t\t<Button\n  // \t\t\t\t\tsize=\"small\"\n  // \t\t\t\t\tclassName={css.buttonCell}\n  // \t\t\t\t\tonClick={handlePopupClose}\n  // \t\t\t\t>\n  // \t\t\t\t\t{$L('Close')}\n  // \t\t\t\t</Button>\n  // \t\t\t</buttons>\n  // \t\t</Alert>\n  // \t</Panel>\n  // );\n};\n\nexport default Main;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,wBAAwB;AAC1C,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,SAASC,MAAM,EAAEC,KAAK,QAAQ,yBAAyB;AACvD,SAASC,QAAQ,QAAQ,aAAa;AAEtC,OAAOC,GAAG,MAAM,oBAAoB;AACpC,OAAOC,EAAE,MAAM,gBAAgB;AAC/B,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,IAAI,GAAIC,KAAK,IAAK;EACtB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEM,WAAW;IAAEC,eAAe;IAAEC,gBAAgB;IAAEC;EAAgB,CAAC,GACvEZ,QAAQ,CAAC,CAAC;EAEZa,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EAEpB,oBAAOT,OAAA,CAACN,KAAK;IAAA,GAAKQ;EAAK;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAS,CAAC;;EAEjC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;;AAED,eAAeZ,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}