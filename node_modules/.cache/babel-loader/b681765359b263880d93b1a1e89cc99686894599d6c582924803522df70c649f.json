{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.ClickAllow = void 0;\nvar _platform = require(\"@enact/core/platform\");\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\n// It's possible that emitting `onTap` will cause a DOM change before the mousedown fires resulting\n// in multiple tap/click events for the same user action. To avoid this, we store the last touchend\n// target and timestamp to compare against the next mouse down. If the timestamp is different (e.g\n// we're on a hybrid device that emitted a touch event but the next was a mouse event) or the target\n// is the same (or no previous target was set if no touch events have been emitted), we allow the\n// mousedown *across Touchable instances*.\nvar _lastTouchEnd = {\n  target: null,\n  timeStamp: 0\n};\nvar shouldAllowMouseDown = function shouldAllowMouseDown(ev) {\n  return ev.timeStamp !== _lastTouchEnd.timeStamp || ev.target === _lastTouchEnd.target || _lastTouchEnd.target === null;\n};\nvar ClickAllow = /*#__PURE__*/function () {\n  function ClickAllow() {\n    _classCallCheck(this, ClickAllow);\n    this.lastTouchEndTime = 0;\n    this.lastMouseUpTime = 0;\n  }\n  _createClass(ClickAllow, [{\n    key: \"setLastTouchEnd\",\n    value: function setLastTouchEnd(ev) {\n      if (ev && ev.type === 'touchend') {\n        this.lastTouchEndTime = ev.timeStamp;\n        _lastTouchEnd.timeStamp = ev.timeStamp;\n        _lastTouchEnd.target = ev.target;\n      }\n    }\n  }, {\n    key: \"setLastMouseUp\",\n    value: function setLastMouseUp(ev) {\n      if (ev && ev.type === 'mouseup') {\n        this.lastMouseUpTime = ev.timeStamp;\n      }\n    }\n  }, {\n    key: \"shouldAllowMouseEvent\",\n    value: function shouldAllowMouseEvent(ev) {\n      var timeStamp = ev.timeStamp;\n\n      // iOS Safari sends both touch and mouse events (with differing timestamps)\n      return !_platform.platform.ios && this.lastTouchEndTime !== timeStamp && shouldAllowMouseDown(ev);\n    }\n  }, {\n    key: \"shouldAllowTap\",\n    value: function shouldAllowTap(ev) {\n      var type = ev.type,\n        timeStamp = ev.timeStamp;\n\n      // Allow the custom tap event for a “click” when it’s actually a click and it’s not from the\n      // last mouseup event which would have fired the click for us\n      return type === 'click' && this.lastMouseUpTime !== timeStamp;\n    }\n  }]);\n  return ClickAllow;\n}();\nexports.ClickAllow = ClickAllow;\nvar _default = ClickAllow;\nexports[\"default\"] = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","ClickAllow","_platform","require","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","_toPropertyKey","key","_createClass","protoProps","staticProps","prototype","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","Number","_lastTouchEnd","timeStamp","shouldAllowMouseDown","ev","lastTouchEndTime","lastMouseUpTime","setLastTouchEnd","type","setLastMouseUp","shouldAllowMouseEvent","platform","ios","shouldAllowTap","_default"],"sources":["/Users/gitchan/Projects/gitchan-yonsei/2024-enact-template/node_modules/@enact/ui/Touchable/ClickAllow.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.ClickAllow = void 0;\nvar _platform = require(\"@enact/core/platform\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n// It's possible that emitting `onTap` will cause a DOM change before the mousedown fires resulting\n// in multiple tap/click events for the same user action. To avoid this, we store the last touchend\n// target and timestamp to compare against the next mouse down. If the timestamp is different (e.g\n// we're on a hybrid device that emitted a touch event but the next was a mouse event) or the target\n// is the same (or no previous target was set if no touch events have been emitted), we allow the\n// mousedown *across Touchable instances*.\nvar _lastTouchEnd = {\n  target: null,\n  timeStamp: 0\n};\nvar shouldAllowMouseDown = function shouldAllowMouseDown(ev) {\n  return ev.timeStamp !== _lastTouchEnd.timeStamp || ev.target === _lastTouchEnd.target || _lastTouchEnd.target === null;\n};\nvar ClickAllow = /*#__PURE__*/function () {\n  function ClickAllow() {\n    _classCallCheck(this, ClickAllow);\n    this.lastTouchEndTime = 0;\n    this.lastMouseUpTime = 0;\n  }\n  _createClass(ClickAllow, [{\n    key: \"setLastTouchEnd\",\n    value: function setLastTouchEnd(ev) {\n      if (ev && ev.type === 'touchend') {\n        this.lastTouchEndTime = ev.timeStamp;\n        _lastTouchEnd.timeStamp = ev.timeStamp;\n        _lastTouchEnd.target = ev.target;\n      }\n    }\n  }, {\n    key: \"setLastMouseUp\",\n    value: function setLastMouseUp(ev) {\n      if (ev && ev.type === 'mouseup') {\n        this.lastMouseUpTime = ev.timeStamp;\n      }\n    }\n  }, {\n    key: \"shouldAllowMouseEvent\",\n    value: function shouldAllowMouseEvent(ev) {\n      var timeStamp = ev.timeStamp;\n\n      // iOS Safari sends both touch and mouse events (with differing timestamps)\n      return !_platform.platform.ios && this.lastTouchEndTime !== timeStamp && shouldAllowMouseDown(ev);\n    }\n  }, {\n    key: \"shouldAllowTap\",\n    value: function shouldAllowTap(ev) {\n      var type = ev.type,\n        timeStamp = ev.timeStamp;\n\n      // Allow the custom tap event for a “click” when it’s actually a click and it’s not from the\n      // last mouseup event which would have fired the click for us\n      return type === 'click' && this.lastMouseUpTime !== timeStamp;\n    }\n  }]);\n  return ClickAllow;\n}();\nexports.ClickAllow = ClickAllow;\nvar _default = ClickAllow;\nexports[\"default\"] = _default;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}