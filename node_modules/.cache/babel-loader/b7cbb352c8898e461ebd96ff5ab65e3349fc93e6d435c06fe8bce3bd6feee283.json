{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.Skinnable = void 0;\nvar _hoc = _interopRequireDefault(require(\"@enact/core/hoc\"));\nvar _Skinnable = _interopRequireDefault(require(\"@enact/ui/Skinnable\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n/**\n * Exports the {@link sandstone/Skinnable.Skinnable} higher-order component (HOC).\n *\n * @module sandstone/Skinnable\n * @exports Skinnable\n * @public\n */\n\nvar defaultConfig = {\n  skins: {\n    neutral: 'neutral',\n    light: 'light',\n    game: 'game'\n  },\n  allowedVariants: ['highContrast', 'largeText', 'grayscale'],\n  defaultVariants: null\n};\n\n/**\n * This higher-order component is based on {@link ui/Skinnable.Skinnable|ui/Skinnable}.\n *\n * `Skinnable` comes pre-configured for Sandstone's supported skins: \"neutral\" (default) and \"light\".\n * It is used to apply the relevant skinning classes to each component and has been used to\n * pre-select specific skins for some components.\n *\n * Note: This HoC passes `className` to the wrapped component. It must be passed to the main DOM\n * node.\n *\n * @class Skinnable\n * @memberof sandstone/Skinnable\n * @extends ui/Skinnable.Skinnable\n * @hoc\n * @public\n */\nvar Skinnable = (0, _hoc[\"default\"])(defaultConfig, _Skinnable[\"default\"]);\n\n/**\n * Select a skin by name by specifying this property.\n *\n * Available Sandstone skins are `\"neutral\"` (default) and `\"light\"`. This may be changed at runtime.\n * All components already use their defaults, but a skin may be changed via this prop or by using\n * `Skinnable` directly and a config object.\n *\n * Example:\n * ```\n * <Button skin=\"light\">\n * ```\n *\n * @name skin\n * @type {String}\n * @default 'neutral'\n * @memberof sandstone/Skinnable.Skinnable\n * @instance\n * @public\n */\nexports.Skinnable = Skinnable;\nvar _default = Skinnable;\nexports[\"default\"] = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","Skinnable","_hoc","_interopRequireDefault","require","_Skinnable","obj","__esModule","defaultConfig","skins","neutral","light","game","allowedVariants","defaultVariants","_default"],"sources":["/Users/gitchan/Projects/gitchan-yonsei/2024-enact-template/node_modules/@enact/sandstone/Skinnable/Skinnable.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.Skinnable = void 0;\nvar _hoc = _interopRequireDefault(require(\"@enact/core/hoc\"));\nvar _Skinnable = _interopRequireDefault(require(\"@enact/ui/Skinnable\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n/**\n * Exports the {@link sandstone/Skinnable.Skinnable} higher-order component (HOC).\n *\n * @module sandstone/Skinnable\n * @exports Skinnable\n * @public\n */\n\nvar defaultConfig = {\n  skins: {\n    neutral: 'neutral',\n    light: 'light',\n    game: 'game'\n  },\n  allowedVariants: ['highContrast', 'largeText', 'grayscale'],\n  defaultVariants: null\n};\n\n/**\n * This higher-order component is based on {@link ui/Skinnable.Skinnable|ui/Skinnable}.\n *\n * `Skinnable` comes pre-configured for Sandstone's supported skins: \"neutral\" (default) and \"light\".\n * It is used to apply the relevant skinning classes to each component and has been used to\n * pre-select specific skins for some components.\n *\n * Note: This HoC passes `className` to the wrapped component. It must be passed to the main DOM\n * node.\n *\n * @class Skinnable\n * @memberof sandstone/Skinnable\n * @extends ui/Skinnable.Skinnable\n * @hoc\n * @public\n */\nvar Skinnable = (0, _hoc[\"default\"])(defaultConfig, _Skinnable[\"default\"]);\n\n/**\n * Select a skin by name by specifying this property.\n *\n * Available Sandstone skins are `\"neutral\"` (default) and `\"light\"`. This may be changed at runtime.\n * All components already use their defaults, but a skin may be changed via this prop or by using\n * `Skinnable` directly and a config object.\n *\n * Example:\n * ```\n * <Button skin=\"light\">\n * ```\n *\n * @name skin\n * @type {String}\n * @default 'neutral'\n * @memberof sandstone/Skinnable.Skinnable\n * @instance\n * @public\n */\nexports.Skinnable = Skinnable;\nvar _default = Skinnable;\nexports[\"default\"] = _default;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAAC,SAAS,CAAC,GAAGA,OAAO,CAACE,SAAS,GAAG,KAAK,CAAC;AAC/C,IAAIC,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC;AAC7D,IAAIC,UAAU,GAAGF,sBAAsB,CAACC,OAAO,CAAC,qBAAqB,CAAC,CAAC;AACvE,SAASD,sBAAsBA,CAACG,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAAE;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIE,aAAa,GAAG;EAClBC,KAAK,EAAE;IACLC,OAAO,EAAE,SAAS;IAClBC,KAAK,EAAE,OAAO;IACdC,IAAI,EAAE;EACR,CAAC;EACDC,eAAe,EAAE,CAAC,cAAc,EAAE,WAAW,EAAE,WAAW,CAAC;EAC3DC,eAAe,EAAE;AACnB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIb,SAAS,GAAG,CAAC,CAAC,EAAEC,IAAI,CAAC,SAAS,CAAC,EAAEM,aAAa,EAAEH,UAAU,CAAC,SAAS,CAAC,CAAC;;AAE1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAN,OAAO,CAACE,SAAS,GAAGA,SAAS;AAC7B,IAAIc,QAAQ,GAAGd,SAAS;AACxBF,OAAO,CAAC,SAAS,CAAC,GAAGgB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}