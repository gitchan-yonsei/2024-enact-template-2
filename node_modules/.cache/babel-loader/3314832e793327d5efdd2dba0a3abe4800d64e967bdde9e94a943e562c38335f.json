{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deprecate = exports[\"default\"] = void 0;\n/**\n * Provides the `deprecate` method\n *\n * @module core/internal/deprecate\n * @private\n */\n\n// Utility method to format deprecate message\nvar formatMsg = function formatMsg(_ref) {\n  var message = _ref.message,\n    name = _ref.name,\n    until = _ref.until,\n    replacedBy = _ref.replacedBy,\n    since = _ref.since;\n  var msg = 'DEPRECATED:';\n  if (name) {\n    msg += \" \".concat(name);\n  }\n  if (since) {\n    msg += \" since \".concat(since);\n  }\n  if (until) {\n    if (name || since) {\n      msg += '.';\n    }\n    msg += \" Will be removed in \".concat(until);\n  }\n  if (replacedBy) {\n    if (name || since || until) {\n      msg += '.';\n    }\n    msg += \" Replaced by \".concat(replacedBy);\n  }\n  if (name || since || until || replacedBy) {\n    msg += '.';\n  }\n  if (message) {\n    msg += \" \".concat(message, \".\");\n  }\n  return msg;\n};\n\n// Utility method for console warning\nvar warn = function warn(msg) {\n  if (typeof console !== 'undefined') {\n    console.warn(msg); // eslint-disable-line no-console\n  }\n};\n\n/**\n * Marks a function, component or property (via `propTypes`) as deprecated. Deprecated items will\n * log a message on first invocation. Can also be used 'stand-alone' to issue a deprecation warning.\n * In stand-alone mode it currently will log every time.  In production mode, the deprecation\n * warning disappears.\n *\n * @function\n * @param {*} thing - The thing to be wrapped, or the deprecation config in stand-alone\n * @param {Object?} config - The deprecation config\n * @param {String?} config.name - An optional name for the deprecated item\n * @param {String?} config.message - An optional message to display\n * @param {String?} config.since - The version where deprecation started (optional)\n * @param {String?} config.until - The version where the functionality will be removed (optional)\n * @param {String?} config.replacedBy - An optional alternative\n * @param {Boolean?} config.alwaysWarn - If `true`, a warning will be issued for every access\n * @returns {*} Either a wrapped version of `thing` or an unwrapped version of `thing` in\n *\tproduction or stand-alone mode\n * @memberof core/internal/deprecate\n * @private\n */\nvar deprecate = function deprecate(thing, config) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!config) {\n      // If no config, config only invocation, just log message\n      var msg = formatMsg(thing);\n      warn(msg);\n      return thing;\n    } else {\n      var displayed, _msg;\n      return function () {\n        if (!displayed || config.alwaysWarn) {\n          if (!_msg) {\n            _msg = formatMsg(config);\n          }\n          warn(_msg);\n          displayed = true;\n        }\n        return thing.apply(void 0, arguments);\n      };\n    }\n  } else {\n    /* istanbul ignore next */\n    return thing;\n  }\n};\nexports.deprecate = deprecate;\nvar _default = deprecate;\nexports[\"default\"] = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","deprecate","formatMsg","_ref","message","name","until","replacedBy","since","msg","concat","warn","console","thing","config","process","env","NODE_ENV","displayed","_msg","alwaysWarn","apply","arguments","_default"],"sources":["/Users/gitchan/Projects/gitchan-yonsei/2024-enact-template/node_modules/@enact/core/internal/deprecate/deprecate.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deprecate = exports[\"default\"] = void 0;\n/**\n * Provides the `deprecate` method\n *\n * @module core/internal/deprecate\n * @private\n */\n\n// Utility method to format deprecate message\nvar formatMsg = function formatMsg(_ref) {\n  var message = _ref.message,\n    name = _ref.name,\n    until = _ref.until,\n    replacedBy = _ref.replacedBy,\n    since = _ref.since;\n  var msg = 'DEPRECATED:';\n  if (name) {\n    msg += \" \".concat(name);\n  }\n  if (since) {\n    msg += \" since \".concat(since);\n  }\n  if (until) {\n    if (name || since) {\n      msg += '.';\n    }\n    msg += \" Will be removed in \".concat(until);\n  }\n  if (replacedBy) {\n    if (name || since || until) {\n      msg += '.';\n    }\n    msg += \" Replaced by \".concat(replacedBy);\n  }\n  if (name || since || until || replacedBy) {\n    msg += '.';\n  }\n  if (message) {\n    msg += \" \".concat(message, \".\");\n  }\n  return msg;\n};\n\n// Utility method for console warning\nvar warn = function warn(msg) {\n  if (typeof console !== 'undefined') {\n    console.warn(msg); // eslint-disable-line no-console\n  }\n};\n\n/**\n * Marks a function, component or property (via `propTypes`) as deprecated. Deprecated items will\n * log a message on first invocation. Can also be used 'stand-alone' to issue a deprecation warning.\n * In stand-alone mode it currently will log every time.  In production mode, the deprecation\n * warning disappears.\n *\n * @function\n * @param {*} thing - The thing to be wrapped, or the deprecation config in stand-alone\n * @param {Object?} config - The deprecation config\n * @param {String?} config.name - An optional name for the deprecated item\n * @param {String?} config.message - An optional message to display\n * @param {String?} config.since - The version where deprecation started (optional)\n * @param {String?} config.until - The version where the functionality will be removed (optional)\n * @param {String?} config.replacedBy - An optional alternative\n * @param {Boolean?} config.alwaysWarn - If `true`, a warning will be issued for every access\n * @returns {*} Either a wrapped version of `thing` or an unwrapped version of `thing` in\n *\tproduction or stand-alone mode\n * @memberof core/internal/deprecate\n * @private\n */\nvar deprecate = function deprecate(thing, config) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!config) {\n      // If no config, config only invocation, just log message\n      var msg = formatMsg(thing);\n      warn(msg);\n      return thing;\n    } else {\n      var displayed, _msg;\n      return function () {\n        if (!displayed || config.alwaysWarn) {\n          if (!_msg) {\n            _msg = formatMsg(config);\n          }\n          warn(_msg);\n          displayed = true;\n        }\n        return thing.apply(void 0, arguments);\n      };\n    }\n  } else {\n    /* istanbul ignore next */\n    return thing;\n  }\n};\nexports.deprecate = deprecate;\nvar _default = deprecate;\nexports[\"default\"] = _default;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}