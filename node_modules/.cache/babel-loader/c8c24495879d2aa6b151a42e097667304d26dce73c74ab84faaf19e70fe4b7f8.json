{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setDefaultTargetById = exports.once = exports.on = exports.off = void 0;\nvar _curry = _interopRequireDefault(require(\"ramda/src/curry\"));\nvar _listeners = require(\"./listeners\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n/**\n * Provides methods to add and remove global event listeners.\n *\n * @module core/dispatcher\n * @exports off\n * @exports on\n * @exports once\n */\n\nvar defaultTarget = typeof document === 'object' && document;\nvar rootId;\n\n/*\n * Sets a selector for the default target. If no selector is set, `document` is the default target.\n *\n * @function\n * @param\t{String}\tid\tNode id of the default target\n *\n * @returns {undefined}\n * @memberof core/dispatcher\n * @private\n */\nvar setDefaultTargetById = function setDefaultTargetById(id) {\n  defaultTarget = typeof document === 'object' && document.querySelector('#' + id) || defaultTarget;\n  rootId = id;\n};\n\n/*\n * Checks if the default target of `document` exists before returning it, otherwise returns `false`.\n * If the default target is falsy and the stored id of the root exists, it tries to find the\n * default target based on the id.\n *\n * @function\n *\n * @returns {Node|Boolean}\n * @memberof core/dispatcher\n * @private\n */\nexports.setDefaultTargetById = setDefaultTargetById;\nvar getDefaultTarget = function getDefaultTarget() {\n  if (!defaultTarget && rootId) {\n    setDefaultTargetById(rootId);\n  }\n  return defaultTarget;\n};\n\n/*\n * Wraps event callbacks with a try-catch block to prevent unrelated code from blocking.\n *\n * @function\n * @param\t{Event}\t\tev\tEvent payload\n * @param\t{Function}\tfn\tEvent callback\n *\n * @returns\t{undefined}\n * @memberof core/dispatcher\n * @private\n */\nvar invoker = (0, _curry[\"default\"])(function (ev, fn) {\n  try {\n    fn(ev);\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.error(\"A \".concat(e.name, \" occurred during event handling with the message '\").concat(e.message, \"'\"));\n  }\n});\n\n/*\n * Dispatches an event to the registered handlers.\n *\n * @function\n * @param\t{Event}\t\tev\tEvent payload\n *\n * @returns {undefined}\n * @memberof core/dispatcher\n * @private\n */\nvar dispatcher = function dispatcher(ev) {\n  var name = ev.type;\n  var listeners = (0, _listeners.getListeners)(ev.currentTarget, name);\n  if (listeners) {\n    var inv = invoker(ev);\n    listeners.forEach(inv);\n  }\n};\n\n/**\n * Adds a new global event listener. Duplicate event handlers will be discarded.\n *\n * @function\n * @param\t{String}\tname\t\t\t\tEvent name\n * @param\t{Function}\tfn\t\t\t\t\tEvent handler\n * @param\t{Node}\t\t[target='document']\tEvent listener target\n *\n * @returns {undefined}\n * @memberof core/dispatcher\n * @public\n */\nvar on = function on(name, fn) {\n  var target = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : getDefaultTarget();\n  if (target) {\n    var added = (0, _listeners.addListener)(target, name, fn);\n    if (added && (0, _listeners.getListeners)(target, name).length === 1) {\n      target.addEventListener(name, dispatcher);\n    }\n  }\n};\n\n/**\n * Removes a global event listener.\n *\n * @function\n * @param\t{String}\tname\t\t\t\tEvent name\n * @param\t{Function}\tfn\t\t\t\t\tEvent handler\n * @param\t{Node}\t\t[target=`document`]\tEvent listener target\n *\n * @returns {undefined}\n * @memberof core/dispatcher\n * @public\n */\nexports.on = on;\nvar off = function off(name, fn) {\n  var target = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : getDefaultTarget();\n  if (target) {\n    var listeners = (0, _listeners.getListeners)(target, name);\n    var index = listeners.indexOf(fn);\n    if (index >= 0) {\n      listeners.splice(index, 1);\n      if (listeners.length === 0) {\n        target.removeEventListener(name, dispatcher);\n      }\n    }\n  }\n};\n\n/**\n * Adds a new global event listener that removes itself after handling one event.\n *\n * @function\n * @param\t{String}\tname\t\tEvent name\n * @param\t{Function}\tfn\t\t\tEvent handler\n * @param\t{Node}\t\t[target]\tEvent listener target\n *\n * @returns {Function}\t\t\t\tThe single-use handler. To remove the handler manually, call\n *\t\t\t\t\t\t\t\t\tthe `off()` function with this as the 2nd parameter.\n * @memberof core/dispatcher\n * @public\n */\nexports.off = off;\nvar once = function once(name, fn, target) {\n  var onceFn = function onceFn(ev) {\n    fn(ev);\n    off(name, onceFn, target);\n  };\n  on(name, onceFn, target);\n  return onceFn;\n};\nexports.once = once;","map":{"version":3,"names":["Object","defineProperty","exports","value","setDefaultTargetById","once","on","off","_curry","_interopRequireDefault","require","_listeners","obj","__esModule","defaultTarget","document","rootId","id","querySelector","getDefaultTarget","invoker","ev","fn","e","console","error","concat","name","message","dispatcher","type","listeners","getListeners","currentTarget","inv","forEach","target","arguments","length","undefined","added","addListener","addEventListener","index","indexOf","splice","removeEventListener","onceFn"],"sources":["/Users/gitchan/Projects/gitchan-yonsei/2024-enact-template/node_modules/@enact/core/dispatcher/dispatcher.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setDefaultTargetById = exports.once = exports.on = exports.off = void 0;\nvar _curry = _interopRequireDefault(require(\"ramda/src/curry\"));\nvar _listeners = require(\"./listeners\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n/**\n * Provides methods to add and remove global event listeners.\n *\n * @module core/dispatcher\n * @exports off\n * @exports on\n * @exports once\n */\n\nvar defaultTarget = typeof document === 'object' && document;\nvar rootId;\n\n/*\n * Sets a selector for the default target. If no selector is set, `document` is the default target.\n *\n * @function\n * @param\t{String}\tid\tNode id of the default target\n *\n * @returns {undefined}\n * @memberof core/dispatcher\n * @private\n */\nvar setDefaultTargetById = function setDefaultTargetById(id) {\n  defaultTarget = typeof document === 'object' && document.querySelector('#' + id) || defaultTarget;\n  rootId = id;\n};\n\n/*\n * Checks if the default target of `document` exists before returning it, otherwise returns `false`.\n * If the default target is falsy and the stored id of the root exists, it tries to find the\n * default target based on the id.\n *\n * @function\n *\n * @returns {Node|Boolean}\n * @memberof core/dispatcher\n * @private\n */\nexports.setDefaultTargetById = setDefaultTargetById;\nvar getDefaultTarget = function getDefaultTarget() {\n  if (!defaultTarget && rootId) {\n    setDefaultTargetById(rootId);\n  }\n  return defaultTarget;\n};\n\n/*\n * Wraps event callbacks with a try-catch block to prevent unrelated code from blocking.\n *\n * @function\n * @param\t{Event}\t\tev\tEvent payload\n * @param\t{Function}\tfn\tEvent callback\n *\n * @returns\t{undefined}\n * @memberof core/dispatcher\n * @private\n */\nvar invoker = (0, _curry[\"default\"])(function (ev, fn) {\n  try {\n    fn(ev);\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.error(\"A \".concat(e.name, \" occurred during event handling with the message '\").concat(e.message, \"'\"));\n  }\n});\n\n/*\n * Dispatches an event to the registered handlers.\n *\n * @function\n * @param\t{Event}\t\tev\tEvent payload\n *\n * @returns {undefined}\n * @memberof core/dispatcher\n * @private\n */\nvar dispatcher = function dispatcher(ev) {\n  var name = ev.type;\n  var listeners = (0, _listeners.getListeners)(ev.currentTarget, name);\n  if (listeners) {\n    var inv = invoker(ev);\n    listeners.forEach(inv);\n  }\n};\n\n/**\n * Adds a new global event listener. Duplicate event handlers will be discarded.\n *\n * @function\n * @param\t{String}\tname\t\t\t\tEvent name\n * @param\t{Function}\tfn\t\t\t\t\tEvent handler\n * @param\t{Node}\t\t[target='document']\tEvent listener target\n *\n * @returns {undefined}\n * @memberof core/dispatcher\n * @public\n */\nvar on = function on(name, fn) {\n  var target = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : getDefaultTarget();\n  if (target) {\n    var added = (0, _listeners.addListener)(target, name, fn);\n    if (added && (0, _listeners.getListeners)(target, name).length === 1) {\n      target.addEventListener(name, dispatcher);\n    }\n  }\n};\n\n/**\n * Removes a global event listener.\n *\n * @function\n * @param\t{String}\tname\t\t\t\tEvent name\n * @param\t{Function}\tfn\t\t\t\t\tEvent handler\n * @param\t{Node}\t\t[target=`document`]\tEvent listener target\n *\n * @returns {undefined}\n * @memberof core/dispatcher\n * @public\n */\nexports.on = on;\nvar off = function off(name, fn) {\n  var target = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : getDefaultTarget();\n  if (target) {\n    var listeners = (0, _listeners.getListeners)(target, name);\n    var index = listeners.indexOf(fn);\n    if (index >= 0) {\n      listeners.splice(index, 1);\n      if (listeners.length === 0) {\n        target.removeEventListener(name, dispatcher);\n      }\n    }\n  }\n};\n\n/**\n * Adds a new global event listener that removes itself after handling one event.\n *\n * @function\n * @param\t{String}\tname\t\tEvent name\n * @param\t{Function}\tfn\t\t\tEvent handler\n * @param\t{Node}\t\t[target]\tEvent listener target\n *\n * @returns {Function}\t\t\t\tThe single-use handler. To remove the handler manually, call\n *\t\t\t\t\t\t\t\t\tthe `off()` function with this as the 2nd parameter.\n * @memberof core/dispatcher\n * @public\n */\nexports.off = off;\nvar once = function once(name, fn, target) {\n  var onceFn = function onceFn(ev) {\n    fn(ev);\n    off(name, onceFn, target);\n  };\n  on(name, onceFn, target);\n  return onceFn;\n};\nexports.once = once;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}