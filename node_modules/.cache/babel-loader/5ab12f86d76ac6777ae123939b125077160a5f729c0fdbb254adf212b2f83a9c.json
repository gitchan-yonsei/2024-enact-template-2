{"ast":null,"code":"var _jsxFileName = \"/Users/gitchan/Projects/gitchan-yonsei/2024-enact-template/src/views/Main.js\";\nimport Alert from \"@enact/sandstone/Alert\";\nimport BodyText from \"@enact/sandstone/BodyText\";\nimport Button from \"@enact/sandstone/Button\";\nimport { Header, Panel } from \"@enact/sandstone/Panels\";\nimport { usePopup } from \"./MainState\";\nimport css from \"./Main.module.less\";\nimport $L from \"@enact/i18n/$L\";\nimport { useProcStat } from \"../hooks/useData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = props => {\n  const procStat = useProcStat();\n  const {\n    isPopupOpen,\n    handlePopupOpen,\n    handlePopupClose,\n    handleLaunchApp\n  } = usePopup();\n  var request = webOS.service.request(\"luna://com.palm.connectionmanager\", {\n    method: \"getStatus\",\n    onSuccess: function (inResponse) {\n      console.log(\"Result: \" + JSON.stringify(inResponse));\n      // To-Do something\n    },\n\n    onFailure: function (inError) {\n      console.log(\"Failed to get network state\");\n      console.log(\"[\" + inError.errorCode + \"]: \" + inError.errorText);\n      // To-Do something\n      return;\n    }\n  });\n\n  //   return <Panel {...props}>\n\n  //   </Panel>;\n\n  return /*#__PURE__*/_jsxDEV(Panel, {\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: $L(\"Enact Template\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BodyText, {\n      children: $L(\"This is a main page of sample application.\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handlePopupOpen,\n      size: \"small\",\n      className: css.buttonCell,\n      children: $L(\"Open Alert\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BodyText, {\n      children: `procStat : ${JSON.stringify(procStat)}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      type: \"overlay\",\n      open: isPopupOpen,\n      onClose: handlePopupClose,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: $L(\"This is an alert message.\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"buttons\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          className: css.buttonCell,\n          onClick: handleLaunchApp,\n          children: \"Launch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          className: css.buttonCell,\n          onClick: handlePopupClose,\n          children: $L(\"Close\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\nexport default Main;","map":{"version":3,"names":["Alert","BodyText","Button","Header","Panel","usePopup","css","$L","useProcStat","jsxDEV","_jsxDEV","Main","props","procStat","isPopupOpen","handlePopupOpen","handlePopupClose","handleLaunchApp","request","webOS","service","method","onSuccess","inResponse","console","log","JSON","stringify","onFailure","inError","errorCode","errorText","children","title","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","className","buttonCell","type","open","onClose"],"sources":["/Users/gitchan/Projects/gitchan-yonsei/2024-enact-template/src/views/Main.js"],"sourcesContent":["import Alert from \"@enact/sandstone/Alert\";\nimport BodyText from \"@enact/sandstone/BodyText\";\nimport Button from \"@enact/sandstone/Button\";\nimport { Header, Panel } from \"@enact/sandstone/Panels\";\nimport { usePopup } from \"./MainState\";\n\nimport css from \"./Main.module.less\";\nimport $L from \"@enact/i18n/$L\";\nimport { useProcStat } from \"../hooks/useData\";\n\nconst Main = (props) => {\n  const procStat = useProcStat();\n  const { isPopupOpen, handlePopupOpen, handlePopupClose, handleLaunchApp } =\n    usePopup();\n\n  var request = webOS.service.request(\"luna://com.palm.connectionmanager\", {\n    method: \"getStatus\",\n    onSuccess: function (inResponse) {\n      console.log(\"Result: \" + JSON.stringify(inResponse));\n      // To-Do something\n    },\n    onFailure: function (inError) {\n      console.log(\"Failed to get network state\");\n      console.log(\"[\" + inError.errorCode + \"]: \" + inError.errorText);\n      // To-Do something\n      return;\n    },\n  });\n\n  //   return <Panel {...props}>\n\n  //   </Panel>;\n\n  return (\n    <Panel {...props}>\n      <Header title={$L(\"Enact Template\")} />\n      <BodyText>{$L(\"This is a main page of sample application.\")}</BodyText>\n      <Button onClick={handlePopupOpen} size=\"small\" className={css.buttonCell}>\n        {$L(\"Open Alert\")}\n      </Button>\n      <BodyText>{`procStat : ${JSON.stringify(procStat)}`}</BodyText>\n      <Alert type=\"overlay\" open={isPopupOpen} onClose={handlePopupClose}>\n        <span>{$L(\"This is an alert message.\")}</span>\n        <buttons>\n          <Button\n            size=\"small\"\n            className={css.buttonCell}\n            onClick={handleLaunchApp}\n          >\n            Launch\n          </Button>\n          <Button\n            size=\"small\"\n            className={css.buttonCell}\n            onClick={handlePopupClose}\n          >\n            {$L(\"Close\")}\n          </Button>\n        </buttons>\n      </Alert>\n    </Panel>\n  );\n};\n\nexport default Main;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}