{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.styles = exports[\"default\"] = void 0;\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\nvar _util = require(\"../util\");\nvar _util2 = require(\"./util\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n/**\n * Merges external and internal CSS classes and style objects. Internal CSS classes can be\n * optionally mapped to alternate names (e.g. those generated by CSS modules) by including a\n * `css` parameter.\n *\n * Example:\n * ```\n *\tconst stylesConfig = {\n *\t\tcss: {\n *\t\t\tbutton: 'unambiguous-button-class-name',\n *\t\t\tclient: 'unambiguous-button-class-name-client'\n *\t\t},\n *\t\tclassName: 'button global-class',\n *\t\tstyle: {\n *\t\t\tcolor: 'red'\n *\t\t}\n *\t};\n *\n *\tconst props = {\n *\t\tclassName: 'my-button',\n *\t\tstyle: {\n *\t\t\tdisplay: 'none'\n *\t\t}\n *\t};\n *\n *\tconst renderStyles = styles(stylesConfig);\n *\tconst renderStyles(props); // {className: 'unambiguous-button-class-name global-class', styles: {color: 'red', display: 'none'}}\n * ```\n *\n * @method styles\n * @param   {Object}    cfg  Configuration object containing one of `css`, `className`,\n *                           `publicClassNames`, and/or `style`\n *\n * @returns {Function}       Function that accepts a props object and mutates it to merge class\n *                           names and style objects and provide the `styler` utility function and\n *                           `css` merged class name map\n * @private\n */\nvar styles = function styles(cfg, optProps) {\n  var className = cfg.className,\n    configCss = cfg.css,\n    _cfg$prop = cfg.prop,\n    prop = _cfg$prop === void 0 ? 'className' : _cfg$prop,\n    style = cfg.style;\n  var allowedClassNames = cfg.publicClassNames;\n  if (configCss && allowedClassNames === true) {\n    allowedClassNames = Object.keys(configCss);\n  } else if (typeof allowedClassNames === 'string') {\n    allowedClassNames = allowedClassNames.split(/\\s+/);\n  }\n  var renderStyles = function renderStyles(props) {\n    var css = configCss;\n    if (style) {\n      props.style = Object.assign({}, style, props.style);\n    }\n\n    // if the props includes a css map, merge them together now\n    if (css && allowedClassNames && props.css) {\n      css = (0, _util.mergeClassNameMaps)(css, props.css, allowedClassNames);\n    }\n    var cn = css ? _bind[\"default\"].bind(css) : _bind[\"default\"];\n    var joinedClassName = props[prop] = (0, _bind[\"default\"])(className ? cn(className.split(' ')) : null, props.className);\n    (0, _util2.addInternalProp)(props, 'css', css);\n    (0, _util2.addInternalProp)(props, 'styler', {\n      join: cn,\n      append: function append() {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        return cn.apply(void 0, [joinedClassName].concat(args));\n      }\n    });\n    return props;\n  };\n  if (optProps) {\n    return renderStyles(optProps);\n  }\n  return renderStyles;\n};\nexports.styles = styles;\nvar _default = styles;\nexports[\"default\"] = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","styles","_bind","_interopRequireDefault","require","_util","_util2","obj","__esModule","cfg","optProps","className","configCss","css","_cfg$prop","prop","style","allowedClassNames","publicClassNames","keys","split","renderStyles","props","assign","mergeClassNameMaps","cn","bind","joinedClassName","addInternalProp","join","append","_len","arguments","length","args","Array","_key","apply","concat","_default"],"sources":["/Users/gitchan/Projects/gitchan-yonsei/2024-enact-template/node_modules/@enact/core/kind/styles.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.styles = exports[\"default\"] = void 0;\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\nvar _util = require(\"../util\");\nvar _util2 = require(\"./util\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n/**\n * Merges external and internal CSS classes and style objects. Internal CSS classes can be\n * optionally mapped to alternate names (e.g. those generated by CSS modules) by including a\n * `css` parameter.\n *\n * Example:\n * ```\n *\tconst stylesConfig = {\n *\t\tcss: {\n *\t\t\tbutton: 'unambiguous-button-class-name',\n *\t\t\tclient: 'unambiguous-button-class-name-client'\n *\t\t},\n *\t\tclassName: 'button global-class',\n *\t\tstyle: {\n *\t\t\tcolor: 'red'\n *\t\t}\n *\t};\n *\n *\tconst props = {\n *\t\tclassName: 'my-button',\n *\t\tstyle: {\n *\t\t\tdisplay: 'none'\n *\t\t}\n *\t};\n *\n *\tconst renderStyles = styles(stylesConfig);\n *\tconst renderStyles(props); // {className: 'unambiguous-button-class-name global-class', styles: {color: 'red', display: 'none'}}\n * ```\n *\n * @method styles\n * @param   {Object}    cfg  Configuration object containing one of `css`, `className`,\n *                           `publicClassNames`, and/or `style`\n *\n * @returns {Function}       Function that accepts a props object and mutates it to merge class\n *                           names and style objects and provide the `styler` utility function and\n *                           `css` merged class name map\n * @private\n */\nvar styles = function styles(cfg, optProps) {\n  var className = cfg.className,\n    configCss = cfg.css,\n    _cfg$prop = cfg.prop,\n    prop = _cfg$prop === void 0 ? 'className' : _cfg$prop,\n    style = cfg.style;\n  var allowedClassNames = cfg.publicClassNames;\n  if (configCss && allowedClassNames === true) {\n    allowedClassNames = Object.keys(configCss);\n  } else if (typeof allowedClassNames === 'string') {\n    allowedClassNames = allowedClassNames.split(/\\s+/);\n  }\n  var renderStyles = function renderStyles(props) {\n    var css = configCss;\n    if (style) {\n      props.style = Object.assign({}, style, props.style);\n    }\n\n    // if the props includes a css map, merge them together now\n    if (css && allowedClassNames && props.css) {\n      css = (0, _util.mergeClassNameMaps)(css, props.css, allowedClassNames);\n    }\n    var cn = css ? _bind[\"default\"].bind(css) : _bind[\"default\"];\n    var joinedClassName = props[prop] = (0, _bind[\"default\"])(className ? cn(className.split(' ')) : null, props.className);\n    (0, _util2.addInternalProp)(props, 'css', css);\n    (0, _util2.addInternalProp)(props, 'styler', {\n      join: cn,\n      append: function append() {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        return cn.apply(void 0, [joinedClassName].concat(args));\n      }\n    });\n    return props;\n  };\n  if (optProps) {\n    return renderStyles(optProps);\n  }\n  return renderStyles;\n};\nexports.styles = styles;\nvar _default = styles;\nexports[\"default\"] = _default;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}