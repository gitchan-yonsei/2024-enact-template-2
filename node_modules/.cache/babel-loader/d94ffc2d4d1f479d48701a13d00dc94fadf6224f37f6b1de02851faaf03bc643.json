{"ast":null,"code":"var _jsxFileName = \"/Users/gitchan/Projects/gitchan-yonsei/2024-enact-template/src/views/Main.js\";\nimport Alert from \"@enact/sandstone/Alert\";\nimport BodyText from \"@enact/sandstone/BodyText\";\nimport Button from \"@enact/sandstone/Button\";\nimport { Header, Panel } from \"@enact/sandstone/Panels\";\nimport { usePopup } from \"./MainState\";\nimport css from \"./Main.module.less\";\nimport $L from \"@enact/i18n/$L\";\nimport { useProcStat } from \"../hooks/useData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = props => {\n  const procStat = useProcStat();\n  const {\n    isPopupOpen,\n    handlePopupOpen,\n    handlePopupClose,\n    handleLaunchApp\n  } = usePopup();\n  return /*#__PURE__*/_jsxDEV(Panel, {\n    ...props,\n    children: /*#__PURE__*/_jsxDEV(Header, {\n      title: $L(request)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n//   return (\n//     <Panel {...props}>\n//       <Header title={$L(\"Enact Template\")} />\n//       <BodyText>{$L(\"This is a main page of sample application.\")}</BodyText>\n//       <Button onClick={handlePopupOpen} size=\"small\" className={css.buttonCell}>\n//         {$L(\"Open Alert\")}\n//       </Button>\n//       <BodyText>{`procStat : ${JSON.stringify(procStat)}`}</BodyText>\n//       <Alert type=\"overlay\" open={isPopupOpen} onClose={handlePopupClose}>\n//         <span>{$L(\"This is an alert message.\")}</span>\n//         <buttons>\n//           <Button\n//             size=\"small\"\n//             className={css.buttonCell}\n//             onClick={handleLaunchApp}\n//           >\n//             Launch\n//           </Button>\n//           <Button\n//             size=\"small\"\n//             className={css.buttonCell}\n//             onClick={handlePopupClose}\n//           >\n//             {$L(\"Close\")}\n//           </Button>\n//         </buttons>\n//       </Alert>\n//     </Panel>\n//   );\n\nexport default Main;","map":{"version":3,"names":["Alert","BodyText","Button","Header","Panel","usePopup","css","$L","useProcStat","jsxDEV","_jsxDEV","Main","props","procStat","isPopupOpen","handlePopupOpen","handlePopupClose","handleLaunchApp","children","title","request","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/gitchan/Projects/gitchan-yonsei/2024-enact-template/src/views/Main.js"],"sourcesContent":["import Alert from \"@enact/sandstone/Alert\";\nimport BodyText from \"@enact/sandstone/BodyText\";\nimport Button from \"@enact/sandstone/Button\";\nimport { Header, Panel } from \"@enact/sandstone/Panels\";\nimport { usePopup } from \"./MainState\";\nimport css from \"./Main.module.less\";\nimport $L from \"@enact/i18n/$L\";\nimport { useProcStat } from \"../hooks/useData\";\n\nconst Main = (props) => {\n  const procStat = useProcStat();\n  const { isPopupOpen, handlePopupOpen, handlePopupClose, handleLaunchApp } =\n    usePopup();\n\n  return (\n    <Panel {...props}>\n      <Header title={$L(request)} />\n    </Panel>\n  );\n\n};\n//   return (\n//     <Panel {...props}>\n//       <Header title={$L(\"Enact Template\")} />\n//       <BodyText>{$L(\"This is a main page of sample application.\")}</BodyText>\n//       <Button onClick={handlePopupOpen} size=\"small\" className={css.buttonCell}>\n//         {$L(\"Open Alert\")}\n//       </Button>\n//       <BodyText>{`procStat : ${JSON.stringify(procStat)}`}</BodyText>\n//       <Alert type=\"overlay\" open={isPopupOpen} onClose={handlePopupClose}>\n//         <span>{$L(\"This is an alert message.\")}</span>\n//         <buttons>\n//           <Button\n//             size=\"small\"\n//             className={css.buttonCell}\n//             onClick={handleLaunchApp}\n//           >\n//             Launch\n//           </Button>\n//           <Button\n//             size=\"small\"\n//             className={css.buttonCell}\n//             onClick={handlePopupClose}\n//           >\n//             {$L(\"Close\")}\n//           </Button>\n//         </buttons>\n//       </Alert>\n//     </Panel>\n//   );\n\nexport default Main;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,wBAAwB;AAC1C,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,SAASC,MAAM,EAAEC,KAAK,QAAQ,yBAAyB;AACvD,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,GAAG,MAAM,oBAAoB;AACpC,OAAOC,EAAE,MAAM,gBAAgB;AAC/B,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,IAAI,GAAIC,KAAK,IAAK;EACtB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEM,WAAW;IAAEC,eAAe;IAAEC,gBAAgB;IAAEC;EAAgB,CAAC,GACvEZ,QAAQ,CAAC,CAAC;EAEZ,oBACEK,OAAA,CAACN,KAAK;IAAA,GAAKQ,KAAK;IAAAM,QAAA,eACdR,OAAA,CAACP,MAAM;MAACgB,KAAK,EAAEZ,EAAE,CAACa,OAAO;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAGZ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeb,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}