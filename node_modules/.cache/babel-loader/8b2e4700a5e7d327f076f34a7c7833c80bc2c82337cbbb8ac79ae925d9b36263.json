{"ast":null,"code":"var _jsxFileName = \"/Users/gitchan/Projects/gitchan-yonsei/2024-enact-template/src/views/Main.js\";\nimport Alert from \"@enact/sandstone/Alert\";\nimport BodyText from \"@enact/sandstone/BodyText\";\nimport Button from \"@enact/sandstone/Button\";\nimport { Header, Panel } from \"@enact/sandstone/Panels\";\nimport { usePopup } from \"./MainState\";\nimport css from \"./Main.module.less\";\nimport $L from \"@enact/i18n/$L\";\nimport { useProcStat } from \"../hooks/useData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = props => {\n  const procStat = useProcStat();\n  const {\n    isPopupOpen,\n    handlePopupOpen,\n    handlePopupClose,\n    handleLaunchApp\n  } = usePopup();\n\n  //   return <Panel {...props}>\n\n  //   </Panel>;\n\n  return /*#__PURE__*/_jsxDEV(Panel, {\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: $L('Enact Template')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(BodyText, {\n      children: $L('This is a main page of sample application.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handlePopupOpen,\n      size: \"small\",\n      className: css.buttonCell,\n      children: $L('Open Alert')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(BodyText, {\n      children: `procStat : ${JSON.stringify(procStat)}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      type: \"overlay\",\n      open: isPopupOpen,\n      onClose: handlePopupClose,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: $L('This is an alert message.')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"buttons\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          className: css.buttonCell,\n          onClick: handleLaunchApp,\n          children: \"Launch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          className: css.buttonCell,\n          onClick: handlePopupClose,\n          children: $L('Close')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 4\n  }, this);\n};\nexport default Main;","map":{"version":3,"names":["Alert","BodyText","Button","Header","Panel","usePopup","css","$L","useProcStat","jsxDEV","_jsxDEV","Main","props","procStat","isPopupOpen","handlePopupOpen","handlePopupClose","handleLaunchApp","children","title","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","className","buttonCell","JSON","stringify","type","open","onClose"],"sources":["/Users/gitchan/Projects/gitchan-yonsei/2024-enact-template/src/views/Main.js"],"sourcesContent":["import Alert from \"@enact/sandstone/Alert\";\nimport BodyText from \"@enact/sandstone/BodyText\";\nimport Button from \"@enact/sandstone/Button\";\nimport { Header, Panel } from \"@enact/sandstone/Panels\";\nimport { usePopup } from \"./MainState\";\n\nimport css from \"./Main.module.less\";\nimport $L from \"@enact/i18n/$L\";\nimport { useProcStat } from \"../hooks/useData\";\n\nconst Main = (props) => {\n  const procStat = useProcStat();\n  const { isPopupOpen, handlePopupOpen, handlePopupClose, handleLaunchApp } =\n    usePopup();\n\n//   return <Panel {...props}>\n\n//   </Panel>;\n\n  return (\n  \t<Panel {...props}>\n  \t\t<Header title={$L('Enact Template')} />\n  \t\t<BodyText>{$L('This is a main page of sample application.')}</BodyText>\n  \t\t<Button onClick={handlePopupOpen} size=\"small\" className={css.buttonCell}>\n  \t\t\t{$L('Open Alert')}\n  \t\t</Button>\n  \t\t<BodyText>{`procStat : ${JSON.stringify(procStat)}`}</BodyText>\n  \t\t<Alert type=\"overlay\" open={isPopupOpen} onClose={handlePopupClose}>\n  \t\t\t<span>{$L('This is an alert message.')}</span>\n  \t\t\t<buttons>\n  \t\t\t\t<Button\n  \t\t\t\t\tsize=\"small\"\n  \t\t\t\t\tclassName={css.buttonCell}\n  \t\t\t\t\tonClick={handleLaunchApp}\n  \t\t\t\t>\n  \t\t\t\t\tLaunch\n  \t\t\t\t</Button>\n  \t\t\t\t<Button\n  \t\t\t\t\tsize=\"small\"\n  \t\t\t\t\tclassName={css.buttonCell}\n  \t\t\t\t\tonClick={handlePopupClose}\n  \t\t\t\t>\n  \t\t\t\t\t{$L('Close')}\n  \t\t\t\t</Button>\n  \t\t\t</buttons>\n  \t\t</Alert>\n  \t</Panel>\n  );\n};\n\nexport default Main;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,wBAAwB;AAC1C,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,SAASC,MAAM,EAAEC,KAAK,QAAQ,yBAAyB;AACvD,SAASC,QAAQ,QAAQ,aAAa;AAEtC,OAAOC,GAAG,MAAM,oBAAoB;AACpC,OAAOC,EAAE,MAAM,gBAAgB;AAC/B,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,IAAI,GAAIC,KAAK,IAAK;EACtB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEM,WAAW;IAAEC,eAAe;IAAEC,gBAAgB;IAAEC;EAAgB,CAAC,GACvEZ,QAAQ,CAAC,CAAC;;EAEd;;EAEA;;EAEE,oBACCK,OAAA,CAACN,KAAK;IAAA,GAAKQ,KAAK;IAAAM,QAAA,gBACfR,OAAA,CAACP,MAAM;MAACgB,KAAK,EAAEZ,EAAE,CAAC,gBAAgB;IAAE;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvCb,OAAA,CAACT,QAAQ;MAAAiB,QAAA,EAAEX,EAAE,CAAC,4CAA4C;IAAC;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,eACvEb,OAAA,CAACR,MAAM;MAACsB,OAAO,EAAET,eAAgB;MAACU,IAAI,EAAC,OAAO;MAACC,SAAS,EAAEpB,GAAG,CAACqB,UAAW;MAAAT,QAAA,EACvEX,EAAE,CAAC,YAAY;IAAC;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eACTb,OAAA,CAACT,QAAQ;MAAAiB,QAAA,EAAG,cAAaU,IAAI,CAACC,SAAS,CAAChB,QAAQ,CAAE;IAAC;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,eAC/Db,OAAA,CAACV,KAAK;MAAC8B,IAAI,EAAC,SAAS;MAACC,IAAI,EAAEjB,WAAY;MAACkB,OAAO,EAAEhB,gBAAiB;MAAAE,QAAA,gBAClER,OAAA;QAAAQ,QAAA,EAAOX,EAAE,CAAC,2BAA2B;MAAC;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC9Cb,OAAA;QAAAQ,QAAA,gBACCR,OAAA,CAACR,MAAM;UACNuB,IAAI,EAAC,OAAO;UACZC,SAAS,EAAEpB,GAAG,CAACqB,UAAW;UAC1BH,OAAO,EAAEP,eAAgB;UAAAC,QAAA,EACzB;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTb,OAAA,CAACR,MAAM;UACNuB,IAAI,EAAC,OAAO;UACZC,SAAS,EAAEpB,GAAG,CAACqB,UAAW;UAC1BH,OAAO,EAAER,gBAAiB;UAAAE,QAAA,EAEzBX,EAAE,CAAC,OAAO;QAAC;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAED,eAAeZ,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}