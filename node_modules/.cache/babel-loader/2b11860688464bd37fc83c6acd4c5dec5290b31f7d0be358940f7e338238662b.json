{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nexports.useSkins = useSkins;\nvar _react = require(\"react\");\nvar _util = require(\"./util\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n/**\n * Allows a component to respond to skin changes via the Context API\n *\n * Example:\n * ```\n * <App skin=\"dark\">\n * \t<Section>\n * \t\t<Button>Gray Button</Button>\n * \t<Section>\n * \t<Popup skin=\"light\">\n * \t\t<Button>White Button</Button>\n * \t</Popup>\n * </App>\n * ```\n *\n * @class SkinContext\n * @memberof ui/Skinnable\n * @private\n */\nvar SkinContext = /*#__PURE__*/(0, _react.createContext)(null);\n\n/**\n * Configuration for `useSkins`\n *\n * @typedef {Object} useSkinsConfig\n * @memberof ui/Skinnable\n * @property {String}   defaultSkin       Default skin name when none has been specified or inherited.\n * @property {String[]} [defaultVariants] Default variants when none have been specified or inherited.\n * @property {String}   [skin]            Specific skin to apply to this instance which will take precedence over the default or the inherited value.\n * @property {String[]} skins             List of allowed skins\n * @property {String[]} [skinVariants]    Specific variants to apply to this instance which will take precedence over the default or the inherited value.\n * @property {String[]} [variants]        List of allowed variants\n * @private\n */\n\n/**\n * Object returned by `useSkins`\n *\n * @typedef {Object} useSkinsInterface\n * @memberof ui/Skinnable\n * @property {String}   className    CSS classes for the effective skin and variants.\n * @property {String}   skin         Effective skin based on the allowed skins, the configured.\n *                                   `skin`, the default skin, and the inherited `skin` from up the\n *                                   component tree.\n * @property {String[]} variants     Effective skins variant based on the allowed variants, the\n *                                   configured variants, the default variants, and the inherited\n *                                   variants from up the component tree.\n * @property {Function} provideSkins Wraps a component tree with a skin provider to allow that tree\n *                                   to inherit the effective skin configured at this level.\n * @private\n */\n\n/**\n * Determines the effective skin and skin variants for a component and provides a method to provide\n * those values to other contained components in this subtree.\n *\n * ```\n * function ComponentDecorator (props) {\n *   const skins = useSkins({\n *     defaultSkin: 'neutral',\n *     defaultVariants: [],\n *     skins: ['neutral', 'bold'],\n *     variants: ['highContrast'],\n *     skin: props.skin,\n *     skinVariants: props.skinVariants\n *   });\n *\n *   return skins.provideSkins(\n *     <Component className={classnames(props.className, skins.className)} />\n *   );\n * }\n * ```\n *\n * @param {useSkinsConfig} config Configuration options\n * @returns {useSkinsInterface}\n * @private\n */\nfunction useSkins(config) {\n  var defaultSkin = config.defaultSkin,\n    defaultVariants = config.defaultVariants,\n    skin = config.skin,\n    skins = config.skins,\n    skinVariants = config.skinVariants,\n    variants = config.variants;\n  var _ref = (0, _react.useContext)(SkinContext) || {},\n    parentSkin = _ref.parentSkin,\n    parentVariants = _ref.parentVariants;\n  var effectiveSkin = (0, _util.determineSkin)(defaultSkin, skin, parentSkin);\n  var effectiveVariants = (0, _react.useMemo)(function () {\n    return (0, _util.determineVariants)(defaultVariants, variants, skinVariants, parentVariants);\n  }, [defaultVariants, variants, skinVariants, parentVariants]);\n  var className = (0, _util.getClassName)(skins, effectiveSkin, effectiveVariants);\n  var value = (0, _react.useMemo)(function () {\n    return {\n      parentSkin: effectiveSkin,\n      parentVariants: effectiveVariants\n    };\n  }, [effectiveSkin, effectiveVariants]);\n  var provideSkins = (0, _react.useCallback)(function (children) {\n    return /*#__PURE__*/(0, _jsxRuntime.jsx)(SkinContext.Provider, {\n      value: value,\n      children: children\n    });\n  }, [value]);\n  return {\n    className: className,\n    skin: effectiveSkin,\n    variants: effectiveVariants,\n    provideSkins: provideSkins\n  };\n}\nvar _default = useSkins;\nexports[\"default\"] = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","useSkins","_react","require","_util","_jsxRuntime","SkinContext","createContext","config","defaultSkin","defaultVariants","skin","skins","skinVariants","variants","_ref","useContext","parentSkin","parentVariants","effectiveSkin","determineSkin","effectiveVariants","useMemo","determineVariants","className","getClassName","provideSkins","useCallback","children","jsx","Provider","_default"],"sources":["/Users/gitchan/Projects/gitchan-yonsei/2024-enact-template/node_modules/@enact/ui/Skinnable/useSkins.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nexports.useSkins = useSkins;\nvar _react = require(\"react\");\nvar _util = require(\"./util\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n/**\n * Allows a component to respond to skin changes via the Context API\n *\n * Example:\n * ```\n * <App skin=\"dark\">\n * \t<Section>\n * \t\t<Button>Gray Button</Button>\n * \t<Section>\n * \t<Popup skin=\"light\">\n * \t\t<Button>White Button</Button>\n * \t</Popup>\n * </App>\n * ```\n *\n * @class SkinContext\n * @memberof ui/Skinnable\n * @private\n */var SkinContext = /*#__PURE__*/(0, _react.createContext)(null);\n\n/**\n * Configuration for `useSkins`\n *\n * @typedef {Object} useSkinsConfig\n * @memberof ui/Skinnable\n * @property {String}   defaultSkin       Default skin name when none has been specified or inherited.\n * @property {String[]} [defaultVariants] Default variants when none have been specified or inherited.\n * @property {String}   [skin]            Specific skin to apply to this instance which will take precedence over the default or the inherited value.\n * @property {String[]} skins             List of allowed skins\n * @property {String[]} [skinVariants]    Specific variants to apply to this instance which will take precedence over the default or the inherited value.\n * @property {String[]} [variants]        List of allowed variants\n * @private\n */\n\n/**\n * Object returned by `useSkins`\n *\n * @typedef {Object} useSkinsInterface\n * @memberof ui/Skinnable\n * @property {String}   className    CSS classes for the effective skin and variants.\n * @property {String}   skin         Effective skin based on the allowed skins, the configured.\n *                                   `skin`, the default skin, and the inherited `skin` from up the\n *                                   component tree.\n * @property {String[]} variants     Effective skins variant based on the allowed variants, the\n *                                   configured variants, the default variants, and the inherited\n *                                   variants from up the component tree.\n * @property {Function} provideSkins Wraps a component tree with a skin provider to allow that tree\n *                                   to inherit the effective skin configured at this level.\n * @private\n */\n\n/**\n * Determines the effective skin and skin variants for a component and provides a method to provide\n * those values to other contained components in this subtree.\n *\n * ```\n * function ComponentDecorator (props) {\n *   const skins = useSkins({\n *     defaultSkin: 'neutral',\n *     defaultVariants: [],\n *     skins: ['neutral', 'bold'],\n *     variants: ['highContrast'],\n *     skin: props.skin,\n *     skinVariants: props.skinVariants\n *   });\n *\n *   return skins.provideSkins(\n *     <Component className={classnames(props.className, skins.className)} />\n *   );\n * }\n * ```\n *\n * @param {useSkinsConfig} config Configuration options\n * @returns {useSkinsInterface}\n * @private\n */\nfunction useSkins(config) {\n  var defaultSkin = config.defaultSkin,\n    defaultVariants = config.defaultVariants,\n    skin = config.skin,\n    skins = config.skins,\n    skinVariants = config.skinVariants,\n    variants = config.variants;\n  var _ref = (0, _react.useContext)(SkinContext) || {},\n    parentSkin = _ref.parentSkin,\n    parentVariants = _ref.parentVariants;\n  var effectiveSkin = (0, _util.determineSkin)(defaultSkin, skin, parentSkin);\n  var effectiveVariants = (0, _react.useMemo)(function () {\n    return (0, _util.determineVariants)(defaultVariants, variants, skinVariants, parentVariants);\n  }, [defaultVariants, variants, skinVariants, parentVariants]);\n  var className = (0, _util.getClassName)(skins, effectiveSkin, effectiveVariants);\n  var value = (0, _react.useMemo)(function () {\n    return {\n      parentSkin: effectiveSkin,\n      parentVariants: effectiveVariants\n    };\n  }, [effectiveSkin, effectiveVariants]);\n  var provideSkins = (0, _react.useCallback)(function (children) {\n    return /*#__PURE__*/(0, _jsxRuntime.jsx)(SkinContext.Provider, {\n      value: value,\n      children: children\n    });\n  }, [value]);\n  return {\n    className: className,\n    skin: effectiveSkin,\n    variants: effectiveVariants,\n    provideSkins: provideSkins\n  };\n}\nvar _default = useSkins;\nexports[\"default\"] = _default;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}