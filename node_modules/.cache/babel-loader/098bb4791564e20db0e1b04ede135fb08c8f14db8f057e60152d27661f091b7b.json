{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.Job = void 0;\nvar _invariant = _interopRequireDefault(require(\"invariant\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\n/**\n * Provides a convenient way to manage timed execution of functions.\n *\n * @class Job\n * @memberof core/util\n * @public\n */\nvar Job = /*#__PURE__*/function () {\n  /**\n   * @constructor\n   * @param {Function}    fn       Function to execute as the requested job.\n   * @param {Number}      timeout  The number of milliseconds to wait before starting the job.\n   *\n   * @memberof core/util.Job.prototype\n   */\n  function Job(fn, _timeout) {\n    var _this = this;\n    _classCallCheck(this, Job);\n    this.id = null;\n    this.fn = null;\n    this.timeout = null;\n    this.type = null;\n    /**\n     * Starts the job.\n     *\n     * @method\n     * @param   {...*}       [args]  Any args passed are forwarded to the callback\n     *\n     * @returns {undefined}\n     * @memberof core/util.Job.prototype\n     * @public\n     */\n    this.start = function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this.startAfter.apply(_this, [_this.timeout].concat(args));\n    };\n    /**\n     * Starts the job in `timeout` milliseconds\n     *\n     * @method\n     * @param   {Number}     timeout  The number of milliseconds to wait before starting the job.\n     *                                This supersedes the timeout set at construction.\n     * @param   {...*}       [args]   Any args passed are forwarded to the callback\n     *\n     * @returns {undefined}\n     * @memberof core/util.Job.prototype\n     * @public\n     */\n    this.startAfter = function (timeout) {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n      _this.stop();\n      _this.type = 'timeout';\n      _this.id = setTimeout(function () {\n        return _this.run(args);\n      }, timeout);\n    };\n    /**\n     * Stops the job.\n     *\n     * @method\n     *\n     * @returns {undefined}\n     * @memberof core/util.Job.prototype\n     * @public\n     */\n    this.stop = function () {\n      if (_this.id) {\n        if (_this.type === 'idle') {\n          window.cancelIdleCallback(_this.id);\n        } else if (_this.type === 'raf') {\n          window.cancelAnimationFrame(_this.id);\n        } else if (_this.type === 'timeout') {\n          clearTimeout(_this.id);\n        }\n        _this.id = _this.type = null;\n      }\n    };\n    /**\n     * Executes the job immediately, then prevents any other calls to `throttle()` from running\n     * until the `timeout` configured at construction passes.\n     *\n     * @method\n     * @param   {...*}       args  Any args passed are forwarded to the callback\n     *\n     * @returns {undefined}\n     * @memberof core/util.Job.prototype\n     * @public\n     */\n    this.throttle = function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      _this.throttleUntil.apply(_this, [_this.timeout].concat(args));\n    };\n    /**\n     * Executes the job immediately, then prevents any other calls to `throttle()` from running for\n     * `timeout` milliseconds.\n     *\n     * @method\n     * @param   {Number}     timeout  The number of milliseconds to wait before allowing the job to\n     *                                be ran again. This supersedes the timeout set at construction.\n     * @param   {...*}       [args]   Any args passed are forwarded to the callback\n     *\n     * @returns {undefined}\n     * @memberof core/util.Job.prototype\n     * @public\n     */\n    this.throttleUntil = function (timeout) {\n      if (!_this.id) {\n        _this.type = 'timeout';\n        for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n          args[_key4 - 1] = arguments[_key4];\n        }\n        _this.run(args);\n        _this.id = setTimeout(_this.stop, timeout);\n      }\n    };\n    /**\n     * Executes job when the CPU is idle.\n     *\n     * @method\n     * @param   {...*}       [args]   Any args passed are forwarded to the callback\n     *\n     * @returns {undefined}\n     * @memberof core/util.Job.prototype\n     * @public\n     */\n    this.idle = function () {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n      _this.idleUntil.apply(_this, [null].concat(args));\n    };\n    /**\n     * Executes job when the CPU is idle, or when the timeout is reached, whichever occurs first.\n     *\n     * @method\n     * @param   {Number}     timeout  The number of milliseconds to wait before executing the\n     *                                job. This guarantees that the job is run, if a positive value\n     *                                is specified.\n     * @param   {...*}       [args]   Any args passed are forwarded to the callback\n     *\n     * @returns {undefined}\n     * @memberof core/util.Job.prototype\n     * @public\n     */\n    this.idleUntil = function (timeout) {\n      for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n        args[_key6 - 1] = arguments[_key6];\n      }\n      if (typeof window !== 'undefined' && window.requestIdleCallback) {\n        _this.stop();\n        _this.type = 'idle';\n        _this.id = window.requestIdleCallback(function () {\n          return _this.run(args);\n        }, {\n          timeout: timeout\n        });\n      } else {\n        // since we can't request an idle callback, just pass to startAfter()\n        _this.startAfter.apply(_this, [timeout].concat(args));\n      }\n    };\n    /**\n     * Executes job before the next repaint.\n     *\n     * @method\n     * @param   {...*}       [args]   Any args passed are forwarded to the callback\n     *\n     * @returns {undefined}\n     * @memberof core/util.Job.prototype\n     * @public\n     */\n    this.startRaf = function () {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n      _this.startRafAfter.apply(_this, [_this.timeout].concat(args));\n    };\n    /**\n     * Executes job before the next repaint after a given amount of timeout.\n     *\n     * @method\n     * @param   {Number}     timeout  The number of milliseconds to wait before running `requestAnimationFrame`.\n     * @param   {...*}       [args]   Any args passed are forwarded to the callback\n     *\n     * @returns {undefined}\n     * @memberof core/util.Job.prototype\n     * @public\n     */\n    this.startRafAfter = function (timeout) {\n      for (var _len8 = arguments.length, args = new Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {\n        args[_key8 - 1] = arguments[_key8];\n      }\n      _this.type = 'raf';\n      if (typeof window !== 'undefined') {\n        var time = null;\n        var callback = function callback(timestamp) {\n          if (time === null) {\n            time = timestamp;\n          }\n          if (timeout && timestamp - time < timeout) {\n            _this.id = window.requestAnimationFrame(callback);\n          } else {\n            time = null;\n            _this.run(args);\n            window.cancelAnimationFrame(_this.id);\n            _this.id = null;\n          }\n        };\n        _this.id = window.requestAnimationFrame(callback);\n      } else {\n        // If requestAnimationFrame is not supported just run the function immediately\n        _this.run(args);\n      }\n    };\n    /**\n     * Starts the job when `promise` resolves.\n     *\n     * The job execution is tied to the resolution of the last `Promise` passed. Like other methods\n     * on `Job`, calling `promise()` again with a new `Promise` will block execution of the job\n     * until that new `Promise` resolves. Any previous `Promise`s will still resolve normally but\n     * will not trigger job execution.\n     *\n     * Unlike other methods on `Job`, `promise()` returns a `Promise` which is the result of calling\n     * `then()` on the passed `promise`. That `Promise` resolves with either the result of job\n     * execution or `undefined` if `Promise` was superseded by a subsequent `Promise` passed as\n     * described above.\n     *\n     * @method\n     * @param   {Promise}  promise  The promise that must resolve before the job is executed\n     *\n     * @returns {Promise}\n     * @memberof core/util.Job.prototype\n     * @public\n     */\n    this.promise = function (promise) {\n      !(promise && typeof promise.then === 'function') ? process.env.NODE_ENV !== \"production\" ? (0, _invariant[\"default\"])(false, 'promise expects a thenable') : (0, _invariant[\"default\"])(false) : void 0;\n      _this.type = 'promise';\n      _this.id = promise;\n      return promise.then(function (result) {\n        if (_this.id === promise) {\n          _this.stop();\n          return _this.run([result]);\n        }\n      });\n    };\n    this.fn = fn;\n    this.timeout = _timeout;\n  }\n  _createClass(Job, [{\n    key: \"run\",\n    value: function run(args) {\n      // don't want to inadvertently apply Job's context on `fn`\n      return this.fn.apply(null, args);\n    }\n  }]);\n  return Job;\n}();\nexports.Job = Job;\nvar _default = Job;\nexports[\"default\"] = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","Job","_invariant","_interopRequireDefault","require","obj","__esModule","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","_toPropertyKey","key","_createClass","protoProps","staticProps","prototype","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","Number","fn","_timeout","_this","id","timeout","type","start","_len","arguments","args","Array","_key","startAfter","apply","concat","_len2","_key2","stop","setTimeout","run","window","cancelIdleCallback","cancelAnimationFrame","clearTimeout","throttle","_len3","_key3","throttleUntil","_len4","_key4","idle","_len5","_key5","idleUntil","_len6","_key6","requestIdleCallback","startRaf","_len7","_key7","startRafAfter","_len8","_key8","time","callback","timestamp","requestAnimationFrame","promise","then","process","env","NODE_ENV","result","_default"],"sources":["/Users/gitchan/Projects/gitchan-yonsei/2024-enact-template/node_modules/@enact/core/util/Job.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.Job = void 0;\nvar _invariant = _interopRequireDefault(require(\"invariant\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/**\n * Provides a convenient way to manage timed execution of functions.\n *\n * @class Job\n * @memberof core/util\n * @public\n */\nvar Job = /*#__PURE__*/function () {\n  /**\n   * @constructor\n   * @param {Function}    fn       Function to execute as the requested job.\n   * @param {Number}      timeout  The number of milliseconds to wait before starting the job.\n   *\n   * @memberof core/util.Job.prototype\n   */\n  function Job(fn, _timeout) {\n    var _this = this;\n    _classCallCheck(this, Job);\n    this.id = null;\n    this.fn = null;\n    this.timeout = null;\n    this.type = null;\n    /**\n     * Starts the job.\n     *\n     * @method\n     * @param   {...*}       [args]  Any args passed are forwarded to the callback\n     *\n     * @returns {undefined}\n     * @memberof core/util.Job.prototype\n     * @public\n     */\n    this.start = function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this.startAfter.apply(_this, [_this.timeout].concat(args));\n    };\n    /**\n     * Starts the job in `timeout` milliseconds\n     *\n     * @method\n     * @param   {Number}     timeout  The number of milliseconds to wait before starting the job.\n     *                                This supersedes the timeout set at construction.\n     * @param   {...*}       [args]   Any args passed are forwarded to the callback\n     *\n     * @returns {undefined}\n     * @memberof core/util.Job.prototype\n     * @public\n     */\n    this.startAfter = function (timeout) {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n      _this.stop();\n      _this.type = 'timeout';\n      _this.id = setTimeout(function () {\n        return _this.run(args);\n      }, timeout);\n    };\n    /**\n     * Stops the job.\n     *\n     * @method\n     *\n     * @returns {undefined}\n     * @memberof core/util.Job.prototype\n     * @public\n     */\n    this.stop = function () {\n      if (_this.id) {\n        if (_this.type === 'idle') {\n          window.cancelIdleCallback(_this.id);\n        } else if (_this.type === 'raf') {\n          window.cancelAnimationFrame(_this.id);\n        } else if (_this.type === 'timeout') {\n          clearTimeout(_this.id);\n        }\n        _this.id = _this.type = null;\n      }\n    };\n    /**\n     * Executes the job immediately, then prevents any other calls to `throttle()` from running\n     * until the `timeout` configured at construction passes.\n     *\n     * @method\n     * @param   {...*}       args  Any args passed are forwarded to the callback\n     *\n     * @returns {undefined}\n     * @memberof core/util.Job.prototype\n     * @public\n     */\n    this.throttle = function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      _this.throttleUntil.apply(_this, [_this.timeout].concat(args));\n    };\n    /**\n     * Executes the job immediately, then prevents any other calls to `throttle()` from running for\n     * `timeout` milliseconds.\n     *\n     * @method\n     * @param   {Number}     timeout  The number of milliseconds to wait before allowing the job to\n     *                                be ran again. This supersedes the timeout set at construction.\n     * @param   {...*}       [args]   Any args passed are forwarded to the callback\n     *\n     * @returns {undefined}\n     * @memberof core/util.Job.prototype\n     * @public\n     */\n    this.throttleUntil = function (timeout) {\n      if (!_this.id) {\n        _this.type = 'timeout';\n        for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n          args[_key4 - 1] = arguments[_key4];\n        }\n        _this.run(args);\n        _this.id = setTimeout(_this.stop, timeout);\n      }\n    };\n    /**\n     * Executes job when the CPU is idle.\n     *\n     * @method\n     * @param   {...*}       [args]   Any args passed are forwarded to the callback\n     *\n     * @returns {undefined}\n     * @memberof core/util.Job.prototype\n     * @public\n     */\n    this.idle = function () {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n      _this.idleUntil.apply(_this, [null].concat(args));\n    };\n    /**\n     * Executes job when the CPU is idle, or when the timeout is reached, whichever occurs first.\n     *\n     * @method\n     * @param   {Number}     timeout  The number of milliseconds to wait before executing the\n     *                                job. This guarantees that the job is run, if a positive value\n     *                                is specified.\n     * @param   {...*}       [args]   Any args passed are forwarded to the callback\n     *\n     * @returns {undefined}\n     * @memberof core/util.Job.prototype\n     * @public\n     */\n    this.idleUntil = function (timeout) {\n      for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n        args[_key6 - 1] = arguments[_key6];\n      }\n      if (typeof window !== 'undefined' && window.requestIdleCallback) {\n        _this.stop();\n        _this.type = 'idle';\n        _this.id = window.requestIdleCallback(function () {\n          return _this.run(args);\n        }, {\n          timeout: timeout\n        });\n      } else {\n        // since we can't request an idle callback, just pass to startAfter()\n        _this.startAfter.apply(_this, [timeout].concat(args));\n      }\n    };\n    /**\n     * Executes job before the next repaint.\n     *\n     * @method\n     * @param   {...*}       [args]   Any args passed are forwarded to the callback\n     *\n     * @returns {undefined}\n     * @memberof core/util.Job.prototype\n     * @public\n     */\n    this.startRaf = function () {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n      _this.startRafAfter.apply(_this, [_this.timeout].concat(args));\n    };\n    /**\n     * Executes job before the next repaint after a given amount of timeout.\n     *\n     * @method\n     * @param   {Number}     timeout  The number of milliseconds to wait before running `requestAnimationFrame`.\n     * @param   {...*}       [args]   Any args passed are forwarded to the callback\n     *\n     * @returns {undefined}\n     * @memberof core/util.Job.prototype\n     * @public\n     */\n    this.startRafAfter = function (timeout) {\n      for (var _len8 = arguments.length, args = new Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {\n        args[_key8 - 1] = arguments[_key8];\n      }\n      _this.type = 'raf';\n      if (typeof window !== 'undefined') {\n        var time = null;\n        var callback = function callback(timestamp) {\n          if (time === null) {\n            time = timestamp;\n          }\n          if (timeout && timestamp - time < timeout) {\n            _this.id = window.requestAnimationFrame(callback);\n          } else {\n            time = null;\n            _this.run(args);\n            window.cancelAnimationFrame(_this.id);\n            _this.id = null;\n          }\n        };\n        _this.id = window.requestAnimationFrame(callback);\n      } else {\n        // If requestAnimationFrame is not supported just run the function immediately\n        _this.run(args);\n      }\n    };\n    /**\n     * Starts the job when `promise` resolves.\n     *\n     * The job execution is tied to the resolution of the last `Promise` passed. Like other methods\n     * on `Job`, calling `promise()` again with a new `Promise` will block execution of the job\n     * until that new `Promise` resolves. Any previous `Promise`s will still resolve normally but\n     * will not trigger job execution.\n     *\n     * Unlike other methods on `Job`, `promise()` returns a `Promise` which is the result of calling\n     * `then()` on the passed `promise`. That `Promise` resolves with either the result of job\n     * execution or `undefined` if `Promise` was superseded by a subsequent `Promise` passed as\n     * described above.\n     *\n     * @method\n     * @param   {Promise}  promise  The promise that must resolve before the job is executed\n     *\n     * @returns {Promise}\n     * @memberof core/util.Job.prototype\n     * @public\n     */\n    this.promise = function (promise) {\n      !(promise && typeof promise.then === 'function') ? process.env.NODE_ENV !== \"production\" ? (0, _invariant[\"default\"])(false, 'promise expects a thenable') : (0, _invariant[\"default\"])(false) : void 0;\n      _this.type = 'promise';\n      _this.id = promise;\n      return promise.then(function (result) {\n        if (_this.id === promise) {\n          _this.stop();\n          return _this.run([result]);\n        }\n      });\n    };\n    this.fn = fn;\n    this.timeout = _timeout;\n  }\n  _createClass(Job, [{\n    key: \"run\",\n    value: function run(args) {\n      // don't want to inadvertently apply Job's context on `fn`\n      return this.fn.apply(null, args);\n    }\n  }]);\n  return Job;\n}();\nexports.Job = Job;\nvar _default = Job;\nexports[\"default\"] = _default;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}