{"ast":null,"code":"// This is subscribe APIs.\nimport { useEffect, useRef, useState } from 'react';\nimport debugLog from '../libs/log';\nimport { mem } from '../libs/services';\nexport const useProcStat = () => {\n  const ref = useRef(null);\n  const [value, setValue] = useState({\n    returnValue: false\n  });\n  useEffect(() => {\n    if (!ref.current) {\n      debugLog('GET_PROC_STAT[R]', {});\n      ref.current = mem({\n        method: 'getProcStat',\n        parameters: {\n          subscribe: true\n        },\n        onSuccess: res => {\n          debugLog('GET_PROC_STAT[S]', res);\n          setValue(res);\n        },\n        onFailure: err => {\n          debugLog('GET_PROC_STAT[F]', err);\n        }\n      });\n    }\n    return () => {\n      if (ref.current) {\n        ref.current.cancel();\n        ref.current = null;\n      }\n    };\n  }, []);\n  return value;\n};\nexport const useUnitList = () => {\n  const ref = useRef(null);\n  const [value, setValue] = useState({\n    returnValue: false\n  });\n  useEffect(() => {\n    if (!ref.current) {\n      debugLog('GET_UNIT_LIST[R]', {});\n      ref.current = mem({\n        method: 'getUnitList',\n        parameters: {\n          subscribe: true\n        },\n        onSuccess: res => {\n          debugLog('GET_UNIT_LIST[S]', res);\n          setValue(res);\n        },\n        onFailure: err => {\n          debugLog('GET_UNIT_LIST[F]', err);\n        }\n      });\n    }\n    return () => {\n      if (ref.current) {\n        ref.current.cancel();\n        ref.current = null;\n      }\n    };\n  }, []);\n  return value;\n};","map":{"version":3,"names":["useEffect","useRef","useState","debugLog","mem","useProcStat","ref","value","setValue","returnValue","current","method","parameters","subscribe","onSuccess","res","onFailure","err","cancel","useUnitList"],"sources":["/Users/gitchan/Projects/gitchan-yonsei/2024-enact-template/src/hooks/useData.js"],"sourcesContent":["// This is subscribe APIs.\nimport {useEffect, useRef, useState} from 'react';\n\nimport debugLog from '../libs/log';\nimport {mem} from '../libs/services';\n\nexport const useProcStat = () => {\n\tconst ref = useRef(null);\n\tconst [value, setValue] = useState({returnValue: false});\n\n\tuseEffect(() => {\n\t\tif (!ref.current) {\n\t\t\tdebugLog('GET_PROC_STAT[R]', {});\n\t\t\tref.current = mem({\n\t\t\t\tmethod: 'getProcStat',\n\t\t\t\tparameters: {\n\t\t\t\t\tsubscribe: true\n\t\t\t\t},\n\t\t\t\tonSuccess: res => {\n\t\t\t\t\tdebugLog('GET_PROC_STAT[S]', res);\n\t\t\t\t\tsetValue(res);\n\t\t\t\t},\n\t\t\t\tonFailure: err => {\n\t\t\t\t\tdebugLog('GET_PROC_STAT[F]', err);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn () => {\n\t\t\tif (ref.current) {\n\t\t\t\tref.current.cancel();\n\t\t\t\tref.current = null;\n\t\t\t}\n\t\t};\n\t}, []);\n\n\treturn value;\n};\n\n\n\nexport const useUnitList = () => {\n\tconst ref = useRef(null);\n\tconst [value, setValue] = useState({returnValue: false});\n\n\tuseEffect(() => {\n\t\tif (!ref.current) {\n\t\t\tdebugLog('GET_UNIT_LIST[R]', {});\n\t\t\tref.current = mem({\n\t\t\t\tmethod: 'getUnitList',\n\t\t\t\tparameters: {\n\t\t\t\t\tsubscribe: true\n\t\t\t\t},\n\t\t\t\tonSuccess: res => {\n\t\t\t\t\tdebugLog('GET_UNIT_LIST[S]', res);\n\t\t\t\t\tsetValue(res);\n\t\t\t\t},\n\t\t\t\tonFailure: err => {\n\t\t\t\t\tdebugLog('GET_UNIT_LIST[F]', err);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn () => {\n\t\t\tif (ref.current) {\n\t\t\t\tref.current.cancel();\n\t\t\t\tref.current = null;\n\t\t\t}\n\t\t};\n\t}, []);\n\n\treturn value;\n};"],"mappings":"AAAA;AACA,SAAQA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AAEjD,OAAOC,QAAQ,MAAM,aAAa;AAClC,SAAQC,GAAG,QAAO,kBAAkB;AAEpC,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAChC,MAAMC,GAAG,GAAGL,MAAM,CAAC,IAAI,CAAC;EACxB,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC;IAACO,WAAW,EAAE;EAAK,CAAC,CAAC;EAExDT,SAAS,CAAC,MAAM;IACf,IAAI,CAACM,GAAG,CAACI,OAAO,EAAE;MACjBP,QAAQ,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC;MAChCG,GAAG,CAACI,OAAO,GAAGN,GAAG,CAAC;QACjBO,MAAM,EAAE,aAAa;QACrBC,UAAU,EAAE;UACXC,SAAS,EAAE;QACZ,CAAC;QACDC,SAAS,EAAEC,GAAG,IAAI;UACjBZ,QAAQ,CAAC,kBAAkB,EAAEY,GAAG,CAAC;UACjCP,QAAQ,CAACO,GAAG,CAAC;QACd,CAAC;QACDC,SAAS,EAAEC,GAAG,IAAI;UACjBd,QAAQ,CAAC,kBAAkB,EAAEc,GAAG,CAAC;QAClC;MACD,CAAC,CAAC;IACH;IAEA,OAAO,MAAM;MACZ,IAAIX,GAAG,CAACI,OAAO,EAAE;QAChBJ,GAAG,CAACI,OAAO,CAACQ,MAAM,CAAC,CAAC;QACpBZ,GAAG,CAACI,OAAO,GAAG,IAAI;MACnB;IACD,CAAC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOH,KAAK;AACb,CAAC;AAID,OAAO,MAAMY,WAAW,GAAGA,CAAA,KAAM;EAChC,MAAMb,GAAG,GAAGL,MAAM,CAAC,IAAI,CAAC;EACxB,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC;IAACO,WAAW,EAAE;EAAK,CAAC,CAAC;EAExDT,SAAS,CAAC,MAAM;IACf,IAAI,CAACM,GAAG,CAACI,OAAO,EAAE;MACjBP,QAAQ,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC;MAChCG,GAAG,CAACI,OAAO,GAAGN,GAAG,CAAC;QACjBO,MAAM,EAAE,aAAa;QACrBC,UAAU,EAAE;UACXC,SAAS,EAAE;QACZ,CAAC;QACDC,SAAS,EAAEC,GAAG,IAAI;UACjBZ,QAAQ,CAAC,kBAAkB,EAAEY,GAAG,CAAC;UACjCP,QAAQ,CAACO,GAAG,CAAC;QACd,CAAC;QACDC,SAAS,EAAEC,GAAG,IAAI;UACjBd,QAAQ,CAAC,kBAAkB,EAAEc,GAAG,CAAC;QAClC;MACD,CAAC,CAAC;IACH;IAEA,OAAO,MAAM;MACZ,IAAIX,GAAG,CAACI,OAAO,EAAE;QAChBJ,GAAG,CAACI,OAAO,CAACQ,MAAM,CAAC,CAAC;QACpBZ,GAAG,CAACI,OAAO,GAAG,IAAI;MACnB;IACD,CAAC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOH,KAAK;AACb,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}