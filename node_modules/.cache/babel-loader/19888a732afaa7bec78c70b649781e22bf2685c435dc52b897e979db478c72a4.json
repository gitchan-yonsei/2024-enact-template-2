{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _keymap = require(\"./keymap\");\nObject.keys(_keymap).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _keymap[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _keymap[key];\n    }\n  });\n});\n/**\n * Manages a map of names to key codes to simplify event handlers\n *\n * Example:\n * ```\n * import {add, is} from '@enact/core/keymap';\n *\n * add('enter', 13);\n * const isEnter = is('enter');\n *\n * // within event handler\n * if (isEnter(ev.keyCode)) {\n *   // handle enter\n * }\n * ```\n *\n * @module core/keymap\n * @exports add\n * @exports addAll\n * @exports is\n * @exports remove\n * @exports removeAll\n */\n\n// keymap uses a singleton object, map, to manage the keymap. since webpack may make multiple copies\n// of the module available if the import path is different, we ensure a consistent import path for\n// the singleton instance by facading it with this module.\n\n// Add the default 5-way navigation key codes\n(0, _keymap.addAll)({\n  enter: [13, 16777221],\n  left: 37,\n  up: 38,\n  right: 39,\n  down: 40,\n  pageUp: 33,\n  pageDown: 34\n});","map":{"version":3,"names":["Object","defineProperty","exports","value","_keymap","require","keys","forEach","key","enumerable","get","addAll","enter","left","up","right","down","pageUp","pageDown"],"sources":["/Users/gitchan/Projects/gitchan-yonsei/2024-enact-template/node_modules/@enact/core/keymap/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _keymap = require(\"./keymap\");\nObject.keys(_keymap).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _keymap[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _keymap[key];\n    }\n  });\n});\n/**\n * Manages a map of names to key codes to simplify event handlers\n *\n * Example:\n * ```\n * import {add, is} from '@enact/core/keymap';\n *\n * add('enter', 13);\n * const isEnter = is('enter');\n *\n * // within event handler\n * if (isEnter(ev.keyCode)) {\n *   // handle enter\n * }\n * ```\n *\n * @module core/keymap\n * @exports add\n * @exports addAll\n * @exports is\n * @exports remove\n * @exports removeAll\n */\n\n// keymap uses a singleton object, map, to manage the keymap. since webpack may make multiple copies\n// of the module available if the import path is different, we ensure a consistent import path for\n// the singleton instance by facading it with this module.\n\n// Add the default 5-way navigation key codes\n(0, _keymap.addAll)({\n  enter: [13, 16777221],\n  left: 37,\n  up: 38,\n  right: 39,\n  down: 40,\n  pageUp: 33,\n  pageDown: 34\n});"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACF,IAAIC,OAAO,GAAGC,OAAO,CAAC,UAAU,CAAC;AACjCL,MAAM,CAACM,IAAI,CAACF,OAAO,CAAC,CAACG,OAAO,CAAC,UAAUC,GAAG,EAAE;EAC1C,IAAIA,GAAG,KAAK,SAAS,IAAIA,GAAG,KAAK,YAAY,EAAE;EAC/C,IAAIA,GAAG,IAAIN,OAAO,IAAIA,OAAO,CAACM,GAAG,CAAC,KAAKJ,OAAO,CAACI,GAAG,CAAC,EAAE;EACrDR,MAAM,CAACC,cAAc,CAACC,OAAO,EAAEM,GAAG,EAAE;IAClCC,UAAU,EAAE,IAAI;IAChBC,GAAG,EAAE,SAASA,GAAGA,CAAA,EAAG;MAClB,OAAON,OAAO,CAACI,GAAG,CAAC;IACrB;EACF,CAAC,CAAC;AACJ,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC,CAAC,EAAEJ,OAAO,CAACO,MAAM,EAAE;EAClBC,KAAK,EAAE,CAAC,EAAE,EAAE,QAAQ,CAAC;EACrBC,IAAI,EAAE,EAAE;EACRC,EAAE,EAAE,EAAE;EACNC,KAAK,EAAE,EAAE;EACTC,IAAI,EAAE,EAAE;EACRC,MAAM,EAAE,EAAE;EACVC,QAAQ,EAAE;AACZ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}