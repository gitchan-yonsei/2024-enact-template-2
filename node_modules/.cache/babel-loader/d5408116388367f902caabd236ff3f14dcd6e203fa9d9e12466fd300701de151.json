{"ast":null,"code":"import LS2Request from '@enact/webos/LS2Request';\nimport { isDevServe } from './utils';\nconst send = (Req, service, params) => {\n  var _params$parameters;\n  if ((_params$parameters = params.parameters) !== null && _params$parameters !== void 0 && _params$parameters.subscribe) {\n    return new Req().send({\n      service,\n      method: params === null || params === void 0 ? void 0 : params.method,\n      parameters: params === null || params === void 0 ? void 0 : params.parameters,\n      onSuccess: params === null || params === void 0 ? void 0 : params.onSuccess,\n      onFailure: params === null || params === void 0 ? void 0 : params.onFailure\n    });\n  }\n  return new Promise((onSuccess, onFailure) => new Req().send({\n    service,\n    method: params === null || params === void 0 ? void 0 : params.method,\n    parameters: params === null || params === void 0 ? void 0 : params.parameters,\n    onSuccess,\n    onFailure\n  }));\n};\nconst request = service => params => {\n  /* istanbul ignore if */\n  if (isDevServe()) {\n    // eslint-disable-next-line\n    const req = require('../../__mocks__/@enact/webos/LS2Request');\n    return send(req.default, service, params);\n  }\n  return send(LS2Request, service, params);\n};\nexport default request;","map":{"version":3,"names":["LS2Request","isDevServe","send","Req","service","params","_params$parameters","parameters","subscribe","method","onSuccess","onFailure","Promise","request","req","require","default"],"sources":["/Users/gitchan/Projects/gitchan-yonsei/2024-enact-template/src/libs/request.js"],"sourcesContent":["import LS2Request from '@enact/webos/LS2Request';\n\nimport {isDevServe} from './utils';\n\nconst send = (Req, service, params) => {\n\tif (params.parameters?.subscribe) {\n\t\treturn new Req().send({\n\t\t\tservice,\n\t\t\tmethod: params?.method,\n\t\t\tparameters: params?.parameters,\n\t\t\tonSuccess: params?.onSuccess,\n\t\t\tonFailure: params?.onFailure\n\t\t});\n\t}\n\n\treturn new Promise((onSuccess, onFailure) =>\n\t\tnew Req().send({\n\t\t\tservice,\n\t\t\tmethod: params?.method,\n\t\t\tparameters: params?.parameters,\n\t\t\tonSuccess,\n\t\t\tonFailure\n\t\t})\n\t);\n};\n\nconst request = service => params => {\n\t/* istanbul ignore if */\n\tif (isDevServe()) {\n\t\t// eslint-disable-next-line\n\t\tconst req = require('../../__mocks__/@enact/webos/LS2Request');\n\t\treturn send(req.default, service, params);\n\t}\n\n\treturn send(LS2Request, service, params);\n};\n\nexport default request;\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,yBAAyB;AAEhD,SAAQC,UAAU,QAAO,SAAS;AAElC,MAAMC,IAAI,GAAGA,CAACC,GAAG,EAAEC,OAAO,EAAEC,MAAM,KAAK;EAAA,IAAAC,kBAAA;EACtC,KAAAA,kBAAA,GAAID,MAAM,CAACE,UAAU,cAAAD,kBAAA,eAAjBA,kBAAA,CAAmBE,SAAS,EAAE;IACjC,OAAO,IAAIL,GAAG,CAAC,CAAC,CAACD,IAAI,CAAC;MACrBE,OAAO;MACPK,MAAM,EAAEJ,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEI,MAAM;MACtBF,UAAU,EAAEF,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,UAAU;MAC9BG,SAAS,EAAEL,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEK,SAAS;MAC5BC,SAAS,EAAEN,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEM;IACpB,CAAC,CAAC;EACH;EAEA,OAAO,IAAIC,OAAO,CAAC,CAACF,SAAS,EAAEC,SAAS,KACvC,IAAIR,GAAG,CAAC,CAAC,CAACD,IAAI,CAAC;IACdE,OAAO;IACPK,MAAM,EAAEJ,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEI,MAAM;IACtBF,UAAU,EAAEF,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,UAAU;IAC9BG,SAAS;IACTC;EACD,CAAC,CACF,CAAC;AACF,CAAC;AAED,MAAME,OAAO,GAAGT,OAAO,IAAIC,MAAM,IAAI;EACpC;EACA,IAAIJ,UAAU,CAAC,CAAC,EAAE;IACjB;IACA,MAAMa,GAAG,GAAGC,OAAO,CAAC,yCAAyC,CAAC;IAC9D,OAAOb,IAAI,CAACY,GAAG,CAACE,OAAO,EAAEZ,OAAO,EAAEC,MAAM,CAAC;EAC1C;EAEA,OAAOH,IAAI,CAACF,UAAU,EAAEI,OAAO,EAAEC,MAAM,CAAC;AACzC,CAAC;AAED,eAAeQ,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}