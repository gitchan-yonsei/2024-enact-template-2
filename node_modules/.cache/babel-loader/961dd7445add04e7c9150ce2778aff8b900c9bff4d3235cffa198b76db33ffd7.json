{"ast":null,"code":"import Alert from \"@enact/sandstone/Alert\";\nimport BodyText from \"@enact/sandstone/BodyText\";\nimport Button from \"@enact/sandstone/Button\";\nimport { Header, Panel } from \"@enact/sandstone/Panels\";\nimport { usePopup } from \"./MainState\";\nimport css from \"./Main.module.less\";\nimport $L from \"@enact/i18n/$L\";\nimport { useProcStat } from \"../hooks/useData\";\nconst Main = props => {\n  const procStat = useProcStat();\n  const {\n    isPopupOpen,\n    handlePopupOpen,\n    handlePopupClose,\n    handleLaunchApp\n  } = usePopup();\n\n  //   return <Panel {...props}>\n\n  //   </Panel>;\n\n  // return (\n  // \t<Panel {...props}>\n  // \t\t<Header title={$L('Enact Template')} />\n  // \t\t<BodyText>{$L('This is a main page of sample application.')}</BodyText>\n  // \t\t<Button onClick={handlePopupOpen} size=\"small\" className={css.buttonCell}>\n  // \t\t\t{$L('Open Alert')}\n  // \t\t</Button>\n  // \t\t<BodyText>{`procStat : ${JSON.stringify(procStat)}`}</BodyText>\n  // \t\t<Alert type=\"overlay\" open={isPopupOpen} onClose={handlePopupClose}>\n  // \t\t\t<span>{$L('This is an alert message.')}</span>\n  // \t\t\t<buttons>\n  // \t\t\t\t<Button\n  // \t\t\t\t\tsize=\"small\"\n  // \t\t\t\t\tclassName={css.buttonCell}\n  // \t\t\t\t\tonClick={handleLaunchApp}\n  // \t\t\t\t>\n  // \t\t\t\t\tLaunch\n  // \t\t\t\t</Button>\n  // \t\t\t\t<Button\n  // \t\t\t\t\tsize=\"small\"\n  // \t\t\t\t\tclassName={css.buttonCell}\n  // \t\t\t\t\tonClick={handlePopupClose}\n  // \t\t\t\t>\n  // \t\t\t\t\t{$L('Close')}\n  // \t\t\t\t</Button>\n  // \t\t\t</buttons>\n  // \t\t</Alert>\n  // \t</Panel>\n  // );\n};\n\nexport default Main;","map":{"version":3,"names":["Alert","BodyText","Button","Header","Panel","usePopup","css","$L","useProcStat","Main","props","procStat","isPopupOpen","handlePopupOpen","handlePopupClose","handleLaunchApp"],"sources":["/Users/gitchan/Projects/gitchan-yonsei/2024-enact-template/src/views/Main.js"],"sourcesContent":["import Alert from \"@enact/sandstone/Alert\";\nimport BodyText from \"@enact/sandstone/BodyText\";\nimport Button from \"@enact/sandstone/Button\";\nimport { Header, Panel } from \"@enact/sandstone/Panels\";\nimport { usePopup } from \"./MainState\";\n\nimport css from \"./Main.module.less\";\nimport $L from \"@enact/i18n/$L\";\nimport { useProcStat } from \"../hooks/useData\";\n\nconst Main = (props) => {\n  const procStat = useProcStat();\n  const { isPopupOpen, handlePopupOpen, handlePopupClose, handleLaunchApp } =\n    usePopup();\n\n//   return <Panel {...props}>\n\n//   </Panel>;\n\n  // return (\n  // \t<Panel {...props}>\n  // \t\t<Header title={$L('Enact Template')} />\n  // \t\t<BodyText>{$L('This is a main page of sample application.')}</BodyText>\n  // \t\t<Button onClick={handlePopupOpen} size=\"small\" className={css.buttonCell}>\n  // \t\t\t{$L('Open Alert')}\n  // \t\t</Button>\n  // \t\t<BodyText>{`procStat : ${JSON.stringify(procStat)}`}</BodyText>\n  // \t\t<Alert type=\"overlay\" open={isPopupOpen} onClose={handlePopupClose}>\n  // \t\t\t<span>{$L('This is an alert message.')}</span>\n  // \t\t\t<buttons>\n  // \t\t\t\t<Button\n  // \t\t\t\t\tsize=\"small\"\n  // \t\t\t\t\tclassName={css.buttonCell}\n  // \t\t\t\t\tonClick={handleLaunchApp}\n  // \t\t\t\t>\n  // \t\t\t\t\tLaunch\n  // \t\t\t\t</Button>\n  // \t\t\t\t<Button\n  // \t\t\t\t\tsize=\"small\"\n  // \t\t\t\t\tclassName={css.buttonCell}\n  // \t\t\t\t\tonClick={handlePopupClose}\n  // \t\t\t\t>\n  // \t\t\t\t\t{$L('Close')}\n  // \t\t\t\t</Button>\n  // \t\t\t</buttons>\n  // \t\t</Alert>\n  // \t</Panel>\n  // );\n};\n\nexport default Main;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,wBAAwB;AAC1C,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,SAASC,MAAM,EAAEC,KAAK,QAAQ,yBAAyB;AACvD,SAASC,QAAQ,QAAQ,aAAa;AAEtC,OAAOC,GAAG,MAAM,oBAAoB;AACpC,OAAOC,EAAE,MAAM,gBAAgB;AAC/B,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,IAAI,GAAIC,KAAK,IAAK;EACtB,MAAMC,QAAQ,GAAGH,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEI,WAAW;IAAEC,eAAe;IAAEC,gBAAgB;IAAEC;EAAgB,CAAC,GACvEV,QAAQ,CAAC,CAAC;;EAEd;;EAEA;;EAEE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;;AAED,eAAeI,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}