{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.removeAll = exports.remove = exports.is = exports.addAll = exports.add = void 0;\nvar _curry = _interopRequireDefault(require(\"ramda/src/curry\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n/*\n * The singleton map of names to keyCodes. If a name doesn't have any keyCodes mapped to it, it will\n * not exist in this map. If it does, its value will be an array of its keyCodes.\n *\n * @type {Object}\n * @private\n */\nvar map = {};\n\n/*\n * Safely converts keymap name to lowercase.\n *\n * @function\n * @param   {String} name  Name for keyCode\n *\n * @returns {String}       Name for keyCode in lowercase\n * @memberof core/keymap\n * @private\n */\nvar toLowerCase = function toLowerCase(name) {\n  return name ? name.toLowerCase() : '';\n};\n\n/*\n * Iterates over `set` and invokes `fn` with the key and value of each item.\n *\n * @function\n * @param   {Function}  fn   Function to invoke\n * @param   {Object}    set  A map of names to keyCodes\n *\n * @returns {undefined}\n * @memberof core/keymap\n * @private\n */\nvar forEachObj = (0, _curry[\"default\"])(function (fn, set) {\n  Object.keys(set).forEach(function (name) {\n    return fn(name, set[name]);\n  });\n});\n\n/*\n * Invokes `fn` with `name` and `keyCode` for each key code provided.\n *\n * @function\n * @param   {Function}        fn       Function to invoke\n * @param   {String}          name     Name for the key codes\n * @param   {Number|Number[]} keyCode  A key code or array of key codes\n *\n * @returns {undefined}\n * @curried\n * @memberof core/keymap\n * @private\n */\nvar oneOrArray = (0, _curry[\"default\"])(function (fn, name, keyCode) {\n  if (Array.isArray(keyCode)) {\n    keyCode.forEach(fn(name));\n  } else {\n    fn(name, keyCode);\n  }\n});\n\n/*\n * Adds `keyCode` to `name`.\n *\n * @function\n * @param   {String}    name     Name for the key code\n * @param   {Number}    keyCode  A key code\n *\n * @returns {undefined}\n * @curried\n * @memberof core/keymap\n * @private\n */\nvar addOne = (0, _curry[\"default\"])(function (name, keyCode) {\n  name = toLowerCase(name);\n  if (name in map) {\n    var index = map[name].indexOf(keyCode);\n    if (index === -1) {\n      map[name].push(keyCode);\n    }\n  } else if (name) {\n    map[name] = [keyCode];\n  }\n});\n\n/*\n * Removes `keyCode` from `name`.\n *\n * @function\n * @param   {String}    name     Name for the key code\n * @param   {Number}    keyCode  A key code\n *\n * @returns {undefined}\n * @curried\n * @memberof core/keymap\n * @private\n */\nvar removeOne = (0, _curry[\"default\"])(function (name, keyCode) {\n  name = toLowerCase(name);\n  if (name in map) {\n    var keys = map[name];\n    var index = keys.indexOf(keyCode);\n    if (index === -1) {\n      delete map[name];\n    } else {\n      keys.splice(index, 1);\n    }\n  }\n});\n\n/**\n * Registers `keyCode` for `name`.\n *\n * @function add\n * @param   {String}          name     Name for the key code\n * @param   {Number|Number[]} keyCode  A key code or array of key codes\n *\n * @returns {undefined}\n * @curried\n * @memberof core/keymap\n * @public\n */\nvar add = oneOrArray(addOne);\n\n/**\n * Registers a set of key codes.\n *\n * @function addAll\n * @param   {Object<String,Number|Number[]>}    set  A map of names to keyCodes\n *\n * @returns {undefined}\n * @curried\n * @memberof core/keymap\n * @public\n */\nexports.add = add;\nvar addAll = forEachObj(add);\n\n/**\n * Unregisters `keyCode` from `name`.\n *\n * @function remove\n * @param   {String}          name     Name for the key code\n * @param   {Number|Number[]} keyCode  A key code or array of key codes\n *\n * @returns {undefined}\n * @curried\n * @memberof core/keymap\n * @public\n */\nexports.addAll = addAll;\nvar remove = oneOrArray(removeOne);\n\n/**\n * Unregisters a set of key codes.\n *\n * @function removeAll\n * @param   {Object}    set  A map of names to keyCodes\n *\n * @returns {undefined}\n * @curried\n * @memberof core/keymap\n * @public\n */\nexports.remove = remove;\nvar removeAll = forEachObj(remove);\n\n/**\n * Determines if `keyCode` is mapped to `name`.\n *\n * @function is\n * @param   {String}    name     Name for the key code\n * @param   {Number}    keyCode  A key code\n *\n * @returns {Boolean}            `true` if `keyCode` is mapped to `name`\n * @curried\n * @memberof core/keymap\n * @public\n */\nexports.removeAll = removeAll;\nvar is = (0, _curry[\"default\"])(function (name, keyCode) {\n  name = toLowerCase(name);\n  return name in map && map[name].indexOf(keyCode) >= 0;\n});\nexports.is = is;","map":{"version":3,"names":["Object","defineProperty","exports","value","removeAll","remove","is","addAll","add","_curry","_interopRequireDefault","require","obj","__esModule","map","toLowerCase","name","forEachObj","fn","set","keys","forEach","oneOrArray","keyCode","Array","isArray","addOne","index","indexOf","push","removeOne","splice"],"sources":["/Users/gitchan/Projects/gitchan-yonsei/2024-enact-template/node_modules/@enact/core/keymap/keymap.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.removeAll = exports.remove = exports.is = exports.addAll = exports.add = void 0;\nvar _curry = _interopRequireDefault(require(\"ramda/src/curry\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n/*\n * The singleton map of names to keyCodes. If a name doesn't have any keyCodes mapped to it, it will\n * not exist in this map. If it does, its value will be an array of its keyCodes.\n *\n * @type {Object}\n * @private\n */\nvar map = {};\n\n/*\n * Safely converts keymap name to lowercase.\n *\n * @function\n * @param   {String} name  Name for keyCode\n *\n * @returns {String}       Name for keyCode in lowercase\n * @memberof core/keymap\n * @private\n */\nvar toLowerCase = function toLowerCase(name) {\n  return name ? name.toLowerCase() : '';\n};\n\n/*\n * Iterates over `set` and invokes `fn` with the key and value of each item.\n *\n * @function\n * @param   {Function}  fn   Function to invoke\n * @param   {Object}    set  A map of names to keyCodes\n *\n * @returns {undefined}\n * @memberof core/keymap\n * @private\n */\nvar forEachObj = (0, _curry[\"default\"])(function (fn, set) {\n  Object.keys(set).forEach(function (name) {\n    return fn(name, set[name]);\n  });\n});\n\n/*\n * Invokes `fn` with `name` and `keyCode` for each key code provided.\n *\n * @function\n * @param   {Function}        fn       Function to invoke\n * @param   {String}          name     Name for the key codes\n * @param   {Number|Number[]} keyCode  A key code or array of key codes\n *\n * @returns {undefined}\n * @curried\n * @memberof core/keymap\n * @private\n */\nvar oneOrArray = (0, _curry[\"default\"])(function (fn, name, keyCode) {\n  if (Array.isArray(keyCode)) {\n    keyCode.forEach(fn(name));\n  } else {\n    fn(name, keyCode);\n  }\n});\n\n/*\n * Adds `keyCode` to `name`.\n *\n * @function\n * @param   {String}    name     Name for the key code\n * @param   {Number}    keyCode  A key code\n *\n * @returns {undefined}\n * @curried\n * @memberof core/keymap\n * @private\n */\nvar addOne = (0, _curry[\"default\"])(function (name, keyCode) {\n  name = toLowerCase(name);\n  if (name in map) {\n    var index = map[name].indexOf(keyCode);\n    if (index === -1) {\n      map[name].push(keyCode);\n    }\n  } else if (name) {\n    map[name] = [keyCode];\n  }\n});\n\n/*\n * Removes `keyCode` from `name`.\n *\n * @function\n * @param   {String}    name     Name for the key code\n * @param   {Number}    keyCode  A key code\n *\n * @returns {undefined}\n * @curried\n * @memberof core/keymap\n * @private\n */\nvar removeOne = (0, _curry[\"default\"])(function (name, keyCode) {\n  name = toLowerCase(name);\n  if (name in map) {\n    var keys = map[name];\n    var index = keys.indexOf(keyCode);\n    if (index === -1) {\n      delete map[name];\n    } else {\n      keys.splice(index, 1);\n    }\n  }\n});\n\n/**\n * Registers `keyCode` for `name`.\n *\n * @function add\n * @param   {String}          name     Name for the key code\n * @param   {Number|Number[]} keyCode  A key code or array of key codes\n *\n * @returns {undefined}\n * @curried\n * @memberof core/keymap\n * @public\n */\nvar add = oneOrArray(addOne);\n\n/**\n * Registers a set of key codes.\n *\n * @function addAll\n * @param   {Object<String,Number|Number[]>}    set  A map of names to keyCodes\n *\n * @returns {undefined}\n * @curried\n * @memberof core/keymap\n * @public\n */\nexports.add = add;\nvar addAll = forEachObj(add);\n\n/**\n * Unregisters `keyCode` from `name`.\n *\n * @function remove\n * @param   {String}          name     Name for the key code\n * @param   {Number|Number[]} keyCode  A key code or array of key codes\n *\n * @returns {undefined}\n * @curried\n * @memberof core/keymap\n * @public\n */\nexports.addAll = addAll;\nvar remove = oneOrArray(removeOne);\n\n/**\n * Unregisters a set of key codes.\n *\n * @function removeAll\n * @param   {Object}    set  A map of names to keyCodes\n *\n * @returns {undefined}\n * @curried\n * @memberof core/keymap\n * @public\n */\nexports.remove = remove;\nvar removeAll = forEachObj(remove);\n\n/**\n * Determines if `keyCode` is mapped to `name`.\n *\n * @function is\n * @param   {String}    name     Name for the key code\n * @param   {Number}    keyCode  A key code\n *\n * @returns {Boolean}            `true` if `keyCode` is mapped to `name`\n * @curried\n * @memberof core/keymap\n * @public\n */\nexports.removeAll = removeAll;\nvar is = (0, _curry[\"default\"])(function (name, keyCode) {\n  name = toLowerCase(name);\n  return name in map && map[name].indexOf(keyCode) >= 0;\n});\nexports.is = is;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}