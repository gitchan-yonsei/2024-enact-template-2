{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getContainerConfig = exports.getAllContainerIds = exports.containerAttribute = exports.configureDefaults = exports.configureContainer = exports.addContainer = void 0;\nexports.getContainerDefaultElement = getContainerDefaultElement;\nexports.getContainerFocusTarget = getContainerFocusTarget;\nexports.getContainerId = void 0;\nexports.getContainerLastFocusedElement = getContainerLastFocusedElement;\nexports.getContainerNavigableElements = getContainerNavigableElements;\nexports.getContainerNode = void 0;\nexports.getContainerPreviousTarget = getContainerPreviousTarget;\nexports.getContainersForNode = getContainersForNode;\nexports.getDeepSpottableDescendants = void 0;\nexports.getDefaultContainer = getDefaultContainer;\nexports.getLastContainer = getLastContainer;\nexports.getNavigableContainersForNode = getNavigableContainersForNode;\nexports.isNavigable = exports.isContainer5WayHoldable = exports.isContainer = exports.getSpottableDescendants = void 0;\nexports.isWithinOverflowContainer = isWithinOverflowContainer;\nexports.mayActivateContainer = mayActivateContainer;\nexports.notifyEnterContainer = notifyEnterContainer;\nexports.notifyLeaveContainer = notifyLeaveContainer;\nexports.notifyLeaveContainerFail = notifyLeaveContainerFail;\nexports.rootContainerId = exports.removeContainer = exports.removeAllContainers = void 0;\nexports.setContainerLastFocusedElement = setContainerLastFocusedElement;\nexports.setContainerPreviousTarget = setContainerPreviousTarget;\nexports.setDefaultContainer = setDefaultContainer;\nexports.setLastContainer = setLastContainer;\nexports.setLastContainerFromTarget = setLastContainerFromTarget;\nexports.unmountContainer = unmountContainer;\nvar _and = _interopRequireDefault(require(\"ramda/src/and\"));\nvar _concat = _interopRequireDefault(require(\"ramda/src/concat\"));\nvar _snapshot = require(\"@enact/core/snapshot\");\nvar _util = require(\"@enact/core/util\");\nvar _intersection = _interopRequireDefault(require(\"ramda/src/intersection\"));\nvar _last = _interopRequireDefault(require(\"ramda/src/last\"));\nvar _utils = require(\"./utils\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n} /**\n   * Exports methods and members for creating and maintaining spotlight containers.\n   *\n   * @module spotlight/container\n   * @private\n   */\nvar containerAttribute = 'data-spotlight-id';\nexports.containerAttribute = containerAttribute;\nvar containerConfigs = new Map();\nvar containerKey = 'spotlightId';\nvar disabledKey = 'spotlightContainerDisabled';\nvar containerPrefix = 'container-';\nvar containerSelector = '[data-spotlight-container]';\nvar rootContainerId = 'spotlightRootDecorator';\nexports.rootContainerId = rootContainerId;\nvar reverseDirections = {\n  'left': 'right',\n  'up': 'down',\n  'right': 'left',\n  'down': 'up'\n};\n\n// Incrementer for container IDs\nvar _ids = 0;\nvar _defaultContainerId = '';\nvar _lastContainerId = '';\n\n// Note: an <extSelector> can be one of following types:\n// - a valid selector string for \"querySelectorAll\"\n// - a NodeList or an array containing DOM elements\n// - a single DOM element\n// - a string \"@<containerId>\" to indicate the specified container\n// - a string \"@\" to indicate the default container\nvar GlobalConfig = {\n  // set to false for unmounted containers to omit them from searches\n  active: true,\n  continue5WayHold: false,\n  defaultElement: '',\n  // <extSelector> except \"@\" syntax.\n  enterTo: '',\n  // '', 'last-focused', 'default-element'\n  isStandardFocusableMode: false,\n  // @private - set to true to focus standard focusable element\n  lastFocusedElement: null,\n  lastFocusedKey: null,\n  lastFocusedPersist: function lastFocusedPersist(node, all) {\n    var container = typeof node === 'string';\n    return {\n      container: container,\n      element: !container,\n      key: container ? node : all.indexOf(node)\n    };\n  },\n  lastFocusedRestore: function lastFocusedRestore(_ref, all) {\n    var container = _ref.container,\n      key = _ref.key;\n    return container ? key : all[key];\n  },\n  leaveFor: null,\n  // {left: <extSelector>, right: <extSelector>, up: <extSelector>, down: <extSelector>}\n  navigableFilter: null,\n  obliqueMultiplier: 5,\n  onEnterContainer: null,\n  // @private - notify the container when entering via 5-way\n  onLeaveContainer: null,\n  // @private - notify the container when leaving via 5-way\n  onLeaveContainerFail: null,\n  // @private - notify the container when failing to leave via 5-way\n  overflow: false,\n  partition: false,\n  // use the container bounds for partitioning when leaving\n  rememberSource: false,\n  restrict: 'self-first',\n  // 'self-first', 'self-only', 'none'\n  selector: '',\n  // can be a valid <extSelector> except \"@\" syntax.\n  selectorDisabled: false,\n  straightMultiplier: 1,\n  straightOnly: false,\n  straightOverlapThreshold: 0.5,\n  tabIndexIgnoreList: 'a, input, select, textarea, button, iframe, [contentEditable=true]'\n};\n\n/**\n * Calculates nodes within `node` that match `includeSelector` and do not match `excludeSelector`\n *\n * @param   {Node}    node             DOM Node to query\n * @param   {String}  includeSelector  CSS selector of nodes to include\n * @param   {String}  excludeSelector  CSS selector for nodes to exclude\n *\n * @returns {Node[]}                   Array of nodes\n * @memberof spotlight/container\n * @private\n */\nvar querySelector = function querySelector(node, includeSelector, excludeSelector) {\n  var focusables = GlobalConfig.isStandardFocusableMode ? Array.prototype.filter.call(node.getElementsByTagName('*'), _utils.isStandardFocusable) : [];\n  var include = new Set([].concat(_toConsumableArray(node.querySelectorAll(includeSelector)), _toConsumableArray(focusables)));\n  var exclude = node.querySelectorAll(excludeSelector);\n  for (var i = 0; i < exclude.length; i++) {\n    include[\"delete\"](exclude[i]);\n  }\n  return Array.from(include);\n};\n\n/**\n * Determines if `node` is a spotlight container\n *\n * @param   {Node}     node   Node to check\n *\n * @returns {Boolean}        `true` if `node` is a spotlight container\n * @memberof spotlight/container\n * @private\n */\nvar isContainerNode = function isContainerNode(node) {\n  return node && node.dataset && 'spotlightContainer' in node.dataset;\n};\n\n/**\n * Walks up the node hierarchy calling `fn` on each node that is a container\n *\n * @param   {Node}     node  Node from which to start the search\n * @param   {Function} fn    Called once for each container with the container node as the first\n *                           argument. The return value is accumulated in the array returned by\n *                           `mapContainers`\n *\n * @returns {Array}          Array of values returned by `fn` in order of outermost container to\n *                           innermost container\n * @memberof spotlight/container\n * @private\n */\nvar mapContainers = function mapContainers(node, fn) {\n  var result = [];\n  while (node && node !== document) {\n    if (isContainerNode(node)) {\n      result.unshift(fn(node));\n    }\n    node = node.parentNode;\n  }\n  return result;\n};\n\n/**\n * Returns the container config for `containerId`\n *\n * @param   {String}  id  Container ID\n *\n * @returns {Object}      Container config\n * @memberof spotlight/container\n * @private\n */\nvar getContainerConfig = function getContainerConfig(id) {\n  return containerConfigs.get(id);\n};\n\n/**\n * Determines if node or a container id represents a spotlight container\n *\n * @param   {Node|String}  nodeOrId  Node or container ID\n *\n * @returns {Boolean}                `true` if `nodeOrId` represents a spotlight container\n * @memberof spotlight/container\n * @private\n */\nexports.getContainerConfig = getContainerConfig;\nvar isContainer = function isContainer(nodeOrId) {\n  if (typeof nodeOrId === 'string') {\n    return containerConfigs.has(nodeOrId);\n  }\n  return isContainerNode(nodeOrId);\n};\n\n/**\n * Determines if any of the containers at or above `node` are disabled and, if so, returns `false`.\n *\n * @param   {Node}     node  Spottable node or spotlight container\n *\n * @returns {Boolean}        `true` if all container ancestors are enabled\n * @memberof spotlight/container\n * @private\n */\nexports.isContainer = isContainer;\nvar isContainerEnabled = function isContainerEnabled(node) {\n  return mapContainers(node, function (container) {\n    return container.dataset[disabledKey] !== 'true';\n  }).reduce(_and[\"default\"], true);\n};\n\n/**\n * Returns the container ID for `node`\n *\n * @param   {Node}    node  Container Node\n *\n * @returns {String}        Container ID\n * @memberof spotlight/container\n * @private\n */\nvar getContainerId = function getContainerId(node) {\n  return node.dataset[containerKey];\n};\n\n/**\n * Generates a CSS selector string for a current container if `node` is a container\n *\n * @param   {Node}    node  Container Node\n *\n * @returns {String}        CSS selector\n * @memberof spotlight/container\n * @private\n */\nexports.getContainerId = getContainerId;\nvar getContainerSelector = function getContainerSelector(node) {\n  if (isContainerNode(node)) {\n    return \"[\".concat(containerAttribute, \"=\\\"\").concat(getContainerId(node), \"\\\"]\");\n  }\n  return '';\n};\n\n/**\n * Generates a CSS selector string for containers within `node` if it is a container\n *\n * @param   {Node}    node  Container Node\n *\n * @returns {String}        CSS selector\n * @memberof spotlight/container\n * @private\n */\nvar getSubContainerSelector = function getSubContainerSelector(node) {\n  if (isContainerNode(node)) {\n    return \"\".concat(getContainerSelector(node), \" \").concat(containerSelector);\n  }\n  return containerSelector;\n};\n\n/**\n * Returns the node for a container\n *\n * @param   {String}  containerId  ID of container\n *\n * @returns {Node}                 DOM node of the container\n * @memberof spotlight/container\n * @private\n */\nvar getContainerNode = function getContainerNode(containerId) {\n  if (!containerId) {\n    return null;\n  } else if (containerId === rootContainerId) {\n    return document;\n  }\n  return document.querySelector(\"[\".concat(containerAttribute, \"=\\\"\").concat(containerId, \"\\\"]\"));\n};\n\n/**\n * Calls the `navigableFilter` function for the container if defined.\n *\n * @param   {Node}    node         DOM node to check if it is navigable\n * @param   {String}  containerId  ID of container\n *\n * @returns {Boolean}              `true` if it passes the `navigableFilter` method or if that\n *                                  method is not defined for the container\n * @memberof spotlight/container\n * @private\n */\nexports.getContainerNode = getContainerNode;\nvar navigableFilter = function navigableFilter(node, containerId) {\n  var nodeStyle = node && (0, _snapshot.isWindowReady)() && window.getComputedStyle(node);\n  var config = getContainerConfig(containerId);\n  if (!nodeStyle || nodeStyle.display === 'none' || nodeStyle.visibility === 'hidden') {\n    return false;\n  }\n  if (config && typeof config.navigableFilter === 'function') {\n    if (config.navigableFilter(node, containerId) === false) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Determines nodes that are owned by `node` based on `aria-owns`.\n *\n * @param   {Node}   node          Owner\n *\n * @returns {Node[]}               Array of owned nodes\n * @memberof spotlight/container\n * @private\n */\nvar getOwnedNodes = function getOwnedNodes(node, selector) {\n  // if node is document, it will not have getAttribute and therefore can't have aria-owns\n  var owns = node && node.getAttribute && node.getAttribute('aria-owns');\n  if (owns) {\n    var ids = owns.split(' ');\n    return ids.map(function (id) {\n      return id && document.getElementById(id);\n    }).filter(Boolean).filter(function (n) {\n      return isContainerNode(n) || (0, _utils.matchSelector)(selector, n);\n    });\n  }\n  return [];\n};\n\n/**\n * Determines all spottable elements and containers that are directly contained by the container\n * identified by `containerId` and no other subcontainers.\n *\n * @param   {String}  containerId  ID of container\n *\n * @returns {Node[]}               Array of spottable elements and containers.\n * @memberof spotlight/container\n * @public\n */\nvar getSpottableDescendants = function getSpottableDescendants(containerId) {\n  var node = getContainerNode(containerId);\n\n  // if it's falsy or is a disabled container, return an empty set\n  if (!node || isContainerNode(node) && !isContainerEnabled(node)) {\n    return [];\n  }\n  var _ref2 = getContainerConfig(containerId) || {},\n    selector = _ref2.selector,\n    selectorDisabled = _ref2.selectorDisabled;\n  if (!selector || selectorDisabled) {\n    return [];\n  }\n  var spottableSelector = selector;\n  var subContainerSelector = getSubContainerSelector(node);\n  var candidates = querySelector(node, \"\".concat(spottableSelector, \", \").concat(getContainerSelector(node), \" \").concat(containerSelector, \":not([data-spotlight-container-disabled=\\\"true\\\"])\"), \"\".concat(subContainerSelector, \" \").concat(spottableSelector, \", \").concat(subContainerSelector, \" \").concat(containerSelector));\n  candidates.push.apply(candidates, _toConsumableArray(getOwnedNodes(node, selector)));\n  return candidates.filter(function (n) {\n    return navigableFilter(n, containerId);\n  });\n};\n\n/**\n * Recursively get spottable descendants by including elements within sub-containers that do not\n * have `enterTo` configured\n *\n * @param   {String}    containerId          ID of container\n * @param   {String[]}  [excludedContainers] IDs of containers to exclude from result set\n *\n * @returns {Node[]}                         Array of spottable elements and containers\n * @memberof spotlight/container\n * @private\n */\nexports.getSpottableDescendants = getSpottableDescendants;\nvar getDeepSpottableDescendants = function getDeepSpottableDescendants(containerId, excludedContainers) {\n  return getSpottableDescendants(containerId).map(function (n) {\n    if (isContainer(n)) {\n      var id = getContainerId(n);\n      var config = getContainerConfig(id);\n      if (excludedContainers && excludedContainers.indexOf(id) >= 0) {\n        return [];\n      } else if (config && !config.enterTo) {\n        return getDeepSpottableDescendants(id, excludedContainers);\n      }\n    }\n    return [n];\n  }).reduce(_concat[\"default\"], []);\n};\n\n/**\n * Determines if a container allows 5-way key hold to be preserved or not.\n *\n * @param {String} containerId Container Id\n * @returns {Boolean} `true` if a container is 5 way holdable\n * @memberof spotlight/container\n * @private\n */\nexports.getDeepSpottableDescendants = getDeepSpottableDescendants;\nvar isContainer5WayHoldable = function isContainer5WayHoldable(containerId) {\n  var config = getContainerConfig(containerId);\n  return config && config.continue5WayHold || false;\n};\n\n/**\n * Returns an array of ids for containers that wrap the element, in order of outer-to-inner, with\n * the last array item being the immediate container id of the element.\n *\n * @param   {Node}      node  Node from which to start the search\n *\n * @returns {String[]}        Array on container IDs\n * @memberof spotlight/container\n * @private\n */\nexports.isContainer5WayHoldable = isContainer5WayHoldable;\nfunction getContainersForNode(node) {\n  var containers = mapContainers(node, getContainerId);\n  containers.unshift(rootContainerId);\n  return containers;\n}\n\n/**\n * Returns an array of ids for containers that wrap the element, in order of outer-to-inner, with\n * the last array item being the immediate container id of the element. The container ids are\n * limited to only those between `node` and the first restrict=\"self-only\" container.\n *\n * @param   {Node}      node  Node from which to start the search\n *\n * @returns {String[]}        Array on container IDs\n * @memberof spotlight/container\n * @private\n */\nfunction getNavigableContainersForNode(node) {\n  var containerIds = getContainersForNode(node);\n\n  // find first self-only container id\n  var selfOnlyIndex = containerIds.map(getContainerConfig).filter(function (config) {\n    return config != null;\n  }).reduceRight(function (index, config, i) {\n    if (index === -1 && config.restrict === 'self-only') {\n      return i;\n    }\n    return index;\n  }, -1);\n\n  // if we found one (and it's not the root), slice those off and return\n  if (selfOnlyIndex > 0) {\n    return containerIds.slice(selfOnlyIndex);\n  }\n  return containerIds;\n}\n\n/**\n * Generates a new unique identifier for a container\n *\n * @returns {String} Container ID\n * @memberof spotlight/container\n * @private\n */\nfunction generateId() {\n  var id;\n  /* eslint no-constant-condition: [\"error\", { \"checkLoops\": false }] */\n  while (true) {\n    id = containerPrefix + String(++_ids);\n    if (!isContainer(id)) {\n      break;\n    }\n  }\n  return id;\n}\n\n/**\n * Merges two container configurations while only allowing keys from `updated` which are defined in\n * `GlobalConfig`\n *\n * @param   {Object}  current  Current container configuration\n * @param   {Object}  updated  Updated configuration which may only be a partial configuration\n *\n * @returns {Object}           Merged configuration\n * @memberof spotlight/container\n * @private\n */\nvar mergeConfig = function mergeConfig(current, updated) {\n  if (!updated) return current;\n  var cfg = null;\n  Object.keys(updated).forEach(function (key) {\n    if (key in GlobalConfig && current[key] !== updated[key]) {\n      if (cfg == null) {\n        cfg = Object.assign({}, current);\n      }\n      cfg[key] = updated[key];\n    }\n  });\n  return cfg || current;\n};\n\n/**\n * Adds or updates a container. When a container id is not specified, it will be generated.\n *\n * @param   {String|Object}  containerIdOrConfig  Either a string container id or a configuration\n *                                                object.\n * @param   {Object}         [config]             Container configuration when `containerIdOrConfig`\n *                                                is a string. When omitted, the container will have\n *                                                the default `GlobalConfig`.\n *\n * @returns {String}                              The container id\n * @memberof spotlight/container\n * @public\n */\nvar configureContainer = function configureContainer() {\n  var containerId, config;\n  if (typeof (arguments.length <= 0 ? undefined : arguments[0]) === 'object') {\n    config = arguments.length <= 0 ? undefined : arguments[0];\n    containerId = config.id;\n  } else if (typeof (arguments.length <= 0 ? undefined : arguments[0]) === 'string') {\n    containerId = arguments.length <= 0 ? undefined : arguments[0];\n    if (typeof (arguments.length <= 1 ? undefined : arguments[1]) === 'object') {\n      config = arguments.length <= 1 ? undefined : arguments[1];\n    }\n  }\n  if (!containerId) {\n    containerId = generateId();\n  }\n  config = mergeConfig(containerConfigs.get(containerId) || _objectSpread({}, GlobalConfig), config);\n  containerConfigs.set(containerId, config);\n  return containerId;\n};\n\n/**\n * Adds a container and marks it active. When a container id is not specified, it will be generated.\n *\n * @param   {String|Object}  containerIdOrConfig  Either a string container id or a configuration\n *                                                object.\n * @param   {Object}         [config]             Container configuration when `containerIdOrConfig`\n *                                                is a string. When omitted, the container will have\n *                                                the default `GlobalConfig`.\n *\n * @returns {String}                              The container id\n * @memberof spotlight/container\n * @public\n */\nexports.configureContainer = configureContainer;\nvar addContainer = function addContainer() {\n  var containerId = configureContainer.apply(void 0, arguments);\n  var config = getContainerConfig(containerId);\n  config.active = true;\n  return containerId;\n};\n\n/**\n * Removes a container\n *\n * @param   {String}     containerId  ID of the container to remove\n *\n * @returns {undefined}\n * @memberof spotlight/container\n * @public\n */\nexports.addContainer = addContainer;\nvar removeContainer = function removeContainer(containerId) {\n  containerConfigs[\"delete\"](containerId);\n};\n\n/**\n * Removes all containers\n *\n * @returns {undefined}\n * @memberof spotlight/container\n * @public\n */\nexports.removeContainer = removeContainer;\nvar removeAllContainers = function removeAllContainers() {\n  containerConfigs.clear();\n};\n\n/**\n * Configures the `GlobalConfig` for containers\n *\n * @param   {Object}  config  New global configuration. Cannot introduce new keys\n *\n * @returns {undefined}\n * @memberof spotlight/container\n * @public\n */\nexports.removeAllContainers = removeAllContainers;\nvar configureDefaults = function configureDefaults(config) {\n  GlobalConfig = mergeConfig(GlobalConfig, config);\n};\n\n/**\n * Determines if `node` is a navigable element within the container identified by `containerId`.\n *\n * @param   {Node}     node         DOM node to check if it is navigable\n * @param   {String}   containerId  ID of the container containing `node`\n * @param   {Boolean}  verify       `true` to verify the node matches the container's `selector`\n *\n * @returns {Boolean}               `true` if `node` is navigable\n * @memberof spotlight/container\n * @public\n */\nexports.configureDefaults = configureDefaults;\nvar isNavigable = function isNavigable(node, containerId, verify) {\n  if (!node ||\n  // jsdom reports all nodes as having no size so we must skip this condition in our tests\n  process.env.NODE_ENV !== 'test' && node.offsetWidth <= 0 && node.offsetHeight <= 0) {\n    return false;\n  }\n  var containerNode = getContainerNode(containerId);\n  if (containerNode !== document && containerNode.dataset[disabledKey] === 'true') {\n    return false;\n  }\n  var config = getContainerConfig(containerId);\n  if (verify && config && config.selector && !isContainer(node) && !(0, _utils.matchSelector)(config.selector, node) && !(GlobalConfig.isStandardFocusableMode && (0, _utils.isStandardFocusable)(node))) {\n    return false;\n  }\n  return navigableFilter(node, containerId);\n};\n\n/**\n * Returns the IDs of all containers\n *\n * @returns {String[]}  Array of container IDs\n * @memberof spotlight/container\n * @private\n */\nexports.isNavigable = isNavigable;\nvar getAllContainerIds = function getAllContainerIds() {\n  var ids = [];\n  var keys = containerConfigs.keys();\n\n  // PhantomJS-friendly iterator->array conversion\n  var id;\n  while ((id = keys.next()) && !id.done) {\n    if (isActiveContainer(id.value)) {\n      ids.push(id.value);\n    }\n  }\n  return ids;\n};\n\n/**\n * Returns the default focus element for a container\n *\n * @param   {String}                                       containerId        Container ID\n * @param   {('last-focused'|'default-element'|'topmost')} [preferredEnterTo] Prefer the given enterTo configuration\n *\n * @returns {Node|null}                 Default focus element\n * @memberof spotlight/container\n * @public\n */\nexports.getAllContainerIds = getAllContainerIds;\nfunction getContainerDefaultElement(containerId, preferredEnterTo) {\n  var config = getContainerConfig(containerId);\n  var defaultElementSelector = config && config.defaultElement;\n  if (!defaultElementSelector) {\n    return null;\n  }\n  defaultElementSelector = (0, _util.coerceArray)(defaultElementSelector);\n\n  // If a preferred enterTo has been provided, we will favor it by making it first in search array\n  if (preferredEnterTo && typeof preferredEnterTo === 'string' && preferredEnterTo !== 'default-element') {\n    defaultElementSelector.unshift(preferredEnterTo);\n  }\n  var spottables = getDeepSpottableDescendants(containerId);\n  return defaultElementSelector.reduce(function (result, selector) {\n    if (result) {\n      return result;\n    }\n    if (typeof selector === 'string') {\n      return spottables.filter(function (elem) {\n        return (0, _utils.matchSelector)(selector, elem) && isNavigable(elem, containerId, true);\n      })[0];\n    }\n\n    // FIXME: There is some prior implicit support for `defaultElement` to be an element rather\n    // than a selector. This continues that support but should eventually be removed.\n    return selector;\n  }, null);\n}\n\n/**\n * Gets the element last focused within the container.\n *\n * @param   {String}       containerId  ID of container\n *\n * @returns {Node|String|null}               DOM Node last focused\n * @memberof spotlight/container\n * @public\n */\nfunction getContainerLastFocusedElement(containerId) {\n  var config = getContainerConfig(containerId);\n  if (!config || !config.lastFocusedElement) {\n    return null;\n  }\n\n  // lastFocusedElement may be a container ID so try to convert it to a node to test navigability\n  var lastFocusedElement = config.lastFocusedElement;\n  var node = lastFocusedElement;\n  if (typeof node === 'string') {\n    node = getContainerNode(lastFocusedElement);\n  }\n  return isNavigable(node, containerId, true) ? lastFocusedElement : null;\n}\n\n/**\n * Sets the element last focused within the container\n *\n * @param   {Node}      node         DOM node last focused\n * @param   {String[]}  containerId  ID of container\n *\n * @returns {undefined}\n * @memberof spotlight/container\n * @public\n */\nfunction setContainerLastFocusedElement(node, containerIds) {\n  var lastFocusedElement = node;\n  for (var i = containerIds.length - 1; i > -1; i--) {\n    var id = containerIds[i];\n    configureContainer(id, {\n      lastFocusedElement: lastFocusedElement\n    });\n\n    // If any container in the stack is controlling entering focus, use its container id as the\n    // lastFocusedElement instead of the node\n    var config = getContainerConfig(id);\n    if (config.enterTo) {\n      lastFocusedElement = id;\n    }\n  }\n}\n\n/**\n * Returns all navigable nodes (spottable nodes or containers) visible from outside the container.\n * If the container is restricting navigation into itself via `enterTo`, this method will attempt to\n * return that element as the only element in an array. If that fails or if navigation is not\n * restricted, it will return an array of all possible navigable nodes.\n *\n * @param   {String}                                       containerId        Container ID\n * @param   {('last-focused'|'default-element'|'topmost')} [preferredEnterTo] Prefer the given enterTo configuration\n *\n * @returns {Node[]}             Navigable elements within container\n * @memberof spotlight/container\n * @public\n */\nfunction getContainerNavigableElements(containerId, preferredEnterTo) {\n  if (!isContainer(containerId)) {\n    return [];\n  }\n  var config = getContainerConfig(containerId);\n  var enterTo = config.enterTo,\n    overflow = config.overflow;\n  var enterLast = preferredEnterTo === 'last-focused' || enterTo === 'last-focused' && !preferredEnterTo;\n  var next;\n\n  // if the container has a preferred entry point, try to find it first\n  if (enterLast) {\n    next = getContainerLastFocusedElement(containerId);\n  }\n\n  // try default element if last focused can't be focused\n  if (!next) {\n    next = getContainerDefaultElement(containerId, preferredEnterTo);\n  }\n  if (!next) {\n    var spottables = overflow ?\n    // overflow requires deep recursion to handle selecting the children of unrestricted\n    // containers or restricted containers larger than the container\n    getDeepSpottableDescendants(containerId) : getSpottableDescendants(containerId);\n\n    // if there isn't a preferred entry on an overflow container, filter the visible elements\n    if (overflow) {\n      var containerRect = (0, _utils.getContainerRect)(containerId);\n      next = containerRect && spottables.filter(function (element) {\n        var elementRect = (0, _utils.getRect)(element);\n        if (isContainer(element)) {\n          return (0, _utils.intersects)(containerRect, elementRect);\n        }\n        return (0, _utils.contains)(containerRect, (0, _utils.getRect)(element));\n      });\n      if (next && preferredEnterTo === 'topmost') {\n        next.sort(function (a, b) {\n          return (0, _utils.getRect)(a).top - (0, _utils.getRect)(b).top;\n        });\n      }\n    }\n\n    // otherwise, return all spottables within the container\n    if (!next) {\n      next = spottables;\n    }\n  }\n  return next ? (0, _util.coerceArray)(next) : [];\n}\n\n/**\n * Determines the preferred focus target, traversing any sub-containers as necessary, for the given\n * container.\n *\n * @param   {String}                                       containerId        Container ID\n * @param   {('last-focused'|'default-element'|'topmost')} [preferredEnterTo] Prefer the given enterTo configuration\n *\n * @returns {Node}                 Preferred target as either a DOM node or container-id\n * @memberof spotlight/container\n * @public\n */\nfunction getContainerFocusTarget(containerId, preferredEnterTo) {\n  // deferring restoration until it's requested to allow containers to prepare first\n  restoreLastFocusedElement(containerId);\n  var next = getContainerNavigableElements(containerId, preferredEnterTo);\n  // If multiple candidates returned, we need to find the first viable target since some may\n  // be empty containers which should be skipped.\n  return next.reduce(function (result, element) {\n    if (result) {\n      return result;\n    } else if (isContainer(element)) {\n      var nextId = isContainerNode(element) ? getContainerId(element) : element;\n      return getContainerFocusTarget(nextId);\n    }\n    return element;\n  }, null) || null;\n}\nfunction getContainerPreviousTarget(containerId, direction, destination) {\n  var config = getContainerConfig(containerId);\n  if (config && config.rememberSource && config.previous && config.previous.reverse === direction && config.previous.destination === destination) {\n    return config.previous.target;\n  }\n}\nfunction setContainerPreviousTarget(containerId, direction, destination, target) {\n  var config = getContainerConfig(containerId);\n  if (config && config.rememberSource) {\n    configureContainer(containerId, {\n      previous: {\n        target: target,\n        destination: destination,\n        reverse: reverseDirections[direction]\n      }\n    });\n  }\n}\n\n/**\n * Saves the last focused element into `lastFocusedKey` using a container-defined serialization\n * method configured in `lastFocusedPersist`.\n *\n * @param   {String}     containerId  ID of container\n *\n * @returns {undefined}\n * @memberof spotlight/container\n * @public\n */\nfunction persistLastFocusedElement(containerId) {\n  var cfg = getContainerConfig(containerId);\n  if (cfg) {\n    var lastFocusedElement = cfg.lastFocusedElement;\n    if (lastFocusedElement) {\n      var all = getDeepSpottableDescendants(containerId);\n      var lastFocusedKey = cfg.lastFocusedPersist(lastFocusedElement, all);\n\n      // store lastFocusedKey and release node reference to lastFocusedElement\n      cfg.lastFocusedKey = lastFocusedKey;\n      cfg.lastFocusedElement = null;\n    }\n  }\n}\n\n/**\n * Restores the last focused element from `lastFocusedKey` using a container-defined deserialization\n * method configured in `lastFocusedRestore`.\n *\n * @param   {String}     containerId  ID of container\n *\n * @returns {undefined}\n * @memberof spotlight/container\n * @public\n */\nfunction restoreLastFocusedElement(containerId) {\n  var cfg = getContainerConfig(containerId);\n  if (cfg && cfg.lastFocusedKey) {\n    var all = getDeepSpottableDescendants(containerId);\n    var lastFocusedElement = cfg.lastFocusedRestore(cfg.lastFocusedKey, all);\n\n    // restore lastFocusedElement and release lastFocusedKey\n    cfg.lastFocusedKey = null;\n    cfg.lastFocusedElement = lastFocusedElement;\n  }\n}\nfunction unmountContainer(containerId) {\n  var config = getContainerConfig(containerId);\n  if (config) {\n    config.active = false;\n    persistLastFocusedElement(containerId);\n    if (typeof config.defaultElement !== 'string') {\n      config.defaultElement = null;\n    }\n  }\n}\nfunction isActiveContainer(containerId) {\n  var config = getContainerConfig(containerId);\n  return config && config.active;\n}\n\n/**\n * Determines if the provided container has a configured restriction.\n *\n * By default, returns `true` for `'self-only'` restrictions but the type of restriction can be\n * passed as well.\n *\n * @param {String} containerId The container id\n * @param {String} [restrict] The container restriction defaulted to `'self-only'`\n * @returns {Boolean} `true` if the container has the specified restriction\n * @private\n */\nfunction isRestrictedContainer(containerId) {\n  var restrict = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'self-only';\n  var config = getContainerConfig(containerId);\n  return Boolean(config && config.restrict === restrict);\n}\n\n/**\n * Determines if `innerContainerId` is inside `outerContainerId`.\n *\n * @param {String} outerContainerId The outer container id\n * @param {String} innerContainerId The inner container id\n * @returns {Boolean} `true` if both containers exist and `innerContainerId` is within\n *                    `outerContainerId`\n * @private\n */\nfunction containsContainer(outerContainerId, innerContainerId) {\n  var outer = getContainerNode(outerContainerId);\n  var inner = getContainerNode(innerContainerId);\n  return Boolean(outer && inner && outer.contains(inner));\n}\n\n/**\n * Determines if `containerId` may become the active container.\n *\n * @param {String} containerId Spotlight container to which focus is leaving\n * @returns\t{Boolean} `true` if the active container can change to `containerId`\n * @private\n */\nfunction mayActivateContainer(containerId) {\n  var currentContainerId = getLastContainer();\n\n  // If the current container or its outer containers are restricted to 'self-only' and\n  // if the next container to be activated is not inside the restrict container,\n  // the next container should not be activated.\n  var currentContainerNode = getContainerNode(currentContainerId);\n  var restrictContainer = getContainersForNode(currentContainerNode).reduceRight(function (result, outerContainerId) {\n    return result || (isRestrictedContainer(outerContainerId) ? outerContainerId : null);\n  }, null);\n  return !restrictContainer || containsContainer(restrictContainer, containerId);\n}\nfunction getDefaultContainer() {\n  return isActiveContainer(_defaultContainerId) ? _defaultContainerId : '';\n}\nfunction setDefaultContainer(containerId) {\n  if (!containerId) {\n    _defaultContainerId = '';\n  } else if (!getContainerConfig(containerId)) {\n    throw new Error('Container \"' + containerId + '\" doesn\\'t exist!');\n  } else {\n    _defaultContainerId = containerId;\n  }\n}\nfunction getLastContainer() {\n  return isActiveContainer(_lastContainerId) ? _lastContainerId : '';\n}\nfunction setLastContainer(containerId) {\n  _lastContainerId = containerId || '';\n}\n\n/**\n * Updates the last container based on the current focus and target focus.\n *\n * @param {Node} current Currently focused node\n * @param {Node} target  Target node. May or may not be focusable\n * @memberof spotlight/container\n * @public\n */\nfunction setLastContainerFromTarget(current, target) {\n  var currentContainers = getNavigableContainersForNode(current);\n  var currentOuterContainerId = currentContainers[0];\n  var currentContainerConfig = getContainerConfig(currentOuterContainerId);\n  var targetContainers = getContainersForNode(target);\n  var targetInnerContainer = (0, _last[\"default\"])(targetContainers);\n  var sharedContainer = (0, _last[\"default\"])((0, _intersection[\"default\"])(currentContainers, targetContainers));\n  if (sharedContainer || !currentContainerConfig || currentContainerConfig.restrict !== 'self-only') {\n    // If the target shares a container with the current container stack or the current\n    // element isn't within a self-only container, use the target's nearest container\n    setLastContainer(targetInnerContainer);\n  } else {\n    // Otherwise, the target is not within the current container stack and the current\n    // element was within a 'self-only' container, use the current's outer container\n    setLastContainer(currentOuterContainerId);\n  }\n}\nfunction isWithinOverflowContainer(target) {\n  var containerIds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getContainersForNode(target);\n  return containerIds\n  // ignore the root container id which is set to overflow by the root decorator\n  .filter(function (id) {\n    return id !== rootContainerId;\n  })\n  // get the config for each container\n  .map(getContainerConfig)\n  // and check if any are set to overflow\n  .some(function (config) {\n    return config && config.overflow;\n  });\n}\n\n/**\n * Notifies any affected containers that focus has left one of their children for another container\n *\n * @param {String} direction up/down/left/right\n * @param {Node} current currently focused element\n * @param {String[]} currentContainerIds Containers for current\n * @param {Node} next To be focused element\n * @param {String[]} nextContainerIds Containers for next\n * @private\n */\nfunction notifyLeaveContainer(direction, current, currentContainerIds, next, nextContainerIds) {\n  currentContainerIds.forEach(function (containerId) {\n    if (!nextContainerIds.includes(containerId)) {\n      var config = getContainerConfig(containerId);\n      if (config && config.onLeaveContainer) {\n        config.onLeaveContainer({\n          type: 'onLeaveContainer',\n          direction: direction,\n          target: current,\n          relatedTarget: next\n        });\n      }\n    }\n  });\n}\n\n/**\n * Notifies any containers that focus attempted to move but failed to find a target\n *\n * @param {String} direction up/down/left/right\n * @param {Node} current currently focused element\n * @param {String[]} currentContainerIds Containers for current\n * @private\n */\nfunction notifyLeaveContainerFail(direction, current, currentContainerIds) {\n  currentContainerIds.forEach(function (containerId) {\n    var config = getContainerConfig(containerId);\n    if (config && config.onLeaveContainerFail) {\n      config.onLeaveContainerFail({\n        type: 'onLeaveContainerFail',\n        direction: direction,\n        target: current\n      });\n    }\n  });\n}\n\n/**\n * Notifies any affected containers that one of their children has received focus.\n *\n * @param {String} direction up/down/left/right\n * @param {Node} previous Previously focused element\n * @param {String[]} previousContainerIds Containers for previous\n * @param {Node} current Currently focused element\n * @param {String[]} currentContainerIds Containers for current\n * @private\n */\nfunction notifyEnterContainer(direction, previous, previousContainerIds, current, currentContainerIds) {\n  currentContainerIds.forEach(function (containerId) {\n    if (!previousContainerIds.includes(containerId)) {\n      var config = getContainerConfig(containerId);\n      if (config && config.onEnterContainer) {\n        config.onEnterContainer({\n          type: 'onEnterContainer',\n          direction: direction,\n          target: current,\n          relatedTarget: previous\n        });\n      }\n    }\n  });\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","getContainerConfig","getAllContainerIds","containerAttribute","configureDefaults","configureContainer","addContainer","getContainerDefaultElement","getContainerFocusTarget","getContainerId","getContainerLastFocusedElement","getContainerNavigableElements","getContainerNode","getContainerPreviousTarget","getContainersForNode","getDeepSpottableDescendants","getDefaultContainer","getLastContainer","getNavigableContainersForNode","isNavigable","isContainer5WayHoldable","isContainer","getSpottableDescendants","isWithinOverflowContainer","mayActivateContainer","notifyEnterContainer","notifyLeaveContainer","notifyLeaveContainerFail","rootContainerId","removeContainer","removeAllContainers","setContainerLastFocusedElement","setContainerPreviousTarget","setDefaultContainer","setLastContainer","setLastContainerFromTarget","unmountContainer","_and","_interopRequireDefault","require","_concat","_snapshot","_util","_intersection","_last","_utils","obj","__esModule","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","o","minLen","_arrayLikeToArray","n","prototype","toString","slice","constructor","name","Array","from","test","iter","iterator","isArray","len","arr2","containerConfigs","Map","containerKey","disabledKey","containerPrefix","containerSelector","reverseDirections","_ids","_defaultContainerId","_lastContainerId","GlobalConfig","active","continue5WayHold","defaultElement","enterTo","isStandardFocusableMode","lastFocusedElement","lastFocusedKey","lastFocusedPersist","node","all","container","element","indexOf","lastFocusedRestore","_ref","leaveFor","navigableFilter","obliqueMultiplier","onEnterContainer","onLeaveContainer","onLeaveContainerFail","overflow","partition","rememberSource","restrict","selector","selectorDisabled","straightMultiplier","straightOnly","straightOverlapThreshold","tabIndexIgnoreList","querySelector","includeSelector","excludeSelector","focusables","getElementsByTagName","isStandardFocusable","include","Set","concat","querySelectorAll","exclude","isContainerNode","dataset","mapContainers","fn","result","document","unshift","parentNode","id","get","nodeOrId","has","isContainerEnabled","reduce","getContainerSelector","getSubContainerSelector","containerId","nodeStyle","isWindowReady","window","getComputedStyle","config","display","visibility","getOwnedNodes","owns","getAttribute","ids","split","map","getElementById","Boolean","matchSelector","_ref2","spottableSelector","subContainerSelector","candidates","excludedContainers","containers","containerIds","selfOnlyIndex","reduceRight","index","generateId","mergeConfig","current","updated","cfg","assign","set","clear","verify","process","env","NODE_ENV","offsetWidth","offsetHeight","containerNode","next","done","isActiveContainer","preferredEnterTo","defaultElementSelector","coerceArray","spottables","elem","enterLast","containerRect","getContainerRect","elementRect","getRect","intersects","contains","sort","a","b","top","restoreLastFocusedElement","nextId","direction","destination","previous","reverse","persistLastFocusedElement","isRestrictedContainer","containsContainer","outerContainerId","innerContainerId","outer","inner","currentContainerId","currentContainerNode","restrictContainer","Error","currentContainers","currentOuterContainerId","currentContainerConfig","targetContainers","targetInnerContainer","sharedContainer","some","currentContainerIds","nextContainerIds","includes","type","relatedTarget","previousContainerIds"],"sources":["/Users/gitchan/Projects/gitchan-yonsei/2024-enact-template/node_modules/@enact/spotlight/src/container.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getContainerConfig = exports.getAllContainerIds = exports.containerAttribute = exports.configureDefaults = exports.configureContainer = exports.addContainer = void 0;\nexports.getContainerDefaultElement = getContainerDefaultElement;\nexports.getContainerFocusTarget = getContainerFocusTarget;\nexports.getContainerId = void 0;\nexports.getContainerLastFocusedElement = getContainerLastFocusedElement;\nexports.getContainerNavigableElements = getContainerNavigableElements;\nexports.getContainerNode = void 0;\nexports.getContainerPreviousTarget = getContainerPreviousTarget;\nexports.getContainersForNode = getContainersForNode;\nexports.getDeepSpottableDescendants = void 0;\nexports.getDefaultContainer = getDefaultContainer;\nexports.getLastContainer = getLastContainer;\nexports.getNavigableContainersForNode = getNavigableContainersForNode;\nexports.isNavigable = exports.isContainer5WayHoldable = exports.isContainer = exports.getSpottableDescendants = void 0;\nexports.isWithinOverflowContainer = isWithinOverflowContainer;\nexports.mayActivateContainer = mayActivateContainer;\nexports.notifyEnterContainer = notifyEnterContainer;\nexports.notifyLeaveContainer = notifyLeaveContainer;\nexports.notifyLeaveContainerFail = notifyLeaveContainerFail;\nexports.rootContainerId = exports.removeContainer = exports.removeAllContainers = void 0;\nexports.setContainerLastFocusedElement = setContainerLastFocusedElement;\nexports.setContainerPreviousTarget = setContainerPreviousTarget;\nexports.setDefaultContainer = setDefaultContainer;\nexports.setLastContainer = setLastContainer;\nexports.setLastContainerFromTarget = setLastContainerFromTarget;\nexports.unmountContainer = unmountContainer;\nvar _and = _interopRequireDefault(require(\"ramda/src/and\"));\nvar _concat = _interopRequireDefault(require(\"ramda/src/concat\"));\nvar _snapshot = require(\"@enact/core/snapshot\");\nvar _util = require(\"@enact/core/util\");\nvar _intersection = _interopRequireDefault(require(\"ramda/src/intersection\"));\nvar _last = _interopRequireDefault(require(\"ramda/src/last\"));\nvar _utils = require(\"./utils\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; } /**\n                                                                                                                                                                                     * Exports methods and members for creating and maintaining spotlight containers.\n                                                                                                                                                                                     *\n                                                                                                                                                                                     * @module spotlight/container\n                                                                                                                                                                                     * @private\n                                                                                                                                                                                     */\nvar containerAttribute = 'data-spotlight-id';\nexports.containerAttribute = containerAttribute;\nvar containerConfigs = new Map();\nvar containerKey = 'spotlightId';\nvar disabledKey = 'spotlightContainerDisabled';\nvar containerPrefix = 'container-';\nvar containerSelector = '[data-spotlight-container]';\nvar rootContainerId = 'spotlightRootDecorator';\nexports.rootContainerId = rootContainerId;\nvar reverseDirections = {\n  'left': 'right',\n  'up': 'down',\n  'right': 'left',\n  'down': 'up'\n};\n\n// Incrementer for container IDs\nvar _ids = 0;\nvar _defaultContainerId = '';\nvar _lastContainerId = '';\n\n// Note: an <extSelector> can be one of following types:\n// - a valid selector string for \"querySelectorAll\"\n// - a NodeList or an array containing DOM elements\n// - a single DOM element\n// - a string \"@<containerId>\" to indicate the specified container\n// - a string \"@\" to indicate the default container\nvar GlobalConfig = {\n  // set to false for unmounted containers to omit them from searches\n  active: true,\n  continue5WayHold: false,\n  defaultElement: '',\n  // <extSelector> except \"@\" syntax.\n  enterTo: '',\n  // '', 'last-focused', 'default-element'\n  isStandardFocusableMode: false,\n  // @private - set to true to focus standard focusable element\n  lastFocusedElement: null,\n  lastFocusedKey: null,\n  lastFocusedPersist: function lastFocusedPersist(node, all) {\n    var container = typeof node === 'string';\n    return {\n      container: container,\n      element: !container,\n      key: container ? node : all.indexOf(node)\n    };\n  },\n  lastFocusedRestore: function lastFocusedRestore(_ref, all) {\n    var container = _ref.container,\n      key = _ref.key;\n    return container ? key : all[key];\n  },\n  leaveFor: null,\n  // {left: <extSelector>, right: <extSelector>, up: <extSelector>, down: <extSelector>}\n  navigableFilter: null,\n  obliqueMultiplier: 5,\n  onEnterContainer: null,\n  // @private - notify the container when entering via 5-way\n  onLeaveContainer: null,\n  // @private - notify the container when leaving via 5-way\n  onLeaveContainerFail: null,\n  // @private - notify the container when failing to leave via 5-way\n  overflow: false,\n  partition: false,\n  // use the container bounds for partitioning when leaving\n  rememberSource: false,\n  restrict: 'self-first',\n  // 'self-first', 'self-only', 'none'\n  selector: '',\n  // can be a valid <extSelector> except \"@\" syntax.\n  selectorDisabled: false,\n  straightMultiplier: 1,\n  straightOnly: false,\n  straightOverlapThreshold: 0.5,\n  tabIndexIgnoreList: 'a, input, select, textarea, button, iframe, [contentEditable=true]'\n};\n\n/**\n * Calculates nodes within `node` that match `includeSelector` and do not match `excludeSelector`\n *\n * @param   {Node}    node             DOM Node to query\n * @param   {String}  includeSelector  CSS selector of nodes to include\n * @param   {String}  excludeSelector  CSS selector for nodes to exclude\n *\n * @returns {Node[]}                   Array of nodes\n * @memberof spotlight/container\n * @private\n */\nvar querySelector = function querySelector(node, includeSelector, excludeSelector) {\n  var focusables = GlobalConfig.isStandardFocusableMode ? Array.prototype.filter.call(node.getElementsByTagName('*'), _utils.isStandardFocusable) : [];\n  var include = new Set([].concat(_toConsumableArray(node.querySelectorAll(includeSelector)), _toConsumableArray(focusables)));\n  var exclude = node.querySelectorAll(excludeSelector);\n  for (var i = 0; i < exclude.length; i++) {\n    include[\"delete\"](exclude[i]);\n  }\n  return Array.from(include);\n};\n\n/**\n * Determines if `node` is a spotlight container\n *\n * @param   {Node}     node   Node to check\n *\n * @returns {Boolean}        `true` if `node` is a spotlight container\n * @memberof spotlight/container\n * @private\n */\nvar isContainerNode = function isContainerNode(node) {\n  return node && node.dataset && 'spotlightContainer' in node.dataset;\n};\n\n/**\n * Walks up the node hierarchy calling `fn` on each node that is a container\n *\n * @param   {Node}     node  Node from which to start the search\n * @param   {Function} fn    Called once for each container with the container node as the first\n *                           argument. The return value is accumulated in the array returned by\n *                           `mapContainers`\n *\n * @returns {Array}          Array of values returned by `fn` in order of outermost container to\n *                           innermost container\n * @memberof spotlight/container\n * @private\n */\nvar mapContainers = function mapContainers(node, fn) {\n  var result = [];\n  while (node && node !== document) {\n    if (isContainerNode(node)) {\n      result.unshift(fn(node));\n    }\n    node = node.parentNode;\n  }\n  return result;\n};\n\n/**\n * Returns the container config for `containerId`\n *\n * @param   {String}  id  Container ID\n *\n * @returns {Object}      Container config\n * @memberof spotlight/container\n * @private\n */\nvar getContainerConfig = function getContainerConfig(id) {\n  return containerConfigs.get(id);\n};\n\n/**\n * Determines if node or a container id represents a spotlight container\n *\n * @param   {Node|String}  nodeOrId  Node or container ID\n *\n * @returns {Boolean}                `true` if `nodeOrId` represents a spotlight container\n * @memberof spotlight/container\n * @private\n */\nexports.getContainerConfig = getContainerConfig;\nvar isContainer = function isContainer(nodeOrId) {\n  if (typeof nodeOrId === 'string') {\n    return containerConfigs.has(nodeOrId);\n  }\n  return isContainerNode(nodeOrId);\n};\n\n/**\n * Determines if any of the containers at or above `node` are disabled and, if so, returns `false`.\n *\n * @param   {Node}     node  Spottable node or spotlight container\n *\n * @returns {Boolean}        `true` if all container ancestors are enabled\n * @memberof spotlight/container\n * @private\n */\nexports.isContainer = isContainer;\nvar isContainerEnabled = function isContainerEnabled(node) {\n  return mapContainers(node, function (container) {\n    return container.dataset[disabledKey] !== 'true';\n  }).reduce(_and[\"default\"], true);\n};\n\n/**\n * Returns the container ID for `node`\n *\n * @param   {Node}    node  Container Node\n *\n * @returns {String}        Container ID\n * @memberof spotlight/container\n * @private\n */\nvar getContainerId = function getContainerId(node) {\n  return node.dataset[containerKey];\n};\n\n/**\n * Generates a CSS selector string for a current container if `node` is a container\n *\n * @param   {Node}    node  Container Node\n *\n * @returns {String}        CSS selector\n * @memberof spotlight/container\n * @private\n */\nexports.getContainerId = getContainerId;\nvar getContainerSelector = function getContainerSelector(node) {\n  if (isContainerNode(node)) {\n    return \"[\".concat(containerAttribute, \"=\\\"\").concat(getContainerId(node), \"\\\"]\");\n  }\n  return '';\n};\n\n/**\n * Generates a CSS selector string for containers within `node` if it is a container\n *\n * @param   {Node}    node  Container Node\n *\n * @returns {String}        CSS selector\n * @memberof spotlight/container\n * @private\n */\nvar getSubContainerSelector = function getSubContainerSelector(node) {\n  if (isContainerNode(node)) {\n    return \"\".concat(getContainerSelector(node), \" \").concat(containerSelector);\n  }\n  return containerSelector;\n};\n\n/**\n * Returns the node for a container\n *\n * @param   {String}  containerId  ID of container\n *\n * @returns {Node}                 DOM node of the container\n * @memberof spotlight/container\n * @private\n */\nvar getContainerNode = function getContainerNode(containerId) {\n  if (!containerId) {\n    return null;\n  } else if (containerId === rootContainerId) {\n    return document;\n  }\n  return document.querySelector(\"[\".concat(containerAttribute, \"=\\\"\").concat(containerId, \"\\\"]\"));\n};\n\n/**\n * Calls the `navigableFilter` function for the container if defined.\n *\n * @param   {Node}    node         DOM node to check if it is navigable\n * @param   {String}  containerId  ID of container\n *\n * @returns {Boolean}              `true` if it passes the `navigableFilter` method or if that\n *                                  method is not defined for the container\n * @memberof spotlight/container\n * @private\n */\nexports.getContainerNode = getContainerNode;\nvar navigableFilter = function navigableFilter(node, containerId) {\n  var nodeStyle = node && (0, _snapshot.isWindowReady)() && window.getComputedStyle(node);\n  var config = getContainerConfig(containerId);\n  if (!nodeStyle || nodeStyle.display === 'none' || nodeStyle.visibility === 'hidden') {\n    return false;\n  }\n  if (config && typeof config.navigableFilter === 'function') {\n    if (config.navigableFilter(node, containerId) === false) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Determines nodes that are owned by `node` based on `aria-owns`.\n *\n * @param   {Node}   node          Owner\n *\n * @returns {Node[]}               Array of owned nodes\n * @memberof spotlight/container\n * @private\n */\nvar getOwnedNodes = function getOwnedNodes(node, selector) {\n  // if node is document, it will not have getAttribute and therefore can't have aria-owns\n  var owns = node && node.getAttribute && node.getAttribute('aria-owns');\n  if (owns) {\n    var ids = owns.split(' ');\n    return ids.map(function (id) {\n      return id && document.getElementById(id);\n    }).filter(Boolean).filter(function (n) {\n      return isContainerNode(n) || (0, _utils.matchSelector)(selector, n);\n    });\n  }\n  return [];\n};\n\n/**\n * Determines all spottable elements and containers that are directly contained by the container\n * identified by `containerId` and no other subcontainers.\n *\n * @param   {String}  containerId  ID of container\n *\n * @returns {Node[]}               Array of spottable elements and containers.\n * @memberof spotlight/container\n * @public\n */\nvar getSpottableDescendants = function getSpottableDescendants(containerId) {\n  var node = getContainerNode(containerId);\n\n  // if it's falsy or is a disabled container, return an empty set\n  if (!node || isContainerNode(node) && !isContainerEnabled(node)) {\n    return [];\n  }\n  var _ref2 = getContainerConfig(containerId) || {},\n    selector = _ref2.selector,\n    selectorDisabled = _ref2.selectorDisabled;\n  if (!selector || selectorDisabled) {\n    return [];\n  }\n  var spottableSelector = selector;\n  var subContainerSelector = getSubContainerSelector(node);\n  var candidates = querySelector(node, \"\".concat(spottableSelector, \", \").concat(getContainerSelector(node), \" \").concat(containerSelector, \":not([data-spotlight-container-disabled=\\\"true\\\"])\"), \"\".concat(subContainerSelector, \" \").concat(spottableSelector, \", \").concat(subContainerSelector, \" \").concat(containerSelector));\n  candidates.push.apply(candidates, _toConsumableArray(getOwnedNodes(node, selector)));\n  return candidates.filter(function (n) {\n    return navigableFilter(n, containerId);\n  });\n};\n\n/**\n * Recursively get spottable descendants by including elements within sub-containers that do not\n * have `enterTo` configured\n *\n * @param   {String}    containerId          ID of container\n * @param   {String[]}  [excludedContainers] IDs of containers to exclude from result set\n *\n * @returns {Node[]}                         Array of spottable elements and containers\n * @memberof spotlight/container\n * @private\n */\nexports.getSpottableDescendants = getSpottableDescendants;\nvar getDeepSpottableDescendants = function getDeepSpottableDescendants(containerId, excludedContainers) {\n  return getSpottableDescendants(containerId).map(function (n) {\n    if (isContainer(n)) {\n      var id = getContainerId(n);\n      var config = getContainerConfig(id);\n      if (excludedContainers && excludedContainers.indexOf(id) >= 0) {\n        return [];\n      } else if (config && !config.enterTo) {\n        return getDeepSpottableDescendants(id, excludedContainers);\n      }\n    }\n    return [n];\n  }).reduce(_concat[\"default\"], []);\n};\n\n/**\n * Determines if a container allows 5-way key hold to be preserved or not.\n *\n * @param {String} containerId Container Id\n * @returns {Boolean} `true` if a container is 5 way holdable\n * @memberof spotlight/container\n * @private\n */\nexports.getDeepSpottableDescendants = getDeepSpottableDescendants;\nvar isContainer5WayHoldable = function isContainer5WayHoldable(containerId) {\n  var config = getContainerConfig(containerId);\n  return config && config.continue5WayHold || false;\n};\n\n/**\n * Returns an array of ids for containers that wrap the element, in order of outer-to-inner, with\n * the last array item being the immediate container id of the element.\n *\n * @param   {Node}      node  Node from which to start the search\n *\n * @returns {String[]}        Array on container IDs\n * @memberof spotlight/container\n * @private\n */\nexports.isContainer5WayHoldable = isContainer5WayHoldable;\nfunction getContainersForNode(node) {\n  var containers = mapContainers(node, getContainerId);\n  containers.unshift(rootContainerId);\n  return containers;\n}\n\n/**\n * Returns an array of ids for containers that wrap the element, in order of outer-to-inner, with\n * the last array item being the immediate container id of the element. The container ids are\n * limited to only those between `node` and the first restrict=\"self-only\" container.\n *\n * @param   {Node}      node  Node from which to start the search\n *\n * @returns {String[]}        Array on container IDs\n * @memberof spotlight/container\n * @private\n */\nfunction getNavigableContainersForNode(node) {\n  var containerIds = getContainersForNode(node);\n\n  // find first self-only container id\n  var selfOnlyIndex = containerIds.map(getContainerConfig).filter(function (config) {\n    return config != null;\n  }).reduceRight(function (index, config, i) {\n    if (index === -1 && config.restrict === 'self-only') {\n      return i;\n    }\n    return index;\n  }, -1);\n\n  // if we found one (and it's not the root), slice those off and return\n  if (selfOnlyIndex > 0) {\n    return containerIds.slice(selfOnlyIndex);\n  }\n  return containerIds;\n}\n\n/**\n * Generates a new unique identifier for a container\n *\n * @returns {String} Container ID\n * @memberof spotlight/container\n * @private\n */\nfunction generateId() {\n  var id;\n  /* eslint no-constant-condition: [\"error\", { \"checkLoops\": false }] */\n  while (true) {\n    id = containerPrefix + String(++_ids);\n    if (!isContainer(id)) {\n      break;\n    }\n  }\n  return id;\n}\n\n/**\n * Merges two container configurations while only allowing keys from `updated` which are defined in\n * `GlobalConfig`\n *\n * @param   {Object}  current  Current container configuration\n * @param   {Object}  updated  Updated configuration which may only be a partial configuration\n *\n * @returns {Object}           Merged configuration\n * @memberof spotlight/container\n * @private\n */\nvar mergeConfig = function mergeConfig(current, updated) {\n  if (!updated) return current;\n  var cfg = null;\n  Object.keys(updated).forEach(function (key) {\n    if (key in GlobalConfig && current[key] !== updated[key]) {\n      if (cfg == null) {\n        cfg = Object.assign({}, current);\n      }\n      cfg[key] = updated[key];\n    }\n  });\n  return cfg || current;\n};\n\n/**\n * Adds or updates a container. When a container id is not specified, it will be generated.\n *\n * @param   {String|Object}  containerIdOrConfig  Either a string container id or a configuration\n *                                                object.\n * @param   {Object}         [config]             Container configuration when `containerIdOrConfig`\n *                                                is a string. When omitted, the container will have\n *                                                the default `GlobalConfig`.\n *\n * @returns {String}                              The container id\n * @memberof spotlight/container\n * @public\n */\nvar configureContainer = function configureContainer() {\n  var containerId, config;\n  if (typeof (arguments.length <= 0 ? undefined : arguments[0]) === 'object') {\n    config = arguments.length <= 0 ? undefined : arguments[0];\n    containerId = config.id;\n  } else if (typeof (arguments.length <= 0 ? undefined : arguments[0]) === 'string') {\n    containerId = arguments.length <= 0 ? undefined : arguments[0];\n    if (typeof (arguments.length <= 1 ? undefined : arguments[1]) === 'object') {\n      config = arguments.length <= 1 ? undefined : arguments[1];\n    }\n  }\n  if (!containerId) {\n    containerId = generateId();\n  }\n  config = mergeConfig(containerConfigs.get(containerId) || _objectSpread({}, GlobalConfig), config);\n  containerConfigs.set(containerId, config);\n  return containerId;\n};\n\n/**\n * Adds a container and marks it active. When a container id is not specified, it will be generated.\n *\n * @param   {String|Object}  containerIdOrConfig  Either a string container id or a configuration\n *                                                object.\n * @param   {Object}         [config]             Container configuration when `containerIdOrConfig`\n *                                                is a string. When omitted, the container will have\n *                                                the default `GlobalConfig`.\n *\n * @returns {String}                              The container id\n * @memberof spotlight/container\n * @public\n */\nexports.configureContainer = configureContainer;\nvar addContainer = function addContainer() {\n  var containerId = configureContainer.apply(void 0, arguments);\n  var config = getContainerConfig(containerId);\n  config.active = true;\n  return containerId;\n};\n\n/**\n * Removes a container\n *\n * @param   {String}     containerId  ID of the container to remove\n *\n * @returns {undefined}\n * @memberof spotlight/container\n * @public\n */\nexports.addContainer = addContainer;\nvar removeContainer = function removeContainer(containerId) {\n  containerConfigs[\"delete\"](containerId);\n};\n\n/**\n * Removes all containers\n *\n * @returns {undefined}\n * @memberof spotlight/container\n * @public\n */\nexports.removeContainer = removeContainer;\nvar removeAllContainers = function removeAllContainers() {\n  containerConfigs.clear();\n};\n\n/**\n * Configures the `GlobalConfig` for containers\n *\n * @param   {Object}  config  New global configuration. Cannot introduce new keys\n *\n * @returns {undefined}\n * @memberof spotlight/container\n * @public\n */\nexports.removeAllContainers = removeAllContainers;\nvar configureDefaults = function configureDefaults(config) {\n  GlobalConfig = mergeConfig(GlobalConfig, config);\n};\n\n/**\n * Determines if `node` is a navigable element within the container identified by `containerId`.\n *\n * @param   {Node}     node         DOM node to check if it is navigable\n * @param   {String}   containerId  ID of the container containing `node`\n * @param   {Boolean}  verify       `true` to verify the node matches the container's `selector`\n *\n * @returns {Boolean}               `true` if `node` is navigable\n * @memberof spotlight/container\n * @public\n */\nexports.configureDefaults = configureDefaults;\nvar isNavigable = function isNavigable(node, containerId, verify) {\n  if (!node ||\n  // jsdom reports all nodes as having no size so we must skip this condition in our tests\n  process.env.NODE_ENV !== 'test' && node.offsetWidth <= 0 && node.offsetHeight <= 0) {\n    return false;\n  }\n  var containerNode = getContainerNode(containerId);\n  if (containerNode !== document && containerNode.dataset[disabledKey] === 'true') {\n    return false;\n  }\n  var config = getContainerConfig(containerId);\n  if (verify && config && config.selector && !isContainer(node) && !(0, _utils.matchSelector)(config.selector, node) && !(GlobalConfig.isStandardFocusableMode && (0, _utils.isStandardFocusable)(node))) {\n    return false;\n  }\n  return navigableFilter(node, containerId);\n};\n\n/**\n * Returns the IDs of all containers\n *\n * @returns {String[]}  Array of container IDs\n * @memberof spotlight/container\n * @private\n */\nexports.isNavigable = isNavigable;\nvar getAllContainerIds = function getAllContainerIds() {\n  var ids = [];\n  var keys = containerConfigs.keys();\n\n  // PhantomJS-friendly iterator->array conversion\n  var id;\n  while ((id = keys.next()) && !id.done) {\n    if (isActiveContainer(id.value)) {\n      ids.push(id.value);\n    }\n  }\n  return ids;\n};\n\n/**\n * Returns the default focus element for a container\n *\n * @param   {String}                                       containerId        Container ID\n * @param   {('last-focused'|'default-element'|'topmost')} [preferredEnterTo] Prefer the given enterTo configuration\n *\n * @returns {Node|null}                 Default focus element\n * @memberof spotlight/container\n * @public\n */\nexports.getAllContainerIds = getAllContainerIds;\nfunction getContainerDefaultElement(containerId, preferredEnterTo) {\n  var config = getContainerConfig(containerId);\n  var defaultElementSelector = config && config.defaultElement;\n  if (!defaultElementSelector) {\n    return null;\n  }\n  defaultElementSelector = (0, _util.coerceArray)(defaultElementSelector);\n\n  // If a preferred enterTo has been provided, we will favor it by making it first in search array\n  if (preferredEnterTo && typeof preferredEnterTo === 'string' && preferredEnterTo !== 'default-element') {\n    defaultElementSelector.unshift(preferredEnterTo);\n  }\n  var spottables = getDeepSpottableDescendants(containerId);\n  return defaultElementSelector.reduce(function (result, selector) {\n    if (result) {\n      return result;\n    }\n    if (typeof selector === 'string') {\n      return spottables.filter(function (elem) {\n        return (0, _utils.matchSelector)(selector, elem) && isNavigable(elem, containerId, true);\n      })[0];\n    }\n\n    // FIXME: There is some prior implicit support for `defaultElement` to be an element rather\n    // than a selector. This continues that support but should eventually be removed.\n    return selector;\n  }, null);\n}\n\n/**\n * Gets the element last focused within the container.\n *\n * @param   {String}       containerId  ID of container\n *\n * @returns {Node|String|null}               DOM Node last focused\n * @memberof spotlight/container\n * @public\n */\nfunction getContainerLastFocusedElement(containerId) {\n  var config = getContainerConfig(containerId);\n  if (!config || !config.lastFocusedElement) {\n    return null;\n  }\n\n  // lastFocusedElement may be a container ID so try to convert it to a node to test navigability\n  var lastFocusedElement = config.lastFocusedElement;\n  var node = lastFocusedElement;\n  if (typeof node === 'string') {\n    node = getContainerNode(lastFocusedElement);\n  }\n  return isNavigable(node, containerId, true) ? lastFocusedElement : null;\n}\n\n/**\n * Sets the element last focused within the container\n *\n * @param   {Node}      node         DOM node last focused\n * @param   {String[]}  containerId  ID of container\n *\n * @returns {undefined}\n * @memberof spotlight/container\n * @public\n */\nfunction setContainerLastFocusedElement(node, containerIds) {\n  var lastFocusedElement = node;\n  for (var i = containerIds.length - 1; i > -1; i--) {\n    var id = containerIds[i];\n    configureContainer(id, {\n      lastFocusedElement: lastFocusedElement\n    });\n\n    // If any container in the stack is controlling entering focus, use its container id as the\n    // lastFocusedElement instead of the node\n    var config = getContainerConfig(id);\n    if (config.enterTo) {\n      lastFocusedElement = id;\n    }\n  }\n}\n\n/**\n * Returns all navigable nodes (spottable nodes or containers) visible from outside the container.\n * If the container is restricting navigation into itself via `enterTo`, this method will attempt to\n * return that element as the only element in an array. If that fails or if navigation is not\n * restricted, it will return an array of all possible navigable nodes.\n *\n * @param   {String}                                       containerId        Container ID\n * @param   {('last-focused'|'default-element'|'topmost')} [preferredEnterTo] Prefer the given enterTo configuration\n *\n * @returns {Node[]}             Navigable elements within container\n * @memberof spotlight/container\n * @public\n */\nfunction getContainerNavigableElements(containerId, preferredEnterTo) {\n  if (!isContainer(containerId)) {\n    return [];\n  }\n  var config = getContainerConfig(containerId);\n  var enterTo = config.enterTo,\n    overflow = config.overflow;\n  var enterLast = preferredEnterTo === 'last-focused' || enterTo === 'last-focused' && !preferredEnterTo;\n  var next;\n\n  // if the container has a preferred entry point, try to find it first\n  if (enterLast) {\n    next = getContainerLastFocusedElement(containerId);\n  }\n\n  // try default element if last focused can't be focused\n  if (!next) {\n    next = getContainerDefaultElement(containerId, preferredEnterTo);\n  }\n  if (!next) {\n    var spottables = overflow ?\n    // overflow requires deep recursion to handle selecting the children of unrestricted\n    // containers or restricted containers larger than the container\n    getDeepSpottableDescendants(containerId) : getSpottableDescendants(containerId);\n\n    // if there isn't a preferred entry on an overflow container, filter the visible elements\n    if (overflow) {\n      var containerRect = (0, _utils.getContainerRect)(containerId);\n      next = containerRect && spottables.filter(function (element) {\n        var elementRect = (0, _utils.getRect)(element);\n        if (isContainer(element)) {\n          return (0, _utils.intersects)(containerRect, elementRect);\n        }\n        return (0, _utils.contains)(containerRect, (0, _utils.getRect)(element));\n      });\n      if (next && preferredEnterTo === 'topmost') {\n        next.sort(function (a, b) {\n          return (0, _utils.getRect)(a).top - (0, _utils.getRect)(b).top;\n        });\n      }\n    }\n\n    // otherwise, return all spottables within the container\n    if (!next) {\n      next = spottables;\n    }\n  }\n  return next ? (0, _util.coerceArray)(next) : [];\n}\n\n/**\n * Determines the preferred focus target, traversing any sub-containers as necessary, for the given\n * container.\n *\n * @param   {String}                                       containerId        Container ID\n * @param   {('last-focused'|'default-element'|'topmost')} [preferredEnterTo] Prefer the given enterTo configuration\n *\n * @returns {Node}                 Preferred target as either a DOM node or container-id\n * @memberof spotlight/container\n * @public\n */\nfunction getContainerFocusTarget(containerId, preferredEnterTo) {\n  // deferring restoration until it's requested to allow containers to prepare first\n  restoreLastFocusedElement(containerId);\n  var next = getContainerNavigableElements(containerId, preferredEnterTo);\n  // If multiple candidates returned, we need to find the first viable target since some may\n  // be empty containers which should be skipped.\n  return next.reduce(function (result, element) {\n    if (result) {\n      return result;\n    } else if (isContainer(element)) {\n      var nextId = isContainerNode(element) ? getContainerId(element) : element;\n      return getContainerFocusTarget(nextId);\n    }\n    return element;\n  }, null) || null;\n}\nfunction getContainerPreviousTarget(containerId, direction, destination) {\n  var config = getContainerConfig(containerId);\n  if (config && config.rememberSource && config.previous && config.previous.reverse === direction && config.previous.destination === destination) {\n    return config.previous.target;\n  }\n}\nfunction setContainerPreviousTarget(containerId, direction, destination, target) {\n  var config = getContainerConfig(containerId);\n  if (config && config.rememberSource) {\n    configureContainer(containerId, {\n      previous: {\n        target: target,\n        destination: destination,\n        reverse: reverseDirections[direction]\n      }\n    });\n  }\n}\n\n/**\n * Saves the last focused element into `lastFocusedKey` using a container-defined serialization\n * method configured in `lastFocusedPersist`.\n *\n * @param   {String}     containerId  ID of container\n *\n * @returns {undefined}\n * @memberof spotlight/container\n * @public\n */\nfunction persistLastFocusedElement(containerId) {\n  var cfg = getContainerConfig(containerId);\n  if (cfg) {\n    var lastFocusedElement = cfg.lastFocusedElement;\n    if (lastFocusedElement) {\n      var all = getDeepSpottableDescendants(containerId);\n      var lastFocusedKey = cfg.lastFocusedPersist(lastFocusedElement, all);\n\n      // store lastFocusedKey and release node reference to lastFocusedElement\n      cfg.lastFocusedKey = lastFocusedKey;\n      cfg.lastFocusedElement = null;\n    }\n  }\n}\n\n/**\n * Restores the last focused element from `lastFocusedKey` using a container-defined deserialization\n * method configured in `lastFocusedRestore`.\n *\n * @param   {String}     containerId  ID of container\n *\n * @returns {undefined}\n * @memberof spotlight/container\n * @public\n */\nfunction restoreLastFocusedElement(containerId) {\n  var cfg = getContainerConfig(containerId);\n  if (cfg && cfg.lastFocusedKey) {\n    var all = getDeepSpottableDescendants(containerId);\n    var lastFocusedElement = cfg.lastFocusedRestore(cfg.lastFocusedKey, all);\n\n    // restore lastFocusedElement and release lastFocusedKey\n    cfg.lastFocusedKey = null;\n    cfg.lastFocusedElement = lastFocusedElement;\n  }\n}\nfunction unmountContainer(containerId) {\n  var config = getContainerConfig(containerId);\n  if (config) {\n    config.active = false;\n    persistLastFocusedElement(containerId);\n    if (typeof config.defaultElement !== 'string') {\n      config.defaultElement = null;\n    }\n  }\n}\nfunction isActiveContainer(containerId) {\n  var config = getContainerConfig(containerId);\n  return config && config.active;\n}\n\n/**\n * Determines if the provided container has a configured restriction.\n *\n * By default, returns `true` for `'self-only'` restrictions but the type of restriction can be\n * passed as well.\n *\n * @param {String} containerId The container id\n * @param {String} [restrict] The container restriction defaulted to `'self-only'`\n * @returns {Boolean} `true` if the container has the specified restriction\n * @private\n */\nfunction isRestrictedContainer(containerId) {\n  var restrict = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'self-only';\n  var config = getContainerConfig(containerId);\n  return Boolean(config && config.restrict === restrict);\n}\n\n/**\n * Determines if `innerContainerId` is inside `outerContainerId`.\n *\n * @param {String} outerContainerId The outer container id\n * @param {String} innerContainerId The inner container id\n * @returns {Boolean} `true` if both containers exist and `innerContainerId` is within\n *                    `outerContainerId`\n * @private\n */\nfunction containsContainer(outerContainerId, innerContainerId) {\n  var outer = getContainerNode(outerContainerId);\n  var inner = getContainerNode(innerContainerId);\n  return Boolean(outer && inner && outer.contains(inner));\n}\n\n/**\n * Determines if `containerId` may become the active container.\n *\n * @param {String} containerId Spotlight container to which focus is leaving\n * @returns\t{Boolean} `true` if the active container can change to `containerId`\n * @private\n */\nfunction mayActivateContainer(containerId) {\n  var currentContainerId = getLastContainer();\n\n  // If the current container or its outer containers are restricted to 'self-only' and\n  // if the next container to be activated is not inside the restrict container,\n  // the next container should not be activated.\n  var currentContainerNode = getContainerNode(currentContainerId);\n  var restrictContainer = getContainersForNode(currentContainerNode).reduceRight(function (result, outerContainerId) {\n    return result || (isRestrictedContainer(outerContainerId) ? outerContainerId : null);\n  }, null);\n  return !restrictContainer || containsContainer(restrictContainer, containerId);\n}\nfunction getDefaultContainer() {\n  return isActiveContainer(_defaultContainerId) ? _defaultContainerId : '';\n}\nfunction setDefaultContainer(containerId) {\n  if (!containerId) {\n    _defaultContainerId = '';\n  } else if (!getContainerConfig(containerId)) {\n    throw new Error('Container \"' + containerId + '\" doesn\\'t exist!');\n  } else {\n    _defaultContainerId = containerId;\n  }\n}\nfunction getLastContainer() {\n  return isActiveContainer(_lastContainerId) ? _lastContainerId : '';\n}\nfunction setLastContainer(containerId) {\n  _lastContainerId = containerId || '';\n}\n\n/**\n * Updates the last container based on the current focus and target focus.\n *\n * @param {Node} current Currently focused node\n * @param {Node} target  Target node. May or may not be focusable\n * @memberof spotlight/container\n * @public\n */\nfunction setLastContainerFromTarget(current, target) {\n  var currentContainers = getNavigableContainersForNode(current);\n  var currentOuterContainerId = currentContainers[0];\n  var currentContainerConfig = getContainerConfig(currentOuterContainerId);\n  var targetContainers = getContainersForNode(target);\n  var targetInnerContainer = (0, _last[\"default\"])(targetContainers);\n  var sharedContainer = (0, _last[\"default\"])((0, _intersection[\"default\"])(currentContainers, targetContainers));\n  if (sharedContainer || !currentContainerConfig || currentContainerConfig.restrict !== 'self-only') {\n    // If the target shares a container with the current container stack or the current\n    // element isn't within a self-only container, use the target's nearest container\n    setLastContainer(targetInnerContainer);\n  } else {\n    // Otherwise, the target is not within the current container stack and the current\n    // element was within a 'self-only' container, use the current's outer container\n    setLastContainer(currentOuterContainerId);\n  }\n}\nfunction isWithinOverflowContainer(target) {\n  var containerIds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getContainersForNode(target);\n  return containerIds\n  // ignore the root container id which is set to overflow by the root decorator\n  .filter(function (id) {\n    return id !== rootContainerId;\n  })\n  // get the config for each container\n  .map(getContainerConfig)\n  // and check if any are set to overflow\n  .some(function (config) {\n    return config && config.overflow;\n  });\n}\n\n/**\n * Notifies any affected containers that focus has left one of their children for another container\n *\n * @param {String} direction up/down/left/right\n * @param {Node} current currently focused element\n * @param {String[]} currentContainerIds Containers for current\n * @param {Node} next To be focused element\n * @param {String[]} nextContainerIds Containers for next\n * @private\n */\nfunction notifyLeaveContainer(direction, current, currentContainerIds, next, nextContainerIds) {\n  currentContainerIds.forEach(function (containerId) {\n    if (!nextContainerIds.includes(containerId)) {\n      var config = getContainerConfig(containerId);\n      if (config && config.onLeaveContainer) {\n        config.onLeaveContainer({\n          type: 'onLeaveContainer',\n          direction: direction,\n          target: current,\n          relatedTarget: next\n        });\n      }\n    }\n  });\n}\n\n/**\n * Notifies any containers that focus attempted to move but failed to find a target\n *\n * @param {String} direction up/down/left/right\n * @param {Node} current currently focused element\n * @param {String[]} currentContainerIds Containers for current\n * @private\n */\nfunction notifyLeaveContainerFail(direction, current, currentContainerIds) {\n  currentContainerIds.forEach(function (containerId) {\n    var config = getContainerConfig(containerId);\n    if (config && config.onLeaveContainerFail) {\n      config.onLeaveContainerFail({\n        type: 'onLeaveContainerFail',\n        direction: direction,\n        target: current\n      });\n    }\n  });\n}\n\n/**\n * Notifies any affected containers that one of their children has received focus.\n *\n * @param {String} direction up/down/left/right\n * @param {Node} previous Previously focused element\n * @param {String[]} previousContainerIds Containers for previous\n * @param {Node} current Currently focused element\n * @param {String[]} currentContainerIds Containers for current\n * @private\n */\nfunction notifyEnterContainer(direction, previous, previousContainerIds, current, currentContainerIds) {\n  currentContainerIds.forEach(function (containerId) {\n    if (!previousContainerIds.includes(containerId)) {\n      var config = getContainerConfig(containerId);\n      if (config && config.onEnterContainer) {\n        config.onEnterContainer({\n          type: 'onEnterContainer',\n          direction: direction,\n          target: current,\n          relatedTarget: previous\n        });\n      }\n    }\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}