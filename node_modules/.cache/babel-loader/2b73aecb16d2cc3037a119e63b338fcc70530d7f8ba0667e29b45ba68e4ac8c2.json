{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"Tooltip\", {\n  enumerable: true,\n  get: function get() {\n    return _Tooltip.Tooltip;\n  }\n});\nObject.defineProperty(exports, \"TooltipBase\", {\n  enumerable: true,\n  get: function get() {\n    return _Tooltip.TooltipBase;\n  }\n});\nexports[\"default\"] = exports.TooltipDecorator = void 0;\nObject.defineProperty(exports, \"useTooltip\", {\n  enumerable: true,\n  get: function get() {\n    return _useTooltip2.useTooltip;\n  }\n});\nvar _hoc = _interopRequireDefault(require(\"@enact/core/hoc\"));\nvar _I18nDecorator = require(\"@enact/i18n/I18nDecorator\");\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _Tooltip = require(\"./Tooltip\");\nvar _useTooltip2 = require(\"./useTooltip\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n} /**\n   * Sandstone styled tooltip components.\n   *\n   * @module sandstone/TooltipDecorator\n   * @exports Tooltip\n   * @exports TooltipBase\n   * @exports TooltipDecorator\n   */ /**\n       * Default config for {@link sandstone/TooltipDecorator.TooltipDecorator|TooltipDecorator}\n       *\n       * @memberof sandstone/TooltipDecorator.TooltipDecorator\n       * @hocconfig\n       */\nvar defaultConfig = {\n  /**\n   * The boundary around the screen which the tooltip should never cross, typically involving\n   * flipping to an alternate orientation or adjusting its offset to remain on screen.\n   * The default of 48 is derived from a standard 24px screen-keepout size plus the standard\n   * Spotlight-outset (24px) margin/padding value which keeps elements and text aligned inside a\n   * {@link sandstone/Panels.Panel|Panel}. Note: This value will be scaled according to the\n   * resolution.\n   *\n   * @type {Number}\n   * @default 48\n   * @memberof sandstone/TooltipDecorator.TooltipDecorator.defaultConfig\n   */\n  screenEdgeKeepout: _useTooltip2.defaultScreenEdgeKeepout,\n  /**\n   * The name of the property which will receive the tooltip node.\n   *\n   * By default, `TooltipDecorator` will add a new child to the wrapped component, following any\n   * other children passed in. If a component needs to, it can specify another property to receive\n   * the tooltip and the `children` property will not be modified.\n   *\n   * @type {String}\n   * @default 'children'\n   * @memberof sandstone/TooltipDecorator.TooltipDecorator.defaultConfig\n   */\n  tooltipDestinationProp: 'children'\n};\n\n/**\n * A higher-order component which positions {@link sandstone/TooltipDecorator.Tooltip|Tooltip} in\n * relation to the wrapped component.\n *\n * The tooltip is automatically displayed when the decorated component is focused after a set\n * period of time.\n *\n * The tooltip is positioned around the decorator where there is available window space.\n *\n * Note that the direction of tooltip will be flipped horizontally in RTL locales.\n *\n * @class TooltipDecorator\n * @memberof sandstone/TooltipDecorator\n * @hoc\n * @public\n */\nvar TooltipDecorator = (0, _hoc[\"default\"])(defaultConfig, function (config, Wrapped) {\n  var screenEdgeKeepout = config.screenEdgeKeepout,\n    tooltipDestinationProp = config.tooltipDestinationProp;\n  var Decorator = function Decorator(props) {\n    var _useTooltip = (0, _useTooltip2.useTooltip)(_objectSpread({\n        screenEdgeKeepout: screenEdgeKeepout\n      }, props)),\n      tooltip = _useTooltip.tooltip,\n      handlers = _useTooltip.handlers,\n      restProps = _useTooltip.restProps;\n    if (tooltip) {\n      if (tooltipDestinationProp === 'children') {\n        restProps.children = [props.children, tooltip];\n      } else {\n        restProps[tooltipDestinationProp] = tooltip;\n      }\n    }\n    return /*#__PURE__*/(0, _jsxRuntime.jsx)(Wrapped, _objectSpread(_objectSpread({}, restProps), handlers));\n  };\n  Decorator.displayName = 'TooltipDecorator';\n  Decorator.propTypes = /** @lends sandstone/TooltipDecorator.TooltipDecorator.prototype */{\n    /**\n     * Disables the component but does not affect tooltip operation.\n     *\n     * @type {Boolean}\n     * @default false\n     * @public\n     */\n    disabled: _propTypes[\"default\"].bool,\n    /**\n     * Indicates the tooltip text direction is right-to-left.\n     *\n     * @type {Boolean}\n     * @private\n     */\n    rtl: _propTypes[\"default\"].bool,\n    /**\n     * Time to wait (in milliseconds) before showing tooltip on hover.\n     *\n     * @type {Number}\n     * @default 500\n     * @public\n     */\n    tooltipDelay: _propTypes[\"default\"].number,\n    /**\n     * Allows the tooltip to marquee.\n     *\n     * Specifying a {@link sandstone/TooltipDecorator.TooltipDecorator.tooltipWidth|tooltipWidth}\n     * restrects the marquee to that size.\n     *\n     * @type {Boolean}\n     * @public\n     */\n    tooltipMarquee: _propTypes[\"default\"].bool,\n    /**\n     * Position of the tooltip with respect to the wrapped component.\n     *\n     * | *Value* | *Tooltip Direction* |\n     * |---|---|\n     * | `'above'` | Above component, flowing to the right |\n     * | `'above center'` | Above component, centered |\n     * | `'above left'` | Above component, flowing to the left |\n     * | `'above right'` | Above component, flowing to the right |\n     * | `'below'` | Below component, flowing to the right |\n     * | `'below center'` | Below component, centered |\n     * | `'below left'` | Below component, flowing to the left |\n     * | `'below right'` | Below component, flowing to the right |\n     * | `'left bottom'` | Left of the component, contents at the bottom |\n     * | `'left middle'` | Left of the component, contents middle aligned |\n     * | `'left top'` | Left of the component, contents at the top |\n     * | `'right bottom'` | Right of the component, contents at the bottom |\n     * | `'right middle'` | Right of the component, contents middle aligned |\n     * | `'right top'` | Right of the component, contents at the top |\n     *\n     * `TooltipDecorator` attempts to choose the best direction to meet layout and language\n     * requirements. Left and right directions will reverse for RTL languages. Additionally,\n     * the tooltip will reverse direction if it will prevent overflowing off the viewport\n     *\n     * For `type=\"balloon\"`, the default is `\"top right\"`\n     * For `type=\"transparent\"`, the default is `\"bottom center\"`\n     *\n     * @type {('above'|'above center'|'above left'|'above right'|'below'|\n     *  'below center'|'below left'|'below right'|'left bottom'|'left middle'|'left top'|\n     * \t'right bottom'|'right middle'|'right top')}\n     * @public\n     */\n    tooltipPosition: _propTypes[\"default\"].oneOf(['above', 'above center', 'above left', 'above right', 'below', 'below center', 'below left', 'below right', 'left bottom', 'left middle', 'left top', 'right bottom', 'right middle', 'right top']),\n    /**\n     * Properties to be passed to tooltip component.\n     *\n     * @type {Object}\n     * @public\n     */\n    tooltipProps: _propTypes[\"default\"].object,\n    /**\n     * Positions the tooltip relative to its container.\n     *\n     * Determines whether your tooltip should position itself relative to its container or\n     * relative to the screen (absolute positioning on the floating layer). When setting to\n     * `true`, to enable relative positioning, it may be important to specify the\n     * `tooltipDestinationProp` key in this HoC's config object. A relatively positioned\n     * Tooltip for a `Button`, for example, must be placed in the `decoration` prop.\n     *\n     * It may be necessary to assign the CSS rule `position` to the containing element so\n     * relatively positioned Tooltip has a frame to \"stick to\" the edge of.\n     *\n     * Anchoring points can be visualized as follows:\n     * ```\n     * ┌───◎───┐\n     * ◎       ◎\n     * └───◎───┘\n     * ```\n     *\n     * @type {Boolean}\n     * @public\n     */\n    tooltipRelative: _propTypes[\"default\"].bool,\n    /**\n     * Tooltip content.\n     *\n     * @type {String|Node}\n     * @public\n     */\n    tooltipText: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].node]),\n    /**\n     * Type of tooltip.\n     *\n     * | *Value* | *Tooltip Appearance* |\n     * |---|---|\n     * | `'balloon'` | Tooltip with a border, background and arrow to the activator |\n     * | `'transparent'` | Text only without any of the decorations above |\n     *\n     * @type {('balloon'|'transparent')}\n     * @default 'balloon'\n     * @public\n     */\n    tooltipType: _propTypes[\"default\"].oneOf(['balloon', 'transparent']),\n    /**\n     * The interval (in milliseconds) to recheck the math for a currently showing tooltip's\n     * positioning and orientation. Useful if your anchor element moves.\n     *\n     * @type {Number}\n     * @default 400\n     * @public\n     */\n    tooltipUpdateDelay: _propTypes[\"default\"].number,\n    /**\n     * The width of tooltip content.\n     *\n     * Value expects a number of pixels, which will be automatically scaled to the\n     * appropriate size given the current screen resolution, or a string value containing a\n     * measurement and a valid CSS unit included. If the content goes over the given width,\n     * it will automatically wrap, or marquee if `marquee` is enabled.\n     *\n     * When `null`, content will auto-size and not wrap. If `tooltipMarquee` is also\n     * enabled, marqueeing will begin when the width is greater than the default (theme\n     * specified) width.\n     *\n     * @type {Number|String}\n     * @public\n     */\n    tooltipWidth: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].number, _propTypes[\"default\"].string])\n  };\n  return (0, _I18nDecorator.I18nContextDecorator)({\n    rtlProp: 'rtl'\n  }, Decorator);\n});\nexports.TooltipDecorator = TooltipDecorator;\nvar _default = TooltipDecorator;\nexports[\"default\"] = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","enumerable","get","_Tooltip","Tooltip","TooltipBase","TooltipDecorator","_useTooltip2","useTooltip","_hoc","_interopRequireDefault","require","_I18nDecorator","_propTypes","_jsxRuntime","obj","__esModule","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","defaultConfig","screenEdgeKeepout","defaultScreenEdgeKeepout","tooltipDestinationProp","config","Wrapped","Decorator","props","_useTooltip","tooltip","handlers","restProps","children","jsx","displayName","propTypes","disabled","bool","rtl","tooltipDelay","number","tooltipMarquee","tooltipPosition","oneOf","tooltipProps","tooltipRelative","tooltipText","oneOfType","string","node","tooltipType","tooltipUpdateDelay","tooltipWidth","I18nContextDecorator","rtlProp","_default"],"sources":["/Users/gitchan/Projects/gitchan-yonsei/2024-enact-template/node_modules/@enact/sandstone/TooltipDecorator/TooltipDecorator.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"Tooltip\", {\n  enumerable: true,\n  get: function get() {\n    return _Tooltip.Tooltip;\n  }\n});\nObject.defineProperty(exports, \"TooltipBase\", {\n  enumerable: true,\n  get: function get() {\n    return _Tooltip.TooltipBase;\n  }\n});\nexports[\"default\"] = exports.TooltipDecorator = void 0;\nObject.defineProperty(exports, \"useTooltip\", {\n  enumerable: true,\n  get: function get() {\n    return _useTooltip2.useTooltip;\n  }\n});\nvar _hoc = _interopRequireDefault(require(\"@enact/core/hoc\"));\nvar _I18nDecorator = require(\"@enact/i18n/I18nDecorator\");\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _Tooltip = require(\"./Tooltip\");\nvar _useTooltip2 = require(\"./useTooltip\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); } /**\n                                                                                                                                                                                                                                                                                                                                                                                           * Sandstone styled tooltip components.\n                                                                                                                                                                                                                                                                                                                                                                                           *\n                                                                                                                                                                                                                                                                                                                                                                                           * @module sandstone/TooltipDecorator\n                                                                                                                                                                                                                                                                                                                                                                                           * @exports Tooltip\n                                                                                                                                                                                                                                                                                                                                                                                           * @exports TooltipBase\n                                                                                                                                                                                                                                                                                                                                                                                           * @exports TooltipDecorator\n                                                                                                                                                                                                                                                                                                                                                                                           */ /**\n                                                                                                                                                                                                                                                                                                                                                                                               * Default config for {@link sandstone/TooltipDecorator.TooltipDecorator|TooltipDecorator}\n                                                                                                                                                                                                                                                                                                                                                                                               *\n                                                                                                                                                                                                                                                                                                                                                                                               * @memberof sandstone/TooltipDecorator.TooltipDecorator\n                                                                                                                                                                                                                                                                                                                                                                                               * @hocconfig\n                                                                                                                                                                                                                                                                                                                                                                                               */\nvar defaultConfig = {\n  /**\n   * The boundary around the screen which the tooltip should never cross, typically involving\n   * flipping to an alternate orientation or adjusting its offset to remain on screen.\n   * The default of 48 is derived from a standard 24px screen-keepout size plus the standard\n   * Spotlight-outset (24px) margin/padding value which keeps elements and text aligned inside a\n   * {@link sandstone/Panels.Panel|Panel}. Note: This value will be scaled according to the\n   * resolution.\n   *\n   * @type {Number}\n   * @default 48\n   * @memberof sandstone/TooltipDecorator.TooltipDecorator.defaultConfig\n   */\n  screenEdgeKeepout: _useTooltip2.defaultScreenEdgeKeepout,\n  /**\n   * The name of the property which will receive the tooltip node.\n   *\n   * By default, `TooltipDecorator` will add a new child to the wrapped component, following any\n   * other children passed in. If a component needs to, it can specify another property to receive\n   * the tooltip and the `children` property will not be modified.\n   *\n   * @type {String}\n   * @default 'children'\n   * @memberof sandstone/TooltipDecorator.TooltipDecorator.defaultConfig\n   */\n  tooltipDestinationProp: 'children'\n};\n\n/**\n * A higher-order component which positions {@link sandstone/TooltipDecorator.Tooltip|Tooltip} in\n * relation to the wrapped component.\n *\n * The tooltip is automatically displayed when the decorated component is focused after a set\n * period of time.\n *\n * The tooltip is positioned around the decorator where there is available window space.\n *\n * Note that the direction of tooltip will be flipped horizontally in RTL locales.\n *\n * @class TooltipDecorator\n * @memberof sandstone/TooltipDecorator\n * @hoc\n * @public\n */\nvar TooltipDecorator = (0, _hoc[\"default\"])(defaultConfig, function (config, Wrapped) {\n  var screenEdgeKeepout = config.screenEdgeKeepout,\n    tooltipDestinationProp = config.tooltipDestinationProp;\n  var Decorator = function Decorator(props) {\n    var _useTooltip = (0, _useTooltip2.useTooltip)(_objectSpread({\n        screenEdgeKeepout: screenEdgeKeepout\n      }, props)),\n      tooltip = _useTooltip.tooltip,\n      handlers = _useTooltip.handlers,\n      restProps = _useTooltip.restProps;\n    if (tooltip) {\n      if (tooltipDestinationProp === 'children') {\n        restProps.children = [props.children, tooltip];\n      } else {\n        restProps[tooltipDestinationProp] = tooltip;\n      }\n    }\n    return /*#__PURE__*/(0, _jsxRuntime.jsx)(Wrapped, _objectSpread(_objectSpread({}, restProps), handlers));\n  };\n  Decorator.displayName = 'TooltipDecorator';\n  Decorator.propTypes = /** @lends sandstone/TooltipDecorator.TooltipDecorator.prototype */{\n    /**\n     * Disables the component but does not affect tooltip operation.\n     *\n     * @type {Boolean}\n     * @default false\n     * @public\n     */\n    disabled: _propTypes[\"default\"].bool,\n    /**\n     * Indicates the tooltip text direction is right-to-left.\n     *\n     * @type {Boolean}\n     * @private\n     */\n    rtl: _propTypes[\"default\"].bool,\n    /**\n     * Time to wait (in milliseconds) before showing tooltip on hover.\n     *\n     * @type {Number}\n     * @default 500\n     * @public\n     */\n    tooltipDelay: _propTypes[\"default\"].number,\n    /**\n     * Allows the tooltip to marquee.\n     *\n     * Specifying a {@link sandstone/TooltipDecorator.TooltipDecorator.tooltipWidth|tooltipWidth}\n     * restrects the marquee to that size.\n     *\n     * @type {Boolean}\n     * @public\n     */\n    tooltipMarquee: _propTypes[\"default\"].bool,\n    /**\n     * Position of the tooltip with respect to the wrapped component.\n     *\n     * | *Value* | *Tooltip Direction* |\n     * |---|---|\n     * | `'above'` | Above component, flowing to the right |\n     * | `'above center'` | Above component, centered |\n     * | `'above left'` | Above component, flowing to the left |\n     * | `'above right'` | Above component, flowing to the right |\n     * | `'below'` | Below component, flowing to the right |\n     * | `'below center'` | Below component, centered |\n     * | `'below left'` | Below component, flowing to the left |\n     * | `'below right'` | Below component, flowing to the right |\n     * | `'left bottom'` | Left of the component, contents at the bottom |\n     * | `'left middle'` | Left of the component, contents middle aligned |\n     * | `'left top'` | Left of the component, contents at the top |\n     * | `'right bottom'` | Right of the component, contents at the bottom |\n     * | `'right middle'` | Right of the component, contents middle aligned |\n     * | `'right top'` | Right of the component, contents at the top |\n     *\n     * `TooltipDecorator` attempts to choose the best direction to meet layout and language\n     * requirements. Left and right directions will reverse for RTL languages. Additionally,\n     * the tooltip will reverse direction if it will prevent overflowing off the viewport\n     *\n     * For `type=\"balloon\"`, the default is `\"top right\"`\n     * For `type=\"transparent\"`, the default is `\"bottom center\"`\n     *\n     * @type {('above'|'above center'|'above left'|'above right'|'below'|\n     *  'below center'|'below left'|'below right'|'left bottom'|'left middle'|'left top'|\n     * \t'right bottom'|'right middle'|'right top')}\n     * @public\n     */\n    tooltipPosition: _propTypes[\"default\"].oneOf(['above', 'above center', 'above left', 'above right', 'below', 'below center', 'below left', 'below right', 'left bottom', 'left middle', 'left top', 'right bottom', 'right middle', 'right top']),\n    /**\n     * Properties to be passed to tooltip component.\n     *\n     * @type {Object}\n     * @public\n     */\n    tooltipProps: _propTypes[\"default\"].object,\n    /**\n     * Positions the tooltip relative to its container.\n     *\n     * Determines whether your tooltip should position itself relative to its container or\n     * relative to the screen (absolute positioning on the floating layer). When setting to\n     * `true`, to enable relative positioning, it may be important to specify the\n     * `tooltipDestinationProp` key in this HoC's config object. A relatively positioned\n     * Tooltip for a `Button`, for example, must be placed in the `decoration` prop.\n     *\n     * It may be necessary to assign the CSS rule `position` to the containing element so\n     * relatively positioned Tooltip has a frame to \"stick to\" the edge of.\n     *\n     * Anchoring points can be visualized as follows:\n     * ```\n     * ┌───◎───┐\n     * ◎       ◎\n     * └───◎───┘\n     * ```\n     *\n     * @type {Boolean}\n     * @public\n     */\n    tooltipRelative: _propTypes[\"default\"].bool,\n    /**\n     * Tooltip content.\n     *\n     * @type {String|Node}\n     * @public\n     */\n    tooltipText: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].node]),\n    /**\n     * Type of tooltip.\n     *\n     * | *Value* | *Tooltip Appearance* |\n     * |---|---|\n     * | `'balloon'` | Tooltip with a border, background and arrow to the activator |\n     * | `'transparent'` | Text only without any of the decorations above |\n     *\n     * @type {('balloon'|'transparent')}\n     * @default 'balloon'\n     * @public\n     */\n    tooltipType: _propTypes[\"default\"].oneOf(['balloon', 'transparent']),\n    /**\n     * The interval (in milliseconds) to recheck the math for a currently showing tooltip's\n     * positioning and orientation. Useful if your anchor element moves.\n     *\n     * @type {Number}\n     * @default 400\n     * @public\n     */\n    tooltipUpdateDelay: _propTypes[\"default\"].number,\n    /**\n     * The width of tooltip content.\n     *\n     * Value expects a number of pixels, which will be automatically scaled to the\n     * appropriate size given the current screen resolution, or a string value containing a\n     * measurement and a valid CSS unit included. If the content goes over the given width,\n     * it will automatically wrap, or marquee if `marquee` is enabled.\n     *\n     * When `null`, content will auto-size and not wrap. If `tooltipMarquee` is also\n     * enabled, marqueeing will begin when the width is greater than the default (theme\n     * specified) width.\n     *\n     * @type {Number|String}\n     * @public\n     */\n    tooltipWidth: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].number, _propTypes[\"default\"].string])\n  };\n  return (0, _I18nDecorator.I18nContextDecorator)({\n    rtlProp: 'rtl'\n  }, Decorator);\n});\nexports.TooltipDecorator = TooltipDecorator;\nvar _default = TooltipDecorator;\nexports[\"default\"] = _default;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}