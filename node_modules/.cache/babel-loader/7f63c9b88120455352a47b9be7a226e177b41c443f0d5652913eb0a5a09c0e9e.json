{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"Job\", {\n  enumerable: true,\n  get: function get() {\n    return _Job[\"default\"];\n  }\n});\nexports.shallowEqual = exports.perfNow = exports.mergeClassNameMaps = exports.memoize = exports.mapAndFilterChildren = exports.isRenderable = exports.extractAriaProps = exports.coerceFunction = exports.coerceArray = exports.clamp = exports.cap = void 0;\nvar _always = _interopRequireDefault(require(\"ramda/src/always\"));\nvar _is = _interopRequireDefault(require(\"ramda/src/is\"));\nvar _unless = _interopRequireDefault(require(\"ramda/src/unless\"));\nvar _react = require(\"react\");\nvar ReactIs = _interopRequireWildcard(require(\"react-is\"));\nvar _Job = _interopRequireDefault(require(\"./Job\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj[\"default\"] = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n/**\n * A collection of utility methods.\n *\n * @module core/util\n * @exports cap\n * @exports clamp\n * @exports coerceArray\n * @exports coerceFunction\n * @exports extractAriaProps\n * @exports isRenderable\n * @exports Job\n * @exports memoize\n * @exports mergeClassNameMaps\n * @exports perfNow\n * @exports mapAndFilterChildren\n * @exports shallowEqual\n */\n\n/**\n * Capitalizes a given string (not locale-aware).\n *\n * @function\n * @param   {String}    str   The string to capitalize.\n *\n * @returns {String}          The capitalized string.\n * @memberof core/util\n * @public\n */\nvar cap = function cap(str) {\n  return str.slice(0, 1).toUpperCase() + str.slice(1);\n};\n\n/**\n * Limits `value` to be between `min` and `max`.\n *\n * If `min` is greater than `max`, `min` is returned.\n *\n * @function\n * @param   {Number}    min   The minimum value of the range\n * @param   {Number}    max   The maximum value of the range\n * @param   {Number}    value The value that must be within the range\n *\n * @returns {Number}          The clamped value\n * @memberof core/util\n * @public\n */\nexports.cap = cap;\nvar clamp = function clamp(min, max, value) {\n  if (min > max || value < min) return min;\n  if (value > max) return max;\n  return value;\n};\n\n/**\n * If `arg` is a function, return it. Otherwise returns a function that returns `arg`.\n *\n * Example:\n * ```\n *\tconst returnsZero = coerceFunction(0);\n *\tconst returnsArg = coerceFunction(() => 0);\n * ```\n * @function\n * @param {*}    arg    Function or value\n *\n * @returns {Function}  Either `arg` if `arg` is a function, or a function that returns `arg`\n * @memberof core/util\n * @public\n */\nexports.clamp = clamp;\nvar coerceFunction = (0, _unless[\"default\"])((0, _is[\"default\"])(Function), _always[\"default\"]);\n\n/**\n * If `arg` is array-like, return it. Otherwise returns a single element array containing `arg`.\n *\n * Example:\n * ```\n *\tconst returnsArray = coerceArray(0); // [0]\n *\tconst returnsArg = coerceArray([0]); // [0]\n *\tconst returnsObjArg = coerceArray({0: 'zeroth', length: 1});\n * ```\n * @see http://ramdajs.com/docs/#isArrayLike\n * @function\n * @param {*}    array    Array or value\n *\n * @returns {Array}       Either `array` or `[array]`\n * @memberof core/util\n * @public\n */\nexports.coerceFunction = coerceFunction;\nvar coerceArray = function coerceArray(array) {\n  return Array.isArray(array) ? array : [array];\n};\n\n/**\n * Loosely determines if `tag` is a renderable component (either a string or a function).\n *\n * @function\n * @param {*}    tag    Component to test\n *\n * @returns {Boolean}   `true` if `tag` is either a string or a function\n * @memberof core/util\n * @public\n */\nexports.coerceArray = coerceArray;\nvar isRenderable = function isRenderable(tag) {\n  return ReactIs.isValidElementType(tag);\n};\n\n/**\n * Removes ARIA-related props from `props` and returns them in a new object.\n *\n * Specifically, it removes the `role` prop and any prop prefixed with `aria-`. This is useful when\n * redirecting ARIA-related props from a non-focusable root element to a focusable child element.\n *\n * @function\n * @param   {Object}    props    Props object\n *\n * @returns {Object}             ARIA-related props\n * @memberof core/util\n * @public\n */\nexports.isRenderable = isRenderable;\nvar extractAriaProps = function extractAriaProps(props) {\n  var aria = {};\n  Object.keys(props).forEach(function (key) {\n    if (key === 'role' || key.indexOf('aria-') === 0) {\n      aria[key] = props[key];\n      delete props[key];\n    }\n  });\n  return aria;\n};\n\n/**\n * Gets the current timestamp of either `window.performance.now` or `Date.now`\n *\n * @function\n *\n * @returns {Number}                    The timestamp from `window.performance.now` or `Date.now`\n * @memberof core/util\n * @public\n */\n/* istanbul ignore next */\nexports.extractAriaProps = extractAriaProps;\nvar perfNow = function perfNow() {\n  if (typeof window === 'object') {\n    return window.performance.now();\n  } else {\n    return Date.now();\n  }\n};\n\n/**\n * Merges two class name maps into one.\n *\n * The resulting map will only contain the class names defined in the `baseMap` and will be appended\n * with the value from `additiveMap` if it exists. Further, `allowedClassNames` may optionally limit\n * which keys will be merged from `additiveMap` into `baseMap`.\n *\n * Example:\n * ```\n * // merges all matching class names from additiveMap1 with baseMap1\n * const newMap1 = mergeClassNameMaps(baseMap1, additiveMap1);\n *\n * // merge only 'a' and 'b' class names from additiveMap2 with baseMap2\n * const newMap2 = mergeClassNameMaps(baseMap2, additiveMap2, ['a', 'b']);\n * ```\n *\n * @function\n * @param {Object}     baseMap             The source mapping of logical class name to physical\n *                                         class name\n * @param {Object}     additiveMap         Mapping of logical to physical class names which are\n *                                         concatenated with `baseMap` where the logical names match\n * @param {String[]}  [allowedClassNames]  Array of logical class names that can be augmented. When\n *                                         set, the logical class name must exist in `baseMap`,\n *                                         `additiveMap`, and this array to be concatenated.\n *\n * @returns {Object}                       The merged class name map.\n * @memberof core/util\n * @public\n */\nexports.perfNow = perfNow;\nvar mergeClassNameMaps = function mergeClassNameMaps(baseMap, additiveMap, allowedClassNames) {\n  var css = baseMap;\n  if (baseMap && additiveMap) {\n    allowedClassNames = allowedClassNames || Object.keys(additiveMap);\n    // if the props includes a css map, merge them together now\n    css = Object.assign({}, baseMap);\n    allowedClassNames.forEach(function (key) {\n      if (baseMap[key] && additiveMap[key]) {\n        css[key] = baseMap[key] + ' ' + additiveMap[key];\n      }\n    });\n    if (process.env.NODE_ENV === 'test') {\n      return new Proxy({}, {\n        get: function get(target, key) {\n          // use the merged value if it exists and the key otherwise\n          return css[key] || key;\n        }\n      });\n    }\n  }\n  return css;\n};\n\n/**\n * Creates a function that memoizes the result of `fn`.\n *\n * Note that this function is a naive implementation and only checks the first argument for\n * memoization.\n *\n * @function\n * @param {Function}    fn    The function to have its output memoized.\n *\n * @returns {Function}        The new memoized function.\n * @memberof core/util\n * @public\n */\nexports.mergeClassNameMaps = mergeClassNameMaps;\nvar memoize = function memoize(fn) {\n  var cache = {};\n  return function () {\n    var n = arguments.length <= 0 ? undefined : arguments[0];\n    if (n in cache) {\n      return cache[n];\n    } else {\n      var result = fn.apply(void 0, arguments);\n      cache[n] = result;\n      return result;\n    }\n  };\n};\n\n/**\n * Maps over the `children`, discarding any `null` children before and after calling the callback.\n *\n * A replacement for `React.Children.map`.\n *\n * @function\n * @param {*}        children  Children to map over\n * @param {Function} callback  Function to apply to each child. Will not be called if the child is\n *                              `null`. If `callback` returns `null`, the child will be removed from\n *                              the result. If `null` is returned, the item will not be included in\n *                              the final output, regardless of the filter function.\n * @param {Function} [filter]  Filter function applied after mapping.\n *\n * @returns {*}                The processed children or the value of `children` if not an array.\n * @memberof core/util\n * @see https://reactjs.org/docs/react-api.html#reactchildrenmap\n * @public\n */\nexports.memoize = memoize;\nvar mapAndFilterChildren = function mapAndFilterChildren(children, callback, filter) {\n  var result = _react.Children.map(children, function (child) {\n    if (child != null) {\n      for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        rest[_key - 1] = arguments[_key];\n      }\n      return callback.apply(void 0, [child].concat(rest));\n    } else {\n      return child;\n    }\n  });\n  if (result && filter) {\n    return result.filter(filter);\n  } else {\n    return result;\n  }\n};\n\n/**\n * Performs shallow comparison for given objects.\n *\n * @function\n * @param {Obejct}        a    An object to compare.\n * @param {Obejct}        b    An object to compare.\n *\n * @returns {Boolean}          `true` if the values of all keys are strictly equal.\n * @memberof core/util\n * @public\n */\nexports.mapAndFilterChildren = mapAndFilterChildren;\nvar shallowEqual = function shallowEqual(a, b) {\n  if (Object.is(a, b)) {\n    return true;\n  }\n  if (typeof a !== 'object' || a === null || typeof b !== 'object' || b === null) {\n    return false;\n  }\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n\n  // early bail out if the objects have a different number of keys\n  if (aKeys.length !== bKeys.length) {\n    return false;\n  }\n  var hasOwn = Object.prototype.hasOwnProperty.bind(b);\n  for (var i = 0; i < aKeys.length; i++) {\n    var prop = aKeys[i];\n    if (!hasOwn(prop) || !Object.is(a[prop], b[prop])) {\n      return false;\n    }\n  }\n  return true;\n};\nexports.shallowEqual = shallowEqual;","map":{"version":3,"names":["Object","defineProperty","exports","value","enumerable","get","_Job","shallowEqual","perfNow","mergeClassNameMaps","memoize","mapAndFilterChildren","isRenderable","extractAriaProps","coerceFunction","coerceArray","clamp","cap","_always","_interopRequireDefault","require","_is","_unless","_react","ReactIs","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","str","slice","toUpperCase","min","max","Function","array","Array","isArray","tag","isValidElementType","props","aria","keys","forEach","indexOf","window","performance","now","Date","baseMap","additiveMap","allowedClassNames","css","assign","process","env","NODE_ENV","Proxy","target","fn","n","arguments","length","undefined","result","apply","children","callback","filter","Children","map","child","_len","rest","_key","concat","a","b","is","aKeys","bKeys","hasOwn","bind","i","prop"],"sources":["/Users/gitchan/Projects/gitchan-yonsei/2024-enact-template/node_modules/@enact/core/util/util.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"Job\", {\n  enumerable: true,\n  get: function get() {\n    return _Job[\"default\"];\n  }\n});\nexports.shallowEqual = exports.perfNow = exports.mergeClassNameMaps = exports.memoize = exports.mapAndFilterChildren = exports.isRenderable = exports.extractAriaProps = exports.coerceFunction = exports.coerceArray = exports.clamp = exports.cap = void 0;\nvar _always = _interopRequireDefault(require(\"ramda/src/always\"));\nvar _is = _interopRequireDefault(require(\"ramda/src/is\"));\nvar _unless = _interopRequireDefault(require(\"ramda/src/unless\"));\nvar _react = require(\"react\");\nvar ReactIs = _interopRequireWildcard(require(\"react-is\"));\nvar _Job = _interopRequireDefault(require(\"./Job\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n/**\n * A collection of utility methods.\n *\n * @module core/util\n * @exports cap\n * @exports clamp\n * @exports coerceArray\n * @exports coerceFunction\n * @exports extractAriaProps\n * @exports isRenderable\n * @exports Job\n * @exports memoize\n * @exports mergeClassNameMaps\n * @exports perfNow\n * @exports mapAndFilterChildren\n * @exports shallowEqual\n */\n\n/**\n * Capitalizes a given string (not locale-aware).\n *\n * @function\n * @param   {String}    str   The string to capitalize.\n *\n * @returns {String}          The capitalized string.\n * @memberof core/util\n * @public\n */\nvar cap = function cap(str) {\n  return str.slice(0, 1).toUpperCase() + str.slice(1);\n};\n\n/**\n * Limits `value` to be between `min` and `max`.\n *\n * If `min` is greater than `max`, `min` is returned.\n *\n * @function\n * @param   {Number}    min   The minimum value of the range\n * @param   {Number}    max   The maximum value of the range\n * @param   {Number}    value The value that must be within the range\n *\n * @returns {Number}          The clamped value\n * @memberof core/util\n * @public\n */\nexports.cap = cap;\nvar clamp = function clamp(min, max, value) {\n  if (min > max || value < min) return min;\n  if (value > max) return max;\n  return value;\n};\n\n/**\n * If `arg` is a function, return it. Otherwise returns a function that returns `arg`.\n *\n * Example:\n * ```\n *\tconst returnsZero = coerceFunction(0);\n *\tconst returnsArg = coerceFunction(() => 0);\n * ```\n * @function\n * @param {*}    arg    Function or value\n *\n * @returns {Function}  Either `arg` if `arg` is a function, or a function that returns `arg`\n * @memberof core/util\n * @public\n */\nexports.clamp = clamp;\nvar coerceFunction = (0, _unless[\"default\"])((0, _is[\"default\"])(Function), _always[\"default\"]);\n\n/**\n * If `arg` is array-like, return it. Otherwise returns a single element array containing `arg`.\n *\n * Example:\n * ```\n *\tconst returnsArray = coerceArray(0); // [0]\n *\tconst returnsArg = coerceArray([0]); // [0]\n *\tconst returnsObjArg = coerceArray({0: 'zeroth', length: 1});\n * ```\n * @see http://ramdajs.com/docs/#isArrayLike\n * @function\n * @param {*}    array    Array or value\n *\n * @returns {Array}       Either `array` or `[array]`\n * @memberof core/util\n * @public\n */\nexports.coerceFunction = coerceFunction;\nvar coerceArray = function coerceArray(array) {\n  return Array.isArray(array) ? array : [array];\n};\n\n/**\n * Loosely determines if `tag` is a renderable component (either a string or a function).\n *\n * @function\n * @param {*}    tag    Component to test\n *\n * @returns {Boolean}   `true` if `tag` is either a string or a function\n * @memberof core/util\n * @public\n */\nexports.coerceArray = coerceArray;\nvar isRenderable = function isRenderable(tag) {\n  return ReactIs.isValidElementType(tag);\n};\n\n/**\n * Removes ARIA-related props from `props` and returns them in a new object.\n *\n * Specifically, it removes the `role` prop and any prop prefixed with `aria-`. This is useful when\n * redirecting ARIA-related props from a non-focusable root element to a focusable child element.\n *\n * @function\n * @param   {Object}    props    Props object\n *\n * @returns {Object}             ARIA-related props\n * @memberof core/util\n * @public\n */\nexports.isRenderable = isRenderable;\nvar extractAriaProps = function extractAriaProps(props) {\n  var aria = {};\n  Object.keys(props).forEach(function (key) {\n    if (key === 'role' || key.indexOf('aria-') === 0) {\n      aria[key] = props[key];\n      delete props[key];\n    }\n  });\n  return aria;\n};\n\n/**\n * Gets the current timestamp of either `window.performance.now` or `Date.now`\n *\n * @function\n *\n * @returns {Number}                    The timestamp from `window.performance.now` or `Date.now`\n * @memberof core/util\n * @public\n */\n/* istanbul ignore next */\nexports.extractAriaProps = extractAriaProps;\nvar perfNow = function perfNow() {\n  if (typeof window === 'object') {\n    return window.performance.now();\n  } else {\n    return Date.now();\n  }\n};\n\n/**\n * Merges two class name maps into one.\n *\n * The resulting map will only contain the class names defined in the `baseMap` and will be appended\n * with the value from `additiveMap` if it exists. Further, `allowedClassNames` may optionally limit\n * which keys will be merged from `additiveMap` into `baseMap`.\n *\n * Example:\n * ```\n * // merges all matching class names from additiveMap1 with baseMap1\n * const newMap1 = mergeClassNameMaps(baseMap1, additiveMap1);\n *\n * // merge only 'a' and 'b' class names from additiveMap2 with baseMap2\n * const newMap2 = mergeClassNameMaps(baseMap2, additiveMap2, ['a', 'b']);\n * ```\n *\n * @function\n * @param {Object}     baseMap             The source mapping of logical class name to physical\n *                                         class name\n * @param {Object}     additiveMap         Mapping of logical to physical class names which are\n *                                         concatenated with `baseMap` where the logical names match\n * @param {String[]}  [allowedClassNames]  Array of logical class names that can be augmented. When\n *                                         set, the logical class name must exist in `baseMap`,\n *                                         `additiveMap`, and this array to be concatenated.\n *\n * @returns {Object}                       The merged class name map.\n * @memberof core/util\n * @public\n */\nexports.perfNow = perfNow;\nvar mergeClassNameMaps = function mergeClassNameMaps(baseMap, additiveMap, allowedClassNames) {\n  var css = baseMap;\n  if (baseMap && additiveMap) {\n    allowedClassNames = allowedClassNames || Object.keys(additiveMap);\n    // if the props includes a css map, merge them together now\n    css = Object.assign({}, baseMap);\n    allowedClassNames.forEach(function (key) {\n      if (baseMap[key] && additiveMap[key]) {\n        css[key] = baseMap[key] + ' ' + additiveMap[key];\n      }\n    });\n    if (process.env.NODE_ENV === 'test') {\n      return new Proxy({}, {\n        get: function get(target, key) {\n          // use the merged value if it exists and the key otherwise\n          return css[key] || key;\n        }\n      });\n    }\n  }\n  return css;\n};\n\n/**\n * Creates a function that memoizes the result of `fn`.\n *\n * Note that this function is a naive implementation and only checks the first argument for\n * memoization.\n *\n * @function\n * @param {Function}    fn    The function to have its output memoized.\n *\n * @returns {Function}        The new memoized function.\n * @memberof core/util\n * @public\n */\nexports.mergeClassNameMaps = mergeClassNameMaps;\nvar memoize = function memoize(fn) {\n  var cache = {};\n  return function () {\n    var n = arguments.length <= 0 ? undefined : arguments[0];\n    if (n in cache) {\n      return cache[n];\n    } else {\n      var result = fn.apply(void 0, arguments);\n      cache[n] = result;\n      return result;\n    }\n  };\n};\n\n/**\n * Maps over the `children`, discarding any `null` children before and after calling the callback.\n *\n * A replacement for `React.Children.map`.\n *\n * @function\n * @param {*}        children  Children to map over\n * @param {Function} callback  Function to apply to each child. Will not be called if the child is\n *                              `null`. If `callback` returns `null`, the child will be removed from\n *                              the result. If `null` is returned, the item will not be included in\n *                              the final output, regardless of the filter function.\n * @param {Function} [filter]  Filter function applied after mapping.\n *\n * @returns {*}                The processed children or the value of `children` if not an array.\n * @memberof core/util\n * @see https://reactjs.org/docs/react-api.html#reactchildrenmap\n * @public\n */\nexports.memoize = memoize;\nvar mapAndFilterChildren = function mapAndFilterChildren(children, callback, filter) {\n  var result = _react.Children.map(children, function (child) {\n    if (child != null) {\n      for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        rest[_key - 1] = arguments[_key];\n      }\n      return callback.apply(void 0, [child].concat(rest));\n    } else {\n      return child;\n    }\n  });\n  if (result && filter) {\n    return result.filter(filter);\n  } else {\n    return result;\n  }\n};\n\n/**\n * Performs shallow comparison for given objects.\n *\n * @function\n * @param {Obejct}        a    An object to compare.\n * @param {Obejct}        b    An object to compare.\n *\n * @returns {Boolean}          `true` if the values of all keys are strictly equal.\n * @memberof core/util\n * @public\n */\nexports.mapAndFilterChildren = mapAndFilterChildren;\nvar shallowEqual = function shallowEqual(a, b) {\n  if (Object.is(a, b)) {\n    return true;\n  }\n  if (typeof a !== 'object' || a === null || typeof b !== 'object' || b === null) {\n    return false;\n  }\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n\n  // early bail out if the objects have a different number of keys\n  if (aKeys.length !== bKeys.length) {\n    return false;\n  }\n  var hasOwn = Object.prototype.hasOwnProperty.bind(b);\n  for (var i = 0; i < aKeys.length; i++) {\n    var prop = aKeys[i];\n    if (!hasOwn(prop) || !Object.is(a[prop], b[prop])) {\n      return false;\n    }\n  }\n  return true;\n};\nexports.shallowEqual = shallowEqual;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}