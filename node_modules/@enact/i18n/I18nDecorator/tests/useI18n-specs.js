"use strict";

require("@testing-library/jest-dom");
var _react = require("@testing-library/react");
var _react2 = require("react");
var _locale = require("../../locale");
var _useI18n = _interopRequireDefault(require("../useI18n"));
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i["return"] && (_r = _i["return"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
describe('useI18n', function () {
  // Suite-wide setup
  beforeEach(function () {
    (0, _locale.updateLocale)('en-US');
  });
  afterEach(function () {
    (0, _locale.updateLocale)();
  });
  function Component(_ref) {
    var locale = _ref.locale,
      latinLanguageOverrides = _ref.latinLanguageOverrides,
      nonLatinLanguageOverrides = _ref.nonLatinLanguageOverrides;
    var _useState = (0, _react2.useState)({
        rtl: false,
        className: null
      }),
      _useState2 = _slicedToArray(_useState, 2),
      state = _useState2[0],
      setState = _useState2[1];
    var i18n = (0, _useI18n["default"])({
      latinLanguageOverrides: latinLanguageOverrides,
      locale: locale,
      nonLatinLanguageOverrides: nonLatinLanguageOverrides,
      onLoadResources: setState
    });
    var divProps = _objectSpread(_objectSpread({}, state), i18n);
    return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: divProps.className,
      "data-testid": "i18nDiv",
      children: divProps.rtl ? 'rtl' : 'ltr'
    });
  }
  test('should return rtl=false by default', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(Component, {}));
    var expected = 'ltr';
    var i18nDiv = _react.screen.getByTestId('i18nDiv');
    expect(i18nDiv).toHaveTextContent(expected);
  });
  test('should return en-US classes', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(Component, {}));
    var i18nDiv = _react.screen.getByTestId('i18nDiv');
    expect(i18nDiv).toHaveClass('enact-locale-en');
    expect(i18nDiv).toHaveClass('enact-locale-en-US');
    expect(i18nDiv).toHaveClass('enact-locale-US');
  });
  test('should return rtl=true for RTL locales', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(Component, {
      locale: "ar-SA"
    }));
    var expected = 'rtl';
    var i18nDiv = _react.screen.getByTestId('i18nDiv');
    expect(i18nDiv).toHaveTextContent(expected);
  });
  test('should return ar-SA classes', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(Component, {
      locale: "ar-SA"
    }));
    var i18nDiv = _react.screen.getByTestId('i18nDiv');
    expect(i18nDiv).toHaveClass('enact-locale-ar');
    expect(i18nDiv).toHaveClass('enact-locale-ar-SA');
    expect(i18nDiv).toHaveClass('enact-locale-SA');
    expect(i18nDiv).toHaveClass('enact-locale-non-italic');
    expect(i18nDiv).toHaveClass('enact-locale-non-latin');
    expect(i18nDiv).toHaveClass('enact-locale-right-to-left');
  });
  test('should return support overriding to latin locale', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(Component, {
      locale: "ar-SA",
      latinLanguageOverrides: ['ar-SA']
    }));
    var i18nDiv = _react.screen.getByTestId('i18nDiv');
    expect(i18nDiv).toHaveClass('enact-locale-ar');
    expect(i18nDiv).toHaveClass('enact-locale-ar-SA');
    expect(i18nDiv).toHaveClass('enact-locale-SA');
    expect(i18nDiv).toHaveClass('enact-locale-non-italic');
    expect(i18nDiv).toHaveClass('enact-locale-right-to-left');
    expect(i18nDiv).not.toHaveClass('enact-locale-non-latin');
  });
  test('should return support overriding to non-latin locale', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(Component, {
      locale: "en-US",
      nonLatinLanguageOverrides: ['en-US']
    }));
    var i18nDiv = _react.screen.getByTestId('i18nDiv');
    expect(i18nDiv).toHaveClass('enact-locale-en');
    expect(i18nDiv).toHaveClass('enact-locale-en-US');
    expect(i18nDiv).toHaveClass('enact-locale-US');
    expect(i18nDiv).toHaveClass('enact-locale-non-latin');
  });
});